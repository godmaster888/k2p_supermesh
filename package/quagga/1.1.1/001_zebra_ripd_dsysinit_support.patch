From f5063ce26603eeebc56a9cfa950e35b49721ce42 Mon Sep 17 00:00:00 2001
From: Sergey Volga <svolga@dlink.ru>
Date: Fri, 11 Aug 2017 12:25:43 +0300
Subject: [PATCH 1/1] Added dsysinit support

Signed-off-by: Sergey Volga <svolga@dlink.ru>
---
 ripd/rip_main.c | 26 +++++++++++++++++++++++---
 zebra/main.c    | 25 +++++++++++++++++++++++--
 2 files changed, 46 insertions(+), 5 deletions(-)

diff --git a/ripd/rip_main.c b/ripd/rip_main.c
index 4ead9b0..1e51e7b 100644
--- a/ripd/rip_main.c
+++ b/ripd/rip_main.c
@@ -37,6 +37,11 @@
 
 #include "ripd/ripd.h"
 
+#ifdef DLINK_SOFTWARE    /* DLINK dsysinit */
+#include <d-link/d_service_notify.h>
+#endif    /* DLINK dsysinit */
+
+
 /* ripd options. */
 static struct option longopts[] = 
 {
@@ -52,6 +57,9 @@ static struct option longopts[] =
   { "user",        required_argument, NULL, 'u'},
   { "group",       required_argument, NULL, 'g'},
   { "version",     no_argument,       NULL, 'v'},
+#ifdef DLINK_SOFTWARE    /* DLINK dsysinit */
+  { "dsysinitID",  required_argument, NULL, 'I'},
+#endif    /* DLINK dsysinit */
   { 0 }
 };
 
@@ -194,6 +202,9 @@ main (int argc, char **argv)
   int dryrun = 0;
   char *progname;
   struct thread thread;
+#ifdef DLINK_SOFTWARE    /* DLINK dsysinit */
+  int rip_dsysinit_id = 0;
+#endif    /* DLINK dsysinit */
 
   /* Set umask before anything for security */
   umask (0027);
@@ -210,8 +221,8 @@ main (int argc, char **argv)
     {
       int opt;
 
-      opt = getopt_long (argc, argv, "df:i:z:hA:P:u:g:rvC", longopts, 0);
-    
+      opt = getopt_long (argc, argv, "df:i:z:hA:P:u:g:rvCI:", longopts, 0);// FIXME
+
       if (opt == EOF)
 	break;
 
@@ -265,6 +276,11 @@ main (int argc, char **argv)
 	case 'h':
 	  usage (progname, 0);
 	  break;
+#ifdef DLINK_SOFTWARE    /* DLINK dsysinit */
+	case 'I':
+	  rip_dsysinit_id = atoi(optarg);
+	  break;
+#endif    /* DLINK dsysinit */
 	default:
 	  usage (progname, 1);
 	  break;
@@ -295,7 +311,11 @@ main (int argc, char **argv)
   /* Start execution only if not in dry-run mode */
   if(dryrun)
     return (0);
-  
+
+#ifdef DLINK_SOFTWARE    /* DLINK dsysinit */
+  if(rip_dsysinit_id)
+      dlink_service_connect(rip_dsysinit_id);
+#endif    /* DLINK dsysinit */
   /* Change to the daemon program. */
   if (daemon_mode && daemon (0, 0) < 0)
     {
diff --git a/zebra/main.c b/zebra/main.c
index 35cb159..efb47bc 100644
--- a/zebra/main.c
+++ b/zebra/main.c
@@ -42,6 +42,11 @@
 #include "zebra/rtadv.h"
 #include "zebra/zebra_fpm.h"
 
+#ifdef DLINK_SOFTWARE    /* DLINK dsysinit */
+#include <d-link/d_service_notify.h>
+#endif    /* DLINK dsysinit */
+
+
 /* Zebra instance */
 struct zebra_t zebrad =
 {
@@ -86,6 +91,9 @@ struct option longopts[] =
   { "user",        required_argument, NULL, 'u'},
   { "group",       required_argument, NULL, 'g'},
   { "version",     no_argument,       NULL, 'v'},
+#ifdef DLINK_SOFTWARE    /* DLINK dsysinit */
+  { "dsysinitID",  required_argument, NULL, 'I'},
+#endif    /* DLINK dsysinit */
   { 0 }
 };
 
@@ -298,6 +306,9 @@ main (int argc, char **argv)
   struct thread thread;
   char *zserv_path = NULL;
   char *fpm_format = NULL;
+#ifdef DLINK_SOFTWARE    /* DLINK dsysinit */
+  int zebra_dsysinit_id = 0;
+#endif    /* DLINK dsysinit */
 
   /* Set umask before anything for security */
   umask (0027);
@@ -313,9 +324,9 @@ main (int argc, char **argv)
       int opt;
   
 #ifdef HAVE_NETLINK  
-      opt = getopt_long (argc, argv, "bdkf:F:i:z:hA:P:ru:g:vs:C", longopts, 0);
+      opt = getopt_long (argc, argv, "bdkf:F:i:z:hA:P:ru:g:vs:CI:", longopts, 0);
 #else
-      opt = getopt_long (argc, argv, "bdkf:F:i:z:hA:P:ru:g:vC", longopts, 0);
+      opt = getopt_long (argc, argv, "bdkf:F:i:z:hA:P:ru:g:vCI:", longopts, 0);
 #endif /* HAVE_NETLINK */
 
       if (opt == EOF)
@@ -384,6 +395,11 @@ main (int argc, char **argv)
 	case 'h':
 	  usage (progname, 0);
 	  break;
+#ifdef DLINK_SOFTWARE    /* DLINK dsysinit */
+	case 'I':
+	  zebra_dsysinit_id = atoi(optarg);
+	  break;
+#endif    /* DLINK dsysinit */
 	default:
 	  usage (progname, 1);
 	  break;
@@ -447,6 +463,11 @@ main (int argc, char **argv)
   if (dryrun)
     return(0);
 
+#ifdef DLINK_SOFTWARE    /* DLINK dsysinit */
+  if(zebra_dsysinit_id)
+      dlink_service_connect(zebra_dsysinit_id);
+#endif    /* DLINK dsysinit */
+
   /* Count up events for interfaces */
   if_startup_count_up ();
 
-- 
2.11.0

