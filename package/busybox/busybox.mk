#############################################################
#
# busybox
#
#############################################################

BUSYBOX_VERSION = $(call qstrip,$(BR2_BUSYBOX_VERSION))
ifeq ($(BUSYBOX_VERSION),)
BUSYBOX_VERSION = 1.31_stable
endif
BUSYBOX_SITE := $(DLINK_GIT_STORAGE)/busybox
BUSYBOX_LICENSE = GPL-2.0-or-later
BUSYBOX_LICENSE_FILES = LICENSE


BUSYBOX_BUILD_CONFIG = $(BUSYBOX_DIR)/.config

BUSYBOX_CFLAGS = $(TARGET_CFLAGS)

ifeq ($(BR2_PACKAGE_TR069CLIENT),y)
	BUSYBOX_CFLAGS += -DSUPPORT_TR069
endif

ifeq ($(BR2_BUSYBOX_BPF_IN_UDHCP),y)
	BUSYBOX_CFLAGS += -DSUPPORT_BPF_FILTER_IN_UDHCP
endif

BUSYBOX_MAKE_ENV = $(TARGET_MAKE_ENV) CFLAGS="$(BUSYBOX_CFLAGS) -I$(LINUX_HEADERS_DIR)/include"

ifeq ($(BR2_DSYSINIT),y)
BUSYBOX_DEPENDENCIES = deuteron_framework
BUSYBOX_MAKE_ENV += DLINK_SOFTWARE=y
BUSYBOX_LIBS += jansson d_service_notify
endif

ifndef BUSYBOX_CONFIG_FILE
	BUSYBOX_CONFIG_FILE = $(call qstrip,$(BR2_PACKAGE_BUSYBOX_CONFIG))
endif

# If we have external syslogd, force busybox to use it
ifeq ($(BR2_PACKAGE_SYSKLOGD),y)
define BUSYBOX_SET_SYSKLOGD
	@$(SED) "/#include.*busybox\.h/a#define CONFIG_SYSLOGD" \
		$(BUSYBOX_DIR)/init/init.c
endef
endif

define BUSYBOX_COPY_CONFIG
	cp -f $(BUSYBOX_CONFIG_FILE) $(BUSYBOX_BUILD_CONFIG)
endef

define BB_DISABLE_OPTION
	$(call $(if $($(1)),KCONFIG_DISABLE_OPT,KCONFIG_ENABLE_OPT),$(2),$(BUSYBOX_BUILD_CONFIG))
endef

define BB_SWITCH_OPTION
	$(call $(if $($(1)),KCONFIG_ENABLE_OPT,KCONFIG_DISABLE_OPT),$(2),$(BUSYBOX_BUILD_CONFIG))
endef

define BUSYBOX_CONFIGURE_CMDS
	$(BUSYBOX_COPY_CONFIG)
	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_TELNETD,CONFIG_TELNETD)
	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_TELNETD,CONFIG_FEATURE_TELNETD_STANDALONE)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_GZIP,CONFIG_GZIP)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_TAR,CONFIG_FEATURE_TAR_FROM)
	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_TAR,CONFIG_FEATURE_TAR_OLDGNU_COMPATIBILITY)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_TFTP,CONFIG_TFTP)
	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_TFTP,CONFIG_FEATURE_TFTP_GET)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_LSPCI,CONFIG_LSPCI)
	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_LSUSB,CONFIG_LSUSB)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_NICE,CONFIG_NICE)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_CHMOD,CONFIG_CHMOD)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_DMESG,CONFIG_DMESG)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_SYNC,CONFIG_SYNC)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_FLASH_ERASEALL,CONFIG_FLASH_ERASEALL)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_NTP,CONFIG_NTPD)
	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_NTP_SERVER,CONFIG_FEATURE_NTPD_SERVER)
	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_NTP_CONFIG_FILE,CONFIG_FEATURE_NTPD_CONF)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_INETD,CONFIG_INETD)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_INIT,CONFIG_INIT)
	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_INIT,CONFIG_FEATURE_USE_INITTAB)
	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_INIT,CONFIG_FEATURE_INIT_SCTTY)
	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_INIT,CONFIG_FEATURE_INIT_SYSLOG)
	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_INIT,CONFIG_FEATURE_INIT_QUIET)
	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_INIT,CONFIG_INIT_TERMINAL_TYPE)
	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_INIT,CONFIG_FEATURE_INIT_MODIFY_CMDLINE)

	$(call BB_SWITCH_OPTION,BR2_INET_IPV6,CONFIG_FEATURE_IPV6)
	$(call BB_SWITCH_OPTION,BR2_INET_IPV6,CONFIG_PING6)
	$(call BB_SWITCH_OPTION,BR2_INET_IPV6,CONFIG_TRACEROUTE6)
	$(call BB_SWITCH_OPTION,BR2_INET_IPV6,CONFIG_FEATURE_PREFER_IPV4_ADDRESS)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_HTTPD_AUTH,CONFIG_FEATURE_HTTPD_BASIC_AUTH)
	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_HTTPD_AUTH,CONFIG_FEATURE_HTTPD_AUTH_MD5)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_SWAP,CONFIG_MKSWAP)
	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_SWAP,CONFIG_FEATURE_MKSWAP_UUID)
	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_SWAP,CONFIG_SWAPONOFF)
	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_SWAP,CONFIG_FEATURE_SWAPON_PRI)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_SWAP,CONFIG_FEATURE_SWAPON_PRI)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_NANDWRITE,CONFIG_NANDWRITE)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_NANDDUMP,CONFIG_NANDDUMP)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_UBIATTACH,CONFIG_UBIATTACH)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_UBIDETACH,CONFIG_UBIDETACH)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_UBIMKVOL,CONFIG_UBIMKVOL)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_UBIRMVOL,CONFIG_UBIRMVOL)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_UBIRSVOL,CONFIG_UBIRSVOL)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_UBIUPDATEVOL,CONFIG_UBIUPDATEVOL)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_MKNOD,CONFIG_MKNOD)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_SMP_TOP,CONFIG_FEATURE_USE_TERMIOS)
	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_SMP_TOP,CONFIG_FEATURE_TOP_SMP_CPU)
	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_SMP_TOP,CONFIG_FEATURE_SHOW_THREADS)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_ARP,CONFIG_ARP)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_ASH_BASH_COMPAT,CONFIG_ASH_BASH_COMPAT)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_IFCONFIG,CONFIG_IFCONFIG)

	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_IP,CONFIG_IP)
	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_IPADDR,CONFIG_IPADDR)
	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_IPLINK,CONFIG_IPLINK)
	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_IPROUTE,CONFIG_IPROUTE)
	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_IPTUNNEL,CONFIG_IPTUNNEL)
	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_IPRULE,CONFIG_IPRULE)
	$(call BB_SWITCH_OPTION,BR2_BUSYBOX_IPNEIGH,CONFIG_IPNEIGH)

	@yes "" | $(MAKE) ARCH=$(KERNEL_ARCH) CROSS_COMPILE="$(TARGET_CROSS)" \
		-C $(@D) oldconfig
endef

define BUSYBOX_BUILD_CMDS
	$(BUSYBOX_MAKE_ENV) $(MAKE) $(JOBS) CC="$(TARGET_CC)" ARCH=$(KERNEL_ARCH) \
		PREFIX="$(TARGET_DIR)" EXTRA_LDFLAGS="-Wl,-rpath-link,$(STAGING_DIR)/lib -Wl,-rpath-link,$(STAGING_DIR)/usr/lib $(TARGET_LDFLAGS)" EXTRA_LDLIBS="$(BUSYBOX_LIBS)" \
		CROSS_COMPILE="$(TARGET_CROSS)" -C $(@D)
endef

define BUSYBOX_INSTALL_BINARY
	$(BUSYBOX_MAKE_ENV) $(MAKE) CC="$(TARGET_CC)" ARCH=$(KERNEL_ARCH) \
		PREFIX="$(TARGET_DIR)" EXTRA_LDFLAGS="-Wl,-rpath-link,$(STAGING_DIR)/lib -Wl,-rpath-link,$(STAGING_DIR)/usr/lib $(TARGET_LDFLAGS)" \
		CROSS_COMPILE="$(TARGET_CROSS)" CONFIG_PREFIX="$(TARGET_DIR)" EXTRA_LDLIBS="$(BUSYBOX_LIBS)" \
		-C $(@D) install
endef


define BUSYBOX_INSTALL_TARGET_CMDS
	$(BUSYBOX_INSTALL_BINARY)
endef


define BUSYBOX_CLEAN_CMDS
	$(BUSYBOX_MAKE_ENV) $(MAKE) CC="$(TARGET_CC)" ARCH=$(KERNEL_ARCH) \
		PREFIX="$(TARGET_DIR)" EXTRA_LDFLAGS="$(TARGET_LDFLAGS)" \
		CROSS_COMPILE="$(TARGET_CROSS)" CONFIG_PREFIX="$(TARGET_DIR)" \
		-C $(@D) clean
endef

define BUSYBOX_PERMISSIONS
	/bin/busybox                     f 4755 0  0 - - - - -
endef

$(eval $(call GENTARGETS))

