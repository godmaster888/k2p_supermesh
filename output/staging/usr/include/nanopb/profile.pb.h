/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8 at Tue Dec 26 16:00:07 2017. */

#ifndef PB_PROFILE_PROFILE_PB_H_INCLUDED
#define PB_PROFILE_PROFILE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _profile_apson_s {
    int32_t discover_interval;
    int32_t election_interval;
    int32_t max_discoveries;
    int32_t max_elections;
    int32_t idle_time;
    int32_t listen_master_time;
    int32_t reg_time;
    uint32_t stats_report_interval;
    uint32_t stats_request_interval;
    uint32_t echo_interval;
    uint32_t echo_timeout;
    uint32_t max_client;
    uint32_t max_ap;
    int32_t checksum;
/* @@protoc_insertion_point(struct:profile_apson_s) */
} profile_apson_s;

typedef struct _profile_mcs_to_datarate_s {
    pb_size_t datarate_count;
    int32_t datarate[16];
    int32_t checksum;
/* @@protoc_insertion_point(struct:profile_mcs_to_datarate_s) */
} profile_mcs_to_datarate_s;

typedef struct _profile_mesh_s {
    char mesh_ssid[33];
    char mesh_security_mode[16];
    char mesh_encryption_type[16];
    char mesh_psk[65];
    uint32_t max_hops;
    uint32_t max_children;
    pb_size_t eth_list_count;
    char eth_list[5][16];
    pb_size_t eth_speed_count;
    uint32_t eth_speed[5];
    char br_name[16];
    uint32_t mesh_module_antenna_num;
    uint32_t mesh_module_scan_intval;
    uint32_t mesh_module_nbr_aged_timeout;
    uint32_t mesh_module_nbr_max_count;
    char mesh_module_uplink_if_name[16];
    char mesh_module_downlink_if_name[16];
    int32_t arpd_looping_detecting_interval;
    int32_t arpd_network_health_detecting_interval;
    int32_t arpd_network_health_arploss_detecting_interval;
    int32_t arpd_short_arp_size;
    int32_t arpd_long_arp_size;
    uint32_t min_local_speed;
    uint32_t client_snr_threshold;
    uint32_t mesh_snr_threshold;
    int32_t checksum;
/* @@protoc_insertion_point(struct:profile_mesh_s) */
} profile_mesh_s;

typedef struct _profile_snr_to_mcs_s {
    char name[16];
    uint32_t min_snr;
    uint32_t max_snr;
    pb_size_t table_count;
    int32_t table[50];
/* @@protoc_insertion_point(struct:profile_snr_to_mcs_s) */
} profile_snr_to_mcs_s;

typedef struct _profile_snr_to_mcs_tbl_s {
    pb_size_t snr2mcstbl_count;
    profile_snr_to_mcs_s snr2mcstbl[32];
    int32_t checksum;
/* @@protoc_insertion_point(struct:profile_snr_to_mcs_tbl_s) */
} profile_snr_to_mcs_tbl_s;

typedef struct _profile_profile_s {
    profile_apson_s apson;
    profile_mesh_s mesh;
    profile_mcs_to_datarate_s mcs_to_datarate;
    profile_snr_to_mcs_tbl_s snr_to_mcs;
/* @@protoc_insertion_point(struct:profile_profile_s) */
} profile_profile_s;

/* Default values for struct fields */

/* Initializer values for message structs */
#define profile_profile_s_init_default           {profile_apson_s_init_default, profile_mesh_s_init_default, profile_mcs_to_datarate_s_init_default, profile_snr_to_mcs_tbl_s_init_default}
#define profile_apson_s_init_default             {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define profile_mesh_s_init_default              {"", "", "", "", 0, 0, 0, {"", "", "", "", ""}, 0, {0, 0, 0, 0, 0}, "", 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define profile_mcs_to_datarate_s_init_default   {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0}
#define profile_snr_to_mcs_tbl_s_init_default    {0, {profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default, profile_snr_to_mcs_s_init_default}, 0}
#define profile_snr_to_mcs_s_init_default        {"", 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define profile_profile_s_init_zero              {profile_apson_s_init_zero, profile_mesh_s_init_zero, profile_mcs_to_datarate_s_init_zero, profile_snr_to_mcs_tbl_s_init_zero}
#define profile_apson_s_init_zero                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define profile_mesh_s_init_zero                 {"", "", "", "", 0, 0, 0, {"", "", "", "", ""}, 0, {0, 0, 0, 0, 0}, "", 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define profile_mcs_to_datarate_s_init_zero      {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0}
#define profile_snr_to_mcs_tbl_s_init_zero       {0, {profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero, profile_snr_to_mcs_s_init_zero}, 0}
#define profile_snr_to_mcs_s_init_zero           {"", 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}

/* Field tags (for use in manual encoding/decoding) */
#define profile_apson_s_discover_interval_tag    1
#define profile_apson_s_election_interval_tag    2
#define profile_apson_s_max_discoveries_tag      3
#define profile_apson_s_max_elections_tag        4
#define profile_apson_s_idle_time_tag            5
#define profile_apson_s_listen_master_time_tag   6
#define profile_apson_s_reg_time_tag             7
#define profile_apson_s_stats_report_interval_tag 8
#define profile_apson_s_stats_request_interval_tag 9
#define profile_apson_s_echo_interval_tag        10
#define profile_apson_s_echo_timeout_tag         11
#define profile_apson_s_max_client_tag           12
#define profile_apson_s_max_ap_tag               13
#define profile_apson_s_checksum_tag             14
#define profile_mcs_to_datarate_s_datarate_tag   1
#define profile_mcs_to_datarate_s_checksum_tag   2
#define profile_mesh_s_mesh_ssid_tag             1
#define profile_mesh_s_mesh_security_mode_tag    2
#define profile_mesh_s_mesh_encryption_type_tag  3
#define profile_mesh_s_mesh_psk_tag              4
#define profile_mesh_s_max_hops_tag              5
#define profile_mesh_s_max_children_tag          6
#define profile_mesh_s_eth_list_tag              7
#define profile_mesh_s_eth_speed_tag             8
#define profile_mesh_s_br_name_tag               9
#define profile_mesh_s_mesh_module_antenna_num_tag 10
#define profile_mesh_s_mesh_module_scan_intval_tag 11
#define profile_mesh_s_mesh_module_nbr_aged_timeout_tag 12
#define profile_mesh_s_mesh_module_nbr_max_count_tag 13
#define profile_mesh_s_mesh_module_uplink_if_name_tag 14
#define profile_mesh_s_mesh_module_downlink_if_name_tag 15
#define profile_mesh_s_arpd_looping_detecting_interval_tag 16
#define profile_mesh_s_arpd_network_health_detecting_interval_tag 17
#define profile_mesh_s_arpd_network_health_arploss_detecting_interval_tag 18
#define profile_mesh_s_arpd_short_arp_size_tag   19
#define profile_mesh_s_arpd_long_arp_size_tag    20
#define profile_mesh_s_min_local_speed_tag       21
#define profile_mesh_s_client_snr_threshold_tag  22
#define profile_mesh_s_mesh_snr_threshold_tag    23
#define profile_mesh_s_checksum_tag              24
#define profile_snr_to_mcs_s_name_tag            1
#define profile_snr_to_mcs_s_min_snr_tag         2
#define profile_snr_to_mcs_s_max_snr_tag         3
#define profile_snr_to_mcs_s_table_tag           4
#define profile_snr_to_mcs_tbl_s_snr2mcstbl_tag  1
#define profile_snr_to_mcs_tbl_s_checksum_tag    2
#define profile_profile_s_apson_tag              1
#define profile_profile_s_mesh_tag               2
#define profile_profile_s_mcs_to_datarate_tag    3
#define profile_profile_s_snr_to_mcs_tag         4

/* Struct field encoding specification for nanopb */
extern const pb_field_t profile_profile_s_fields[5];
extern const pb_field_t profile_apson_s_fields[15];
extern const pb_field_t profile_mesh_s_fields[25];
extern const pb_field_t profile_mcs_to_datarate_s_fields[3];
extern const pb_field_t profile_snr_to_mcs_tbl_s_fields[3];
extern const pb_field_t profile_snr_to_mcs_s_fields[5];

/* Maximum encoded size of messages (where known) */
#define profile_profile_s_size                   19431
#define profile_apson_s_size                     124
#define profile_mesh_s_size                      441
#define profile_mcs_to_datarate_s_size           187
#define profile_snr_to_mcs_tbl_s_size            18667
#define profile_snr_to_mcs_s_size                580

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define PROFILE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
