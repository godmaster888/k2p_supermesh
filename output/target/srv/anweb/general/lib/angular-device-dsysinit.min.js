webpackJsonp([2],[function(module,exports,__webpack_require__){module.exports=__webpack_require__(159)},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){"use strict";__webpack_require__(160);var device=angular.module("device",["angular-es6-promise"]);__webpack_require__(161)("device"),__webpack_require__(2)("device"),device.factory("device",["$http",function($http){__webpack_require__(163).set(__webpack_require__(164));var dosSettings=__webpack_require__(193);return{cpe:__webpack_require__(3),funcs:__webpack_require__(5),wan:__webpack_require__(194),multirange:__webpack_require__(205),lan:__webpack_require__(206),wifi:__webpack_require__(217),vlan:__webpack_require__(225),ipsec:__webpack_require__(228),statsRouting:__webpack_require__(233),policyRouting:__webpack_require__(238),shorewall:__webpack_require__(239),system:__webpack_require__(240),voip:__webpack_require__(241),systemTime:__webpack_require__(242),systemLog:__webpack_require__(246),statsDHCP:__webpack_require__(249),igmpx:__webpack_require__(253),portSettings:__webpack_require__(254),statsClients:__webpack_require__(257),udpxy:__webpack_require__(260),usbInfo:__webpack_require__(265),ddns:__webpack_require__(266),urlfilter:__webpack_require__(270),macfilter:__webpack_require__(273),ipfilter:__webpack_require__(277),vservers:__webpack_require__(280),filebrowser:__webpack_require__(287),dlna:__webpack_require__(289),samba:__webpack_require__(291),ftp:__webpack_require__(294),users:__webpack_require__(296),misc:__webpack_require__(298),raccess:__webpack_require__(299),routing:__webpack_require__(302),statsSessions:__webpack_require__(304),statsNetwork:__webpack_require__(306),statsMulticast:__webpack_require__(308),wifiClientMgm:__webpack_require__(310),firmware:__webpack_require__(312),schedule:__webpack_require__(314),dmz:__webpack_require__(319),wifiMacFilter:__webpack_require__(320),torrent:__webpack_require__(321),cpuram:__webpack_require__(323),statsPorts:__webpack_require__(325),tr69:__webpack_require__(327),dynPortMapping:__webpack_require__(329),dns:__webpack_require__(331),usbmodemBasic:__webpack_require__(332),portAllocation:__webpack_require__(334)(),wifiWdsDsysinit:__webpack_require__(337),xdsl:__webpack_require__(338),printserver:__webpack_require__(339),statsDsl:__webpack_require__(341),usbmodem:__webpack_require__(342),snmp:__webpack_require__(344),dosFirewall:__webpack_require__(347),wifiSupermesh:__webpack_require__(348),yandexDns:__webpack_require__(350),etherwan:__webpack_require__(352),dosSettings:dosSettings.dsysinit,safeDns:__webpack_require__(353),bandwidth:__webpack_require__(354),wifiRoaming:__webpack_require__(355),vpnServer:__webpack_require__(357),bgp:__webpack_require__(359),gre:__webpack_require__(360),ifgroups:__webpack_require__(362),adblock:__webpack_require__(363),wifiShaping:__webpack_require__(365),qos_dsysinit:__webpack_require__(366),eogre:__webpack_require__(367),eoip:__webpack_require__(369),ospf:__webpack_require__(371),loadBalancing:__webpack_require__(372),qosHWDsysinit:__webpack_require__(374),chilli:__webpack_require__(375),odu_control:__webpack_require__(378),l2tpv3:__webpack_require__(380),openVPN:__webpack_require__(381),vrrp:__webpack_require__(382),wanReservationDsysinit:__webpack_require__(384),portMirroring:__webpack_require__(386),pki:__webpack_require__(388),twamp:__webpack_require__(389)}}])},,function(module,exports,__webpack_require__){"use strict";var _=__webpack_require__(4),funcs=(__webpack_require__(162),__webpack_require__(5));module.exports=function(moduleName){angular.module(moduleName).provider("somovd",function(){var providerObj={somovdEndPoint:null,$get:["$http","$q",function($http,$q){function Somovd(config){function post(opt){if(opt.config=opt.config?_.extend(opt.config,config):config,taskLimit>taskCount){var successCb=function(data,status,headers,config){data.result?data=data.error?data.error:data.result:_.isArray(data)&&(data={rq:_.map(data,function(item){return item.error?item.error:item.result})}),opt.cb&&opt.cb(data),opt.defer.resolve(data)},errorCb=function(data,status,headers,config){opt.defer.reject(data)},finallyCb=function(){for(var _len=arguments.length,params=Array(_len),_key=0;_len>_key;_key++)params[_key]=arguments[_key];taskCount--,_.each(doneHooks,function(hook){hook&&hook.apply(void 0,params)}),taskQueue.length&&post(taskQueue.shift())};taskCount++,$http.post(providerObj.somovdEndPoint,opt.request,opt.config).success(successCb).error(errorCb)["finally"](finallyCb)}else taskQueue.push(opt)}function prepare(opt){opt.defer=$q.defer(),$q.all(_.map(prepareHooks,function(hook){return hook(_.flatten([opt.request]))})).then(function(){post(opt)})["catch"](function(){opt.defer.reject()});var promise=opt.defer.promise;return publish(opt),promise}function jsonrpc(method,params){return{jsonrpc:"2.0",method:method,params:params,id:_.random(1e3)}}function subscribe(method,params,handler){subscribes.push({method:method,params:params,handler:handler})}function publish(opt){function checkSubscribe(subscribe,request){function hasParam(elem,params){return _.every(params,function(value,key){return elem[key]&&(elem[key]==value||_.isObject(value)&&_.isEqual(elem[key],value))})}var method=subscribe.method,params=subscribe.params;_.isArray(request)||(request=[request]);var positions=[];return _.each(request,function(elem,inx){elem.method==method&&hasParam(elem.params,params)&&positions.push(inx)}),positions}_.each(subscribes,function(elem){function success(result){_.each(requestPositions,function(pos){var output=_.has(result,"rq")?result.rq[pos]:result;output.request=_.isArray(opt.request)?opt.request[pos]:opt.request,elem.handler(null,output)})}function error(error){elem.handler(error)}var requestPositions=checkSubscribe(elem,opt.request);requestPositions.length&&opt.defer.promise.then(success,error)})}var taskQueue=[],taskLimit=1,taskCount=0,prepareHooks=[],doneHooks=[],subscribes=[];return{subscribe:subscribe,publish:publish,getInstance:function(config){return Somovd(config)},prepareHook:function(cb){prepareHooks.push(cb)},doneHook:function(cb){doneHooks.push(cb)},read:function(){var args=new funcs.argSchema(arguments);return args.checkin("number id","opt function cb","opt object options")?prepare({request:jsonrpc("read",{id:args.id,options:args.options}),cb:args.cb}):args.checkin("array pack","opt function cb","opt object options")?prepare({request:_.map(args.pack,function(id){return jsonrpc("read",{id:id,options:args.options})}),cb:args.cb}):void 0},write:function(){var args=new funcs.argSchema(arguments);if(args.checkin("number id","object data","opt number pos","opt bool save","opt function cb","opt object options"))return prepare({request:jsonrpc("write",{id:args.id,pos:args.pos,data:args.data,save:_.isUndefined(args.save)||args.save,options:args.options}),cb:args.cb});if(args.checkin("array pack","opt bool save","opt function cb","opt object options")){var req=_.map(args.pack,function(item){return jsonrpc("write",{id:item.id,pos:item.pos,data:item.data,options:args.options})});return(_.isUndefined(args.save)||args.save)&&req.push(jsonrpc("cmd",{id:20})),prepare({request:req,cb:args.cb})}},remove:function(){var args=new funcs.argSchema(arguments);if(args.checkin("number id","object data","opt number pos","opt bool save","opt function cb"))return prepare({request:jsonrpc("remove",{id:args.id,pos:args.pos,data:args.data,save:!0}),cb:args.cb});if(args.checkin("array pack","opt bool save","opt function cb")){var req=_.map(args.pack,function(item){return jsonrpc("remove",{id:item.id,pos:item.pos,data:item.data})});return req.push(jsonrpc("cmd",{id:20})),prepare({request:req,cb:args.cb})}},multi:function(){var args=new funcs.argSchema(arguments);if(args.checkin("object pack","opt bool save","opt function cb")){var req=[];return _.each(args.pack.remove,function(item){req.push(jsonrpc("remove",{id:item.id,data:item.data,pos:item.pos}))}),_.each(args.pack.write,function(item){req.push(jsonrpc("write",{id:item.id,data:item.data,pos:item.pos}))}),_.each(args.pack.read,function(id){req.push(jsonrpc("read",{id:id}))}),req.push(jsonrpc("cmd",{id:20})),prepare({request:req,cb:args.cb})}},reboot:function(save,cb){return prepare({request:jsonrpc("cmd",{id:save?8:6}),cb:cb,config:{timeout:5e3}})},save:function(cb){return prepare({request:jsonrpc("cmd",{id:20}),cb:cb})},reset:function(cb){return prepare({request:jsonrpc("cmd",{id:10}),cb:cb,config:{timeout:5e3}})},backup:function(cb){return prepare({request:jsonrpc("cmd",{id:12}),cb:cb})},build_backup:function(cb){return prepare({request:jsonrpc("cmd",{id:44}),cb:cb})},cmd:function(id,cb){return prepare({request:jsonrpc("cmd",{id:id}),cb:cb})}}}return Somovd()}]};return providerObj})}},function(module,exports){module.exports=function(){}},function(module,exports){"use strict";var dms=null;module.exports={set:function(actualModule){return dms=actualModule},get:function(){return dms}}},function(module,exports,__webpack_require__){"use strict";module.exports={lan:__webpack_require__(165),wifi:__webpack_require__(176),wifiMacFilter:__webpack_require__(183),dns:__webpack_require__(185),portAllocation:__webpack_require__(187),wifiWdsDsysinit:__webpack_require__(190),wifiShaping:__webpack_require__(191)}},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}var _promise=__webpack_require__(7),_promise2=_interopRequireDefault(_promise),_=__webpack_require__(4),cpe=__webpack_require__(3),cpex=__webpack_require__(119),funcs=__webpack_require__(5),converter=__webpack_require__(166);module.exports=function(){function pull(cb){function initPull(response){var config=funcs.buildTree(response[0].result.ParameterList),attrs=funcs.buildTreeAttributes(response[1].result.ParameterList);attrs.DeviceMode=funcs.fetchBranch(config,"Device.DeviceInfo.DeviceMode");var lan={config:converter.cpeToNative.config(config),attrs:converter.cpeToNative.attrs(attrs)};return dms.data={Device:lan.config},dms.attrs={Device:lan.attrs},__initialCpeData=funcs.deepClone(config),__initialNativeData=funcs.deepClone(dms.data),__initialCpeAttrs=funcs.deepClone(attrs),cb&&cb(),_promise2["default"].resolve()}function errorCb(response){var error=response&&response.error?response.error:{};return cb&&cb(error),_promise2["default"].reject(error)}var paths=["Device.Network.","Device.DeviceInfo.DeviceMode","Device.Routing.","Device.Hostnames."];return cpex.parallel([{method:"GetParameterValues",args:[paths]},{method:"GetParameterAttributes",args:[paths]}]).then(initPull,errorCb)}function status(){return funcs.getChangesWithRemoved(__initialNativeData,dms.data)}function push(cb,version){function prepareIPv6(configIP,initialData,data){return _.each(data.LAN,function(lan,key){if(_.has(lan,"IPv6")&&!_.size(lan.IPv6.StaticIP)&&_.size(initialData.LAN[key].IPv6.StaticIP)){var ipInst=lan.IPv6.__IPInst?lan.IPv6.__IPInst:"1";funcs.setValue(ipInst+".IPv6Address",{},configIP)}}),configIP}function successCb(){cb&&cb()}function errorCb(response){var error=response&&response.error?response.error:{};return cb&&cb(error),_promise2["default"].reject(error)}function prepareHostnames(initialHosts,configHosts){var result={};return _.each(configHosts,function(elem,key){if(-1==key.indexOf("+")){var host=initialHosts[key];host&&(result[key]=host)}}),result}function prepareNewHostnames(initialHosts,configHosts){var result={};return _.each(configHosts,function(elem,key){if(_.isUndefined(elem.Aliasv4))elem.Alias=elem.Aliasv6;else if(_.isUndefined(elem.Aliasv6))elem.Alias=elem.Aliasv4;else{var host=initialHosts[key];elem.Alias=host.Alias!=elem.Aliasv4?elem.Aliasv4:elem.Aliasv6}result[key]={MAC:elem.MAC,Alias:elem.Alias}}),result}function prepareDHCP(servers){_.each(servers,function(server){server.Enable=null})}if(_.size(dms.status())){var initCpeConfig=converter.nativeToCpe.config(__initialNativeData.Device,version),cpeConfig=converter.nativeToCpe.config(dms.data.Device,version);_.has(cpeConfig.Device,"Hostnames")&&_.size(cpeConfig.Device.Hostnames)&&(cpeConfig.Device.Hostnames=prepareNewHostnames(__initialNativeData.Device.Hostnames,cpeConfig.Device.Hostnames)),initCpeConfig.Device.Hostnames=prepareHostnames(__initialNativeData.Device.Hostnames,cpeConfig.Device.Hostnames),prepareDHCP(funcs.fetchBranch(initCpeConfig,"Device.Network.Server.DHCP.")),cpeConfig.Device.Network.IP=prepareIPv6(cpeConfig.Device.Network.IP,__initialNativeData.Device,dms.data.Device);var diffModel=funcs.newConfig.makeDiff(initCpeConfig,cpeConfig,__initialCpeAttrs);return cpe.ApplyDifference(diffModel).then(successCb,errorCb)}}function remove(cb){}function supported(){function lan(){return{isModem:!1,SUPPORT_MULTI_LAN:!1,IPv4:!!dms.attrs&&!!funcs.fetchBranch(dms.attrs,"Device.LAN.IPv4."),IPv6:!!dms.attrs&&!!funcs.fetchBranch(dms.attrs,"Device.LAN.IPv6.")}}function ipv4(){return makeSupported("IPv4")}function ipv6(){return makeSupported("IPv6")}function makeSupported(type){var input=funcs.fetchBranch(dms.attrs,"Device.LAN."+type+"."),supported=funcs.newConfig.makeSupportedModel(input);return supported&&supported.DHCP&&(supported.DHCP.__base=!0),supported.AddressingModeAvailable&&(supported.AddressingModeAvailable=input.AddressingModeAvailable["enum"]),supported}return{lan:lan,ipv4:ipv4,ipv6:ipv6}}function constraints(){return{ipv4:function(){var enums=funcs.newConfig.makeEnumModel(dms.attrs,"Device.LAN.");return{MinHosts:2,MaxHosts:16777214,dhcp:{modes:funcs.fetchBranch(enums,"Device.LAN.IPv4.DHCP.Mode.")},addressingModes:funcs.fetchBranch(enums,"Device.LAN.IPv4.AddressingMode.")}},ipv6:function(){var enums=funcs.newConfig.makeEnumModel(dms.attrs,"Device.LAN.");return{MinPrefix:64,MaxPrefix:128,dhcp:{autoconfigurationModes:funcs.fetchBranch(enums,"Device.LAN.IPv6.DHCP.Server.AutoconfigurationMode.")}}}}}function clean(){dms.data=null,dms.attrs=null}function getInitData(){return funcs.deepClone(__initialNativeData)}var __initialNativeData=null,__initialCpeData=null,__initialCpeAttrs=null,dms={pull:pull,push:push,status:status,remove:remove,supported:supported,constraints:constraints,clean:clean,data:null,attrs:null,getInitData:getInitData};return dms}()},function(module,exports,__webpack_require__){"use strict";module.exports={cpeToNative:__webpack_require__(167),nativeToCpe:__webpack_require__(174)}},function(module,exports,__webpack_require__){"use strict";module.exports={config:__webpack_require__(168),attrs:__webpack_require__(173)}},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function isDisabledChange(ip,addrMode){return ip&&"Dynamic"==addrMode&&"DHCP"==ip.data.AddressingType}function getGateway(input,addrType,addrMode,ip){var mode=funcs.fetchBranch(input,"Device.DeviceInfo.DeviceMode");if("AccessPoint"==mode){if(!addrMode||"Static"==addrMode||ip&&"Dynamic"==addrMode&&"Static"==ip.data.AddressingType){var conn="ipv4"==addrType?"Static":"Staticv6",path="Device.Network.Connection."+conn+".1.",staticConn=funcs.fetchBranch(input,path);if(!staticConn)return;return staticConn.Gateway}if(!_.has(input.Device,"Routing"))return"";var conn="ipv4"==addrType?"DHCP":"DHCPv6",connPath="Device.Network.Connection."+conn+".1.",routePath="Device.Routing."+("ipv4"==addrType?"IPv4":"IPv6")+".Routes.",routes=funcs.fetchBranch(input,routePath);if(!_.size(routes))return"";var defRoute=_.find(routes,function(elem){var destIP="ipv4"==addrType?"0.0.0.0/0":"::/0";return elem.Destination==destIP&&elem.Origin==connPath});return defRoute?defRoute.GatewayIPAddress:""}}function getLans(input){function makeLanSections(input,version){function getIPs(input,ifaceLink,version){var rootPath="Device.Network.IP.",ips=funcs.newConfig.normalize(funcs.fetchBranch(input,rootPath)),ipInst=_.findKey(ips,function(e){return e.LowerLayer==ifaceLink});if(!ipInst)return null;var ipPrefix="ipv4"==version?"IPv4Address":"IPv6Address",ipPath=rootPath+ipInst+"."+ipPrefix+".",ipIface=funcs.fetchBranch(input,ipPath);if(!ipIface)return null;var ipList=funcs.newConfig.normalize(ipIface);return _.map(ipList,function(elem,inst){return{link:ipPath+inst+".",data:elem}})}var dhcpPath="Device.Network.Server.DHCP.",dhcp=funcs.fetchBranch(input,dhcpPath),dnsPath="Device.Network.Server.DNS.",dns=funcs.newConfig.normalize(funcs.fetchBranch(input,dnsPath)),groupPath="Device.Network.Group.",group=funcs.newConfig.normalize(funcs.fetchBranch(input,groupPath));return _.compact(_.map(dhcp,function(elem,inst){if(_.isObject(elem)){var output=_defineProperty3["default"]({iface:{},dhcp:{}},version,{dns:{},group:{},ip:null});if(output.iface.link=elem.Interface,output.iface.data=funcs.fetchBranch(input,output.iface.link),"GUEST"!=output.iface.data.Name){var ifaceGroup=_.find(group,function(g){return g.LAN===output.iface.link});output.iface.name=ifaceGroup?ifaceGroup.Name.match("#")?ifaceGroup.Name.split("#")[0]:ifaceGroup.Name:output.iface.data.name,output.dhcp.link=dhcpPath+inst+".",output.dhcp.inst=inst,output.dhcp.data=elem;var rootPath="Device.Network.IP.",ips=funcs.newConfig.normalize(funcs.fetchBranch(input,rootPath)),ipInst=_.findKey(ips,function(e){return e.LowerLayer==output.iface.link});ipInst&&(output.dhcp.ipInst=ipInst),output[version].ip=getIPs(input,output.iface.link,version);var dnsInst=_.findKey(dns,function(e){return e.Interface==output.iface.link});dnsInst&&(output[version].dns.link=dnsPath+dnsInst+".",output[version].dns.inst=dnsInst,output[version].dns.data=dns[dnsInst]);var groupInst=_.findKey(group,function(e){return e.LAN==output.iface.link});return groupInst&&(output[version].group.link=groupPath+groupInst+".",output[version].group.inst=groupInst,output[version].group.data=group[groupInst]),output}}}))}function addLanSections(result,sections){_.each(sections,function(section){result[section.iface.link]||(result[section.iface.link]={}),result[section.iface.link]=_.extend(result[section.iface.link],section)})}var result={};return addLanSections(result,makeLanSections(input,"ipv4")),addLanSections(result,makeLanSections(input,"ipv6")),_.chain(result).values().sortBy(function(elem){return elem.iface.link}).value()}function prepareIP(ipList,devMode,connDHCP){var addrType="AccessPoint"!=devMode||_.isEmpty(connDHCP)?"Static":connDHCP.Enable?"DHCP":"Static",enabledIP=_.filter(ipList,function(e){return"Enabled"==e.data.Status||"Enabling"==e.data.Status}),staticIP=_.filter(ipList,function(e){return"DHCP"==addrType?e.data.AddressingType==addrType||"Static"==e.data.AddressingType:e.data.AddressingType==addrType});return staticIP&&staticIP.length?{data:enabledIP[0].data,link:staticIP&&staticIP.length?staticIP[0].link:""}:void 0}function getIPAddress(ip){return ip?ip.split("/")[0]:""}function getSubnetMask(ip){return ip?funcs.ipv4.mask["long"](ip.split("/")[1]):""}function getReservedRules(reserved,version){function mapFn(elem,inst){return elem.__inst=inst,elem}function filterFn(elem){return"ipv4"==version?funcs.is.ipv4(elem.IP):"ipv6"==version&&funcs.is.ipv6(elem.IPv6)}var input=funcs.newConfig.normalize(reserved);return _.chain(input).map(mapFn).filter(filterFn).value()}function getHosts(dns,type){var hosts=funcs.newConfig.normalize(dns.Hosts);return _.chain(hosts).map(function(host,inst){return host.__id=inst,host}).filter(function(host){return!("ipv4"!=type||!host||!funcs.is.ipv4(host.IPAddress))||!("ipv6"!=type||!host||!funcs.is.ipv6(host.IPAddress))}).value()}function getHost(hostnames,mac){var result={},host=_.find(hostnames,function(elem){return elem.MAC&&elem.MAC.toUpperCase()==mac.toUpperCase()});return host&&(result.Hostname=host.Alias,result.__Inst=_.findKey(hostnames,function(elem){return elem.MAC.toUpperCase()==mac.toUpperCase()})),result}function getOption(tag){switch(tag){case 1:case 3:case 6:case 7:case 33:case 41:case 42:case 65:case 68:case 69:case 70:case 71:case 74:case 121:return"ipv4";case 12:case 43:case 60:case 64:case 66:return"text";case 15:case 40:case 119:case 120:return"domain";case 23:case 26:case 35:case 37:case 38:case 58:case 59:return"dec";case 121:return"hex"}}function getDynDNS(dns){function findCurDNS(dns){var output=_.find(dns,function(obj){return _.isObject(obj)?!0:void 0});return output?output.Address:null}var output=[],curDns=findCurDNS(dns);if(!curDns)return output;var orders=curDns.order;return _.each(orders,function(inst){output.push(curDns[inst].IPAddress)}),output}function getStatDNS(conn){return conn?_.chain(conn.DNS).filter(function(e){return _.isObject(e)&&!_.isArray(e)}).map(function(e){return e.IPAddress}).value():[]}function getDnsOrder(conn){return conn&&conn.DNS?conn.DNS.order:[]}function getDNSValue(isAuto,dynDns,statDns,inst){var curDns=isAuto?dynDns:statDns;return curDns&&curDns[inst]?curDns[inst]:""}var _defineProperty2=__webpack_require__(169),_defineProperty3=_interopRequireDefault(_defineProperty2),T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5);module.exports=function(input){var pattern=T({"->":["$input","$lans","$dhcp","$dhcpv6","$connDhcp","connDhcpv6","$devMode","$hostnames","LAN","LANNumberOfEntries"],$input:":external",$lans:["$input",function(i){return getLans(i)}],$connDhcp:["$input",function(i){return funcs.fetchBranch(i,"Device.Network.Connection.DHCP.1.")}],$connDhcpv6:["$input",function(i){return funcs.fetchBranch(i,"Device.Network.Connection.DHCPv6.1.")}],$devMode:["$input",function(i){return funcs.fetchBranch(i,"Device.DeviceInfo.DeviceMode")}],$hostnames:["$input",function(i){return funcs.newConfig.normalize(funcs.fetchBranch(i,"Device.Hostnames."))}],$autoDNS:["$input",function(i){return funcs.fetchBranch(i,"Device.Network.DNS.Current")}],Hostnames:["$hostnames",function(h){return h}],DeviceMode:["$devMode",function(dm){return dm}],LANNumberOfEntries:["$lans",function(l){return l.length}],LAN:{"->":["$raw","?","$iface","IPv4","IPv6","DNS"],"{$raw,$i}":["$parent",function(p){return p.$lans}],":":["$i",function(i){return i+1}],"?":["$raw",function(r){return!!r}],$iface:["$raw",function(r){return r.iface}],$dns:["$raw",function(r){return r.ipv4.dns}],$group:["$raw",function(r){return r.ipv4.group}],__ifaceLink:["$iface*",function(i){return i.link}],Enable:["$iface*",function(i){return i.data.Enable}],Name:["$iface*",function(i){return i.name}],IPv4:{"->":["$raw","?","$ip","$dhcp","$dns","$group","$iface","AddressingMode","StaticIP","StaticIPNumberOfEntries","DHCP","DNS"],$raw:["$parent",function(p){return p.$raw}],"?":["$raw",function(r){return!!r.ipv4}],$ip:["$raw",function(r){return r.ipv4.ip}],$dhcp:["$raw",function(r){return r.dhcp}],$dns:["$raw",function(r){return r.ipv4.dns}],$group:["$raw",function(r){return r.ipv4.group}],$iface:["$raw",function(r){return r.iface}],AddressingMode:["$root",function(r){return"AccessPoint"!=r.$devMode||_.isEmpty(r.$connDhcp)?"Static":r.$connDhcp.Enable?"Dynamic":"Static"}],StaticIPNumberOfEntries:1,StaticIP:{"->":["$ip","?","1"],$ip:["$parent",function(p){return p.$ip}],$dns:["$parent",function(p){return p.$dns}],$group:["$parent",function(p){return p.$group}],$addrMode:["$parent",function(p){return p.AddressingMode}],"?":["$ip",function(ip){return!!ip}],1:{"->":!0,$ip:["$parent","$root",function(p,r){return prepareIP(p.$ip,r.$devMode,r.$connDhcp)}],$dns:["$parent",function(p){return p.$dns}],$group:["$parent",function(p){return p.$group}],$addrMode:["$parent",function(p){return p.$addrMode}],"?":["$ip*",function(ip){return!!ip||!!ip.length}],AddnHostname:["$group*",function(group){return group.data?group.data.DomainName:void 0}],Address:["$ip*",function(ip){return getIPAddress(ip.data.IPAddress)}],SubnetMask:["$ip*",function(ip){return getSubnetMask(ip.data.IPAddress)}],__StaticIPLink:["$ip*",function(ip){return ip.link}],GatewayAddress:["$root","$addrMode","$ip*",function(r,addrMode,ip){return getGateway(r.$input,"ipv4",addrMode,ip)}]}},DHCP:{"->":["$dhcp","$iface","$connDhcp","$autoDNS","Server","Relay","DHCPCustomOpts","$dynDns","$statDns","$isAutoDns"],$dhcp:["$parent",function(p){return p.$dhcp}],$dns:["$parent",function(p){return p.$dns}],$group:["$parent",function(p){return p.$group}],$ip:["$parent","$root",function(p,r){return prepareIP(p.$ip,r.$devMode,r.$connDhcp)}],$iface:["$parent",function(p){return p.$iface}],$connDhcp:["$root",function(r){return r.$connDhcp}],$statDns:["$connDhcp",function(o){return getStatDNS(o)}],$dynDns:["$root",function(r){return r.$autoDNS?getDynDNS(r.$autoDNS):void 0}],$isAutoDns:["$statDns",function(sdns){return!(sdns&&sdns.length)}],$isStatic:["$connDhcp",function(o){return!!o&&!!/Static/.test(o.link)}],$addrMode:["$root",function(r){return"AccessPoint"!=r.$devMode||_.isEmpty(r.$connDhcp)?"Static":r.$connDhcp.Enable?"Dynamic":"Static"}],DisabledChange:["$ip","$addrMode",function(ip,am){return isDisabledChange(ip,am)}],__DHCPLink:["$dhcp*",function(d){return d.link}],__DHCPInst:["$dhcp*",function(d){return d.inst}],__DNSLink:["$dns*",function(d){return d.link}],__DNSInst:["$dns*",function(d){return d.inst}],__GroupInst:["$group*",function(g){return g.inst}],__GroupLink:["$group*",function(g){return g.link}],Mode:["$dhcp*","$root",function(d,r){if(_.has(d.data,"Enable")){var enable="None"!=d.data.IPv4Mode&&("AccessPoint"!=r.$devMode||"Disabled"!=d.data.Status);return enable?""!=d.data.RelayIP?"Relay":"Server":"Disable"}}],DNSAutomatical:["$isStatic","$isAutoDns",function(isSt,a){return isSt?void 0:a}],DNSServer1:["$isAutoDns","$dynDns","$statDns",function(a,d,s){return getDNSValue(a,d,s,0)}],DNSServer2:["$isAutoDns","$dynDns","$statDns",function(a,d,s){return getDNSValue(a,d,s,1)}],DNSOrder:["$root",function(r){return getDnsOrder(r.$connDhcp)}],Server:{"->":["$dhcp","StaticAddress"],$dhcp:["$parent",function(p){return p.$dhcp.data}],$dns:["$parent",function(p){return p.$dns.data}],$iface:["$parent",function(p){return p.$iface}],MinAddress:["$dhcp*",function(d){return d.StartIP}],MaxAddress:["$dhcp*",function(d){return d.EndIP}],LeaseTime:["$dhcp*",function(d){return d.Lease?d.Lease/60:void 0}],StaticAddressNumberOfEntries:["StaticAddress*",function(st){return _.size(st)}],StaticAddress:{"->":!0,$dhcp:["$parent",function(p){return p.$dhcp}],$hostnames:["$root",function(r){return r.$hostnames}],"?":["$dhcp",function(d){return _.has(d,"Reservation")}],"{$raw, $i}":["$dhcp*",function(d){return getReservedRules(d.Reservation,"ipv4")}],":":["$i",function(i){return(i+1).toString()}],$host:["$hostnames","$raw*",function(h,r){return getHost(h,r.MAC)}],IPAddress:["$raw*",function(r){return r.IP||""}],MACAddress:["$raw*",function(r){return r.MAC||""}],Hostname:["$host*","$raw*",function(h,r){return h.Hostname}],LeaseTime:["$raw*",function(r){return r.Lease?r.Lease/60:void 0}],__HostInst:["$host*","$raw*",function(h,r){return h.__Inst}],__Inst:["$raw*",function(r){return r.__inst}]},DNSRelay:["$dns*",function(d){return _.has(d,"Enable")?d.Enable:void 0}],ProxyARP:["$iface*",function(i){return i.data.ProxyARP}]},Relay:{"->":!0,$dhcp:["$parent",function(p){return p.$dhcp.data}],"?":["$dhcp",function(d){return _.has(d,"RelayIP")}],DHCPServerIPAddress:["$dhcp*",function(d){return d.RelayIP?d.RelayIP:""}],CircuitID:["$dhcp*",function(d){return d.RelayAgent?d.RelayAgent.CircuitID:void 0}],RemoteID:["$dhcp*",function(d){return d.RelayAgent?d.RelayAgent.RemoteID:void 0}],SubscriberID:["$dhcp*",function(d){return d.RelayAgent?d.RelayAgent.SubscriberID:void 0}]},DHCPCustomOpts:{"->":["?"],$dhcpd:["$parent",function(p){return p.$dhcp}],"?":["$dhcpd",function(d){return _.has(d.data,"Options")}],"{$raw, $i}":["$dhcpd",function(d){return funcs.newConfig.normalize(d.data.Options)}],__id:["$i*",function(i){return i}],Tag:["$raw*",function(r){return r.Option.toString()}],Force:["$raw*",function(r){return r.Force}],Value:["$raw*",function(r){return r.Value}],Type:["$raw*",function(r){return getOption(r.Option)}]}},DNS:{"->":["$dns","Hosts"],$dns:["$parent",function(p){return p.$dns}],Hosts:{"->":["?"],"?":["$parent",function(p){return _.has(p.$dns.data,"Hosts")}],"{$hosts, $i}":["$parent",function(p){return getHosts(p.$dns.data,"ipv4")}],":":["$i",function(i){return(i+1).toString()}],__Inst:["$hosts*",function(h){return h.__id}],IPAddress:["$hosts*",function(h){return h.IPAddress}],Hostname:["$hosts*",function(h){return h.Hostname}]}}},IPv6:{"->":["$raw","?","$ip","$dhcp","$dns","StaticIP","StaticIPNumberOfEntries","DHCP","DNS"],$raw:["$parent",function(p){return p.$raw}],"?":["$raw",function(r){return!!r.ipv6.ip}],$ip:["$raw",function(r){return r.ipv6.ip}],$dhcp:["$raw",function(r){return r.dhcp}],$dns:["$raw",function(r){return r.ipv6.dns}],__DHCPLink:["$dhcp*",function(d){return d.link}],__DHCPInst:["$dhcp*",function(d){return d.inst}],__IPInst:["$dhcp*",function(d){return d.ipInst}],__MultiIP:!0,DeviceMode:["$root",function(r){return r.$devMode}],StaticIPNumberOfEntries:["StaticIP",function(st){return _.size(st)}],StaticIP:{"->":!0,"{$ip, $i}":["$parent",function(p){return p.$ip}],":":["$i",function(i){return(i+1).toString()}],$arrIpv6:["$ip*",function(ip){return ip.data?ip.data.IPAddress.split("/"):void 0}],Address:["$arrIpv6*",function(arr){return arr[0]}],Prefix:["$arrIpv6*",function(arr){return arr[1]}],AddressingType:["$ip*",function(ip){return ip.data.AddressingType}],__StaticIPLink:["$ip*",function(ip){return ip.link}],GatewayAddress:["$root","AddressingType",function(r,addrType){return getGateway(r.$input,"ipv6",addrType)}]},DHCP:{"->":["$dhcp","$dns","Server"],$dhcp:["$parent",function(p){return p.$dhcp.data}],$dns:["$parent",function(p){return p.$dns}],__DNSInst:["$dns*",function(d){return d.inst}],Server:{"->":["$dhcp","StaticAddress"],$dhcp:["$parent",function(p){return p.$dhcp}],$dns:["$parent",function(p){return p.$dns.data}],AutoconfigurationMode:["$dhcp*",function(d){return"Autoconf"==d.IPv6Mode?"Stateless":"DHCP"==d.IPv6Mode?"Statefull":"Disable"}],MinAddress:["$dhcp*",function(d){return d.StartIPv6?d.StartIPv6.replace(/:/g,""):""}],MaxAddress:["$dhcp*",function(d){return d.EndIPv6?d.EndIPv6.replace(/:/g,""):""}],LeaseTime:["$dhcp*",function(d){return d.Leasev6?d.Leasev6/60:void 0}],DHCPAddressShort:!0,IPv6DefaultRouter:["$dhcp*",function(d){return d.IPv6DefaultRouter}],DNSRelay:["$dns*",function(d){return _.has(d,"Enable")?d.Enable:void 0}],StaticAddressNumberOfEntries:["StaticAddress*",function(st){return _.size(st)}],StaticAddress:{"->":!0,$dhcp:["$parent",function(p){return p.$dhcp}],$hostnames:["$root",function(r){return r.$hostnames}],"?":["$dhcp",function(d){return _.has(d,"Reservation")}],"{$raw, $i}":["$dhcp*",function(d){return getReservedRules(d.Reservation,"ipv6")}],":":["$i",function(i){return(i+1).toString()}],$host:["$hostnames","$raw*",function(h,r){return getHost(h,r.MAC)}],IPAddress:["$raw*",function(r){return r.IPv6||""}],MACAddress:["$raw*",function(r){return r.MAC||""}],Hostname:["$host*","$raw*",function(h,r){return h.Hostname}],LeaseTime:["$raw*",function(r){return r.Lease?r.Lease/60:void 0}],__HostInst:["$host*","$raw*",function(h,r){return h.__Inst}],__Inst:["$raw*",function(r){return r.__inst}]}}},DNS:{"->":["$dns","Hosts"],$dns:["$parent",function(p){return p.$dns}],Hosts:{"->":["?"],"?":["$parent",function(p){return _.has(p.$dns.data,"Hosts")}],"{$hosts, $i}":["$parent",function(p){return getHosts(p.$dns.data,"ipv6")}],":":["$i",function(i){return(i+1).toString()}],__Inst:["$hosts*",function(h){return h.__id}],IPAddress:["$hosts*",function(h){return h.IPAddress}],Hostname:["$hosts*",function(h){return h.Hostname}]}}}}});return pattern.build({$input:input})}},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}exports.__esModule=!0;var _defineProperty=__webpack_require__(170),_defineProperty2=_interopRequireDefault(_defineProperty);exports["default"]=function(obj,key,value){return key in obj?_defineProperty2["default"](obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0
}):obj[key]=value,obj}},function(module,exports,__webpack_require__){module.exports={"default":__webpack_require__(171),__esModule:!0}},function(module,exports,__webpack_require__){__webpack_require__(172);var $Object=__webpack_require__(18).Object;module.exports=function(it,key,desc){return $Object.defineProperty(it,key,desc)}},function(module,exports,__webpack_require__){var $export=__webpack_require__(16);$export($export.S+$export.F*!__webpack_require__(26),"Object",{defineProperty:__webpack_require__(22).f})},function(module,exports,__webpack_require__){"use strict";function isSupported(input,path){var attr=getAttr(input,path);return _.size(attr)>0}function getAttr(input,path){return funcs.fetchBranch(input,path)}function getAddressingModes(deviceMode){return{access:"readWrite",type:"string","enum":"AccessPoint"==deviceMode?["Static","Dynamic"]:["Static"],"default":"Static"}}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5);module.exports=function(input){var pattern=T({"->":["$input","LAN"],$input:":external",LAN:{"->":["$devMode","IPv4"],$devMode:["$parent",function(p){return p.$input.DeviceMode}],Enable:["$root",function(r){return getAttr(r.$input,"Device.Network.Interface.Bridge.#template.Enable.")}],Name:["$root",function(r){return getAttr(r.$input,"Device.Network.Interface.Bridge.#template.Ifname.")}],IPv4:{"->":!0,$devMode:["$parent",function(p){return p.$devMode}],AddressingMode:{"->":["?"],"?":["$root",function(r){return"AccessPoint"==r.$input.DeviceMode}],access:"readWrite",type:"string","default":"Static","enum":["Static","Dynamic"]},AddressingModeAvailable:["$devMode",function(dm){return getAddressingModes(dm)}],StaticIP:{"->":!0,Address:{access:"readWrite",type:"IPv4Address","default":""},SubnetMask:{access:"readWrite",type:"IPv4Address","default":""},AddnHostname:{access:"readWrite",type:"string","default":"Dlink.local"},GatewayAddress:{"->":["?"],"?":["$root",function(r){return"AccessPoint"==r.$input.DeviceMode}],access:"readWrite",type:"IPv4Address","default":""}},DHCP:{"->":!0,Mode:{access:"readWrite",type:"string","enum":["Disable","Server","Relay"],"default":"Server"},Server:{"->":["StaticAddress"],MinAddress:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.StartIP.")}],MaxAddress:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.EndIP.")}],LeaseTime:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.Lease.")}],DNSRelay:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DNS.#template.Enable.")}],StaticAddress:{"->":!0,IPAddress:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.Reservation.#template.IP.")}],MACAddress:["$root*",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.Reservation.#template.MAC.")}],Hostname:["$root*",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.Reservation.#template.Host.")}],LeaseTime:["$root*",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.Reservation.#template.Lease.")}]},ProxyARP:["$root",function(r){return getAttr(r.$input,"Device.Network.Interface.Bridge.#template.ProxyARP.")}]},Relay:{"->":!0,DHCPServerIPAddress:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.RelayIP.")}],CircuitID:["$root",function(r){return isSupported(r.$input,"Device.Network.Server.DHCP.#template.RelayAgent.CircuitID.")?getAttr(r.$input,"Device.Network.Server.DHCP.#template.RelayAgent.CircuitID."):void 0}],RemoteID:["$root",function(r){return isSupported(r.$input,"Device.Network.Server.DHCP.#template.RelayAgent.RemoteID.")?getAttr(r.$input,"Device.Network.Server.DHCP.#template.RelayAgent.RemoteID."):void 0}],SubscriberID:["$root",function(r){return isSupported(r.$input,"Device.Network.Server.DHCP.#template.RelayAgent.SubscriberID.")?getAttr(r.$input,"Device.Network.Server.DHCP.#template.RelayAgent.SubscriberID."):void 0}]},DHCPCustomOpts:{"->":!0,Tag:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.Options.#template.Option.")}],Value:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.Options.#template.Value.")}],Force:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.Options.#template.Force.")}],Type:{access:"readWrite",type:"string","default":""}}},DNS:{"->":!0,Hosts:{"->":!0,IPAddress:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DNS.#template.Hosts.#template.IPAddress.")}],Hostname:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DNS.#template.Hosts.#template.Hostname.")}]}}},IPv6:{"->":["?"],"?":["$root",function(r){return!!getAttr(r.$input,"Device.Network.IP.#template.IPv6Address.")}],StaticIP:{"->":!0,Address:{access:"readWrite",type:"IPv6Address","default":""},Prefix:{access:"readWrite",type:"string","default":""},GatewayAddress:{"->":["?"],"?":["$root",function(r){return"AccessPoint"==r.$input.DeviceMode}],access:"readWrite",type:"IPv6Address","default":""}},DHCP:{"->":!0,Server:{"->":!0,AutoconfigurationMode:{access:"readWrite",type:"string","enum":["Disable","Stateless","Statefull"],"default":"Statefull"},MinAddress:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.StartIPv6.")}],MaxAddress:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.EndIPv6.")}],LeaseTime:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.Leasev6.")}],DNSRelay:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DNS.#template.Enable.")}],StaticAddress:{"->":!0,IPAddress:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.Reservation.#template.IPv6.")}],MACAddress:["$root*",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.Reservation.#template.MAC.")}],Hostname:["$root*",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.Reservation.#template.Host.")}],LeaseTime:["$root*",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.Reservation.#template.Lease.")}]},IPv6DefaultRouter:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DHCP.#template.IPv6DefaultRouter.")}]}},DNS:{"->":!0,Hosts:{"->":!0,IPAddress:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DNS.#template.Hosts.#template.IPAddress.")}],Hostname:["$root",function(r){return getAttr(r.$input,"Device.Network.Server.DNS.#template.Hosts.#template.Hostname.")}]}}}}});return input?pattern.build({$input:input}):{}}},function(module,exports,__webpack_require__){"use strict";module.exports={config:__webpack_require__(175)}},function(module,exports,__webpack_require__){"use strict";function getLans(input){return _.map(input,function(data,inst){return{data:data,inst:inst}})}function getInterfaces(lans){return _.map(lans,function(lan){var data=lan.data,params=/Device\.Network\.Interface\.(.*)\.(.*)\./.exec(lan.data.__ifaceLink);return{data:data,type:params[1],inst:params[2]}})}function getDHCP(lans,type){return _.map(lans,function(lan,index){function getInst(ipv4,ipv6,index){return ipv4&&ipv4.__DHCPInst?ipv4.__DHCPInst:ipv6&&ipv6.__DHCPInst?ipv6.__DHCPInst:"new_inst_"+index}var ipv4=lan.data.IPv4?lan.data.IPv4.DHCP:void 0,ipv6=lan.data.IPv6?lan.data.IPv6.DHCP:void 0;return{ipv4:ipv4,ipv6:ipv6,inst:getInst(ipv4,ipv6,index)}})}function getIPs(lans,type){function addIP(result,input,type){input[type]&&_.each(input[type].StaticIP,function(elem,index){elem.__StaticIPLink||(elem.__StaticIPLink="Device.Network.IP."+(input[type].__IPInst?input[type].__IPInst:"1")+"."+type+"Address.new_inst_"+index+".");var params=/Device\.Network\.IP\.(.*)\.(.*)\.(.*)\./.exec(elem.__StaticIPLink),inst=params[1];result[inst]||(result[inst]=[]),result[inst].push({data:elem,type:params[2],inst:params[3]})})}var result={};return _.each(lans,function(lan){addIP(result,lan.data,"IPv4"),addIP(result,lan.data,"IPv6")}),result}function getIPv4Address(input){return input.Address+"/"+funcs.ipv4.mask["short"](input.SubnetMask)}function getIPv6Address(input){return input.Address+"/"+input.Prefix}function getIPv4Mode(input){return"Disable"==input.Mode?"None":"DHCP"}function getIPv6Mode(input){switch(input.AutoconfigurationMode){case"Stateless":return"Autoconf";case"Statefull":return"DHCP";case"Disable":return"None"}}function getDHCPEnabled(mode,v4,v6){if(!mode||"AccessPoint"!=mode)return!0;var v4Mode=v4?getIPv4Mode(v4):"None",v6Mode=v6?getIPv6Mode(v6):"None";return"None"!=v4Mode||"None"!=v6Mode}function getDNS(lans,version){return _.compact(_.map(lans,function(lan){var input=funcs.fetchBranch("IPv4"==version?lan.data.IPv4.DHCP:lan.data.IPv6.DHCP),hostsv4=lan.data.IPv4?funcs.fetchBranch(lan.data.IPv4.DNS):void 0,hostsv6=lan.data.IPv6?funcs.fetchBranch(lan.data.IPv6.DNS):void 0;return input.__DNSInst?{data:input.Server,inst:input.__DNSInst,hostsv4:hostsv4,hostsv6:hostsv6}:void 0}))}function getDNSAP(v4){function addDNS(output,value,inst){output[inst]={IPAddress:value}}var output={};return _.has(v4.DHCP,"DNSAutomatical")&&!v4.DHCP.DNSAutomatical&&(v4.DHCP&&v4.DHCP.DNSServer1&&addDNS(output,v4.DHCP.DNSServer1,v4.DHCP.DNSOrder&&v4.DHCP.DNSOrder[0]?v4.DHCP.DNSOrder[0]:"+1"),v4.DHCP&&v4.DHCP.DNSServer2&&addDNS(output,v4.DHCP.DNSServer2,v4.DHCP.DNSOrder&&v4.DHCP.DNSOrder[1]?v4.DHCP.DNSOrder[1]:"+2")),output}function getGroup(lans){return _.compact(_.map(lans,function(lan){var input=lan.data.IPv4?funcs.fetchBranch(lan.data.IPv4.DHCP):void 0,domainName=lan.data.IPv4?_.values(funcs.fetchBranch(lan.data.IPv4.StaticIP)):void 0;return input.__GroupInst?{domainName:domainName[0].AddnHostname?domainName[0].AddnHostname.toLowerCase():domainName[0].AddnHostname,data:input.Server,inst:input.__GroupInst}:void 0}))}function getRows(sv4,sv6,field){function makeRows(sv,field,type){if(!sv)return[];var sv=filterElems(sv[field],type);return _.values(sv)}function filterElems(reservation,type){return _.each(reservation,function(elem,id){/-$/.test(id)&&delete reservation[id],elem.IPType=type}),reservation}var output=[];return output=output.concat(makeRows(sv4,field,"IPv4")),output=output.concat(makeRows(sv6,field,"IPv6"))}function getReservationIP(staticIP,ips,type){if(!ips)return staticIP;var ip=_.find(ips,{type:type});if(!ip)return staticIP;var subnetFunc="IPv4Address"==type?funcs.ipv4:funcs.ipv6,mask="IPv4Address"==type?ip.data.SubnetMask:ip.data.Prefix,networkIP=subnetFunc.subnet.getNetworkAddress(ip.data.Address,mask);if(subnetFunc.subnet.belongNetwork(networkIP,staticIP,mask))return staticIP;if("IPv4Address"==type){var hostMask=subnetFunc.address.not(mask),host=subnetFunc.subnet.getNetworkAddress(staticIP,hostMask),address=subnetFunc.address.or(networkIP,host);return address}var prefixHex=subnetFunc.prefix.toHex(mask),prefixHost=subnetFunc.prefix.not(prefixHex),fullStaticIP=subnetFunc.address.full(staticIP),host=subnetFunc.address.and(fullStaticIP,prefixHost),address=subnetFunc.address.or(subnetFunc.address.full(networkIP),host);return subnetFunc.address["short"](address)}function getDhcpOption(ds){var opt=[];return ds&&(opt=_.filter(ds,function(st,inst){return/[^-]$/.test(inst)})),opt}function getHosts(dhcps,hostnames){function getInst(mac,hostnames,key){var hostKey=_.findKey(hostnames,function(elem){return mac.toUpperCase()==elem.MAC.toUpperCase()});return hostKey?hostKey:"+"+key}var output=[];return _.each(dhcps,function(elem,id){var dhcpv4=elem.ipv4,dhcpv6=elem.ipv6,serverv4=dhcpv4?dhcpv4.Server:{},serverv6=dhcpv6?dhcpv6.Server:{};if(_.has(serverv4,"StaticAddress")||_.has(serverv6,"StaticAddress")){var rows=getRows(serverv4,serverv6,"StaticAddress");if(rows.length){var hosts=[];_.each(rows,function(row,key){var inst=row.__HostInst?row.__HostInst:getInst(row.MACAddress,hostnames,key),hostIndex=_.findIndex(hosts,function(elem){return elem.__Inst==inst});-1!=hostIndex?"IPv4"==row.IPType?hosts[hostIndex].Hostnamev4=row.Hostname:hosts[hostIndex].Hostnamev6=row.Hostname:hosts.push({MAC:row.MACAddress,__Inst:inst,Hostnamev4:"IPv4"==row.IPType?row.Hostname||"":void 0,Hostnamev6:"IPv6"==row.IPType?row.Hostname||"":void 0})}),output=output.concat(hosts)}}}),output}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5);module.exports=function(input,version){var pattern=T({"->":["$input","$version","Device"],$input:":external",$version:":external",Device:{Network:{"->":["$input","$version","$lans","$ifaces","$dhcpv4","$dns","$group","$hosts","$ips","IP","Interface","Server","Group","Connection"],$input:["$root",function(r){return r.$input}],$version:["$root",function(r){return r.$version}],$lans:["$input",function(i){return getLans(i.LAN)}],$ifaces:["$lans",function(l){return getInterfaces(l)}],$dhcps:["$lans",function(l){return getDHCP(l)}],$dns:["$lans","$version",function(l,v){return getDNS(l,v)}],$ips:["$lans",function(l){return getIPs(l)}],$group:["$lans",function(l){return getGroup(l)}],Group:{"->":["?"],"?":["$parent",function(o){return o.$group.length}],"{$input}":["$parent",function(r){return r.$group}],":":["$input",function(i){return i.inst}],DomainName:["$input",function(i){return i.domainName}]},Connection:{"->":["?","$lans","Static","Staticv6","DHCP"],"?":["$root",function(r){return"AccessPoint"==r.$input.DeviceMode}],$lans:["$parent",function(r){return r.$lans}],Static:{"->":["?"],$v4:["$parent",function(p){return _.filter(p.$lans,function(e){return _.has(e.data,"IPv4")})}],"?":["$v4",function(v4){return!!v4.length}],"{$v4Arr, $inst}":["$v4",function(v4){return v4}],":":["$inst",function(i){return i+1}],Gateway:["$v4Arr",function(v){return"Static"==v.data.IPv4.AddressingMode?v.data.IPv4.StaticIP[1].GatewayAddress:void 0}],IPAddress:["$v4Arr",function(v){return"Static"==v.data.IPv4.AddressingMode?getIPv4Address(v.data.IPv4.StaticIP[1]):void 0}]},Staticv6:{"->":["?"],$v6:["$parent",function(p){return _.filter(p.$lans,function(e){return _.has(e.data,"IPv6")})}],"?":["$v6",function(v6){return!!v6.length}],"{$v6Arr, $inst}":["$v6",function(v6){return v6}],":":["$inst",function(i){return i+1}],Gateway:["$v6Arr",function(v){return v.data.IPv6.StaticIP[1]?v.data.IPv6.StaticIP[1].GatewayAddress:void 0}],IPAddress:["$v6Arr",function(v){return v.data.IPv6.StaticIP[1]?getIPv6Address(v.data.IPv6.StaticIP[1]):void 0}]},DHCP:{"->":["?"],$v4:["$parent",function(p){return _.filter(p.$lans,function(e){return _.has(e.data,"IPv4")})}],"?":["$v4",function(v4){return!!v4.length}],"{$v4Arr, $inst}":["$v4",function(v4){return v4}],":":["$inst",function(i){return i+1}],Enable:["$v4Arr",function(v){return"Dynamic"==v.data.IPv4.AddressingMode}],DNS:["$v4Arr*",function(v){return getDNSAP(v.data.IPv4)}]}},Interface:{"->":["$ifaces","Bridge"],$ifaces:["$parent",function(p){return p.$ifaces}],Bridge:{"->":!0,"{$iface,$i}":["$parent",function(o){return _.filter(o.$ifaces,function(e){return"Bridge"==e.type})}],":":["$iface*",function(i){return i.inst}],Enable:["$iface*",function(o){return o.data.Enable}],Ifname:["$iface*",function(o){return o.data.Name}],ProxyARP:["$iface*",function(o){return o.data.IPv4.DHCP.Server.ProxyARP}]}},IP:{"->":["?","$ip","$i","IPv4Address","IPv6Address"],"?":["$parent",function(o){return _.size(o.$ips)&&"AccessPoint"!=o.$input.DeviceMode}],"{$ip,$i}":["$parent",function(o){return o.$ips}],":":["$i",function(i){return i}],IPv4Address:{"->":["$ip","?"],"{$ip,$i}":["$parent",function(p){return _.filter(p.$ip,function(e){return"IPv4Address"==e.type})}],"?":["$ip",function(o){return!!o}],":":["$ip",function(o){return o?o.inst:void 0}],IPAddress:["$ip",function(o){return getIPv4Address(o.data)}]},IPv6Address:{"->":["$ip","?"],"{$ip,$i}":["$parent",function(p){return _.filter(p.$ip,function(e){return"IPv6Address"==e.type})}],"?":["$ip",function(o){return!!o}],":":["$ip",function(o){return o?o.inst:void 0}],Enable:["$ip",function(o){return o.data.Enable}],IPAddress:["$ip",function(o){return getIPv6Address(o.data)}]}},Server:{"->":["?","$ips","$dhcps","DHCP","DNS"],"?":["$parent",function(o){return o.$dhcps.length||o.$dns.length}],$ips:["$parent",function(p){return p.$ips}],$dhcps:["$parent",function(p){return p.$dhcps}],$dns:["$parent",function(p){return p.$dns}],DHCP:{"->":["?","$ip","$dhcpipv4","$dhcpipv6","$serveripv4","$serveripv6","$relay","Reservation","Options","RelayAgent"],"?":["$parent",function(o){return o.$dhcps.length}],$ip:["$parent",function(r){return _.values(r.$ips)[0]}],"{$dhcp,$i}":["$parent",function(o){return o.$dhcps}],":":["$dhcp*",function($d){return $d.inst}],$dhcpipv4:["$dhcp*",function(d){return d.ipv4}],$dhcpipv6:["$dhcp*",function(d){return d.ipv6}],$serveripv4:["$dhcpipv4*",function(d){return d.Server}],$serveripv6:["$dhcpipv6*",function(d){return d.Server}],$relay:["$dhcpipv4*",function(d){return d.Relay}],$mode:["$root",function(r){return r.$input.DeviceMode}],Enable:["$mode","$dhcpipv4","$serveripv6",function(m,d,s){return getDHCPEnabled(m,d,s)}],IPv4Mode:["$dhcpipv4*",function(d){return getIPv4Mode(d)}],StartIP:["$serveripv4*",function(s){return s.MinAddress}],EndIP:["$serveripv4*",function(s){return s.MaxAddress}],Lease:["$serveripv4*","$dhcpipv4*",function(s,d){return s.LeaseTime&&"Server"==d.Mode?60*s.LeaseTime:void 0}],RelayIP:["$dhcpipv4*","$relay*",function(d,r){return"Relay"==d.Mode?r.DHCPServerIPAddress:""}],StartIPv6:["$serveripv6*",function(s){return"::"+s.MinAddress}],EndIPv6:["$serveripv6*",function(s){return"::"+s.MaxAddress}],Leasev6:["$serveripv6*","$dhcpipv6",function(s,d){return!s.LeaseTime||"Stateless"!=s.AutoconfigurationMode&&"Statefull"!=s.AutoconfigurationMode?void 0:60*s.LeaseTime}],IPv6Mode:["$serveripv6*",function(s){return getIPv6Mode(s)}],RelayAgent:{"->":["?"],$dhcpipv4:["$parent",function(p){return p.$dhcpipv4}],$relay:["$parent",function(p){return p.$relay}],"?":["$relay",function(r){return!(!r||!r.CircuitID&&!r.RemoteID&&!r.SubscriberID)}],CircuitID:["$dhcpipv4*","$relay*",function(d,r){return"Relay"==d.Mode?r.CircuitID:""}],RemoteID:["$dhcpipv4*","$relay*",function(d,r){return"Relay"==d.Mode?r.RemoteID:""}],SubscriberID:["$dhcpipv4*","$relay*",function(d,r){return"Relay"==d.Mode?r.SubscriberID:""}]},Reservation:{"->":["?"],$serveripv4:["$parent",function(p){return p.$serveripv4}],$serveripv6:["$parent",function(p){return p.$serveripv6}],$ip:["$parent",function(p){return p.$ip}],"?":["$serveripv4","$serveripv6",function(sv4,sv6){return _.has(sv4,"StaticAddress")||_.has(sv6,"StaticAddress")}],"{$raw, $i}":["$serveripv4","$serveripv6",function(sv4,sv6){return getRows(sv4,sv6,"StaticAddress")}],":":["$raw*","$i",function(r,i){return r.__Inst||"new_inst_"+i}],Enable:!0,IP:["$raw*","$ip",function(r,ip){return funcs.is.ipv4(r.IPAddress)?getReservationIP(r.IPAddress,ip,"IPv4Address"):""}],IPv6:["$raw*","$ip",function(r,ip){return funcs.is.ipv6(r.IPAddress)?getReservationIP(r.IPAddress,ip,"IPv6Address"):""}],MAC:["$raw*",function(r){return r.MACAddress.toUpperCase()||""}],Lease:["$raw*",function(r){return r.LeaseTime?60*r.LeaseTime:0}]},Options:{"->":!0,$dhcpipv4:["$parent",function(p){return p.$dhcpipv4}],$options:["$dhcpipv4",function(d){return getDhcpOption(d.DHCPCustomOpts)}],"{$raw, $i}":["$options",function(o){return o}],":":["$raw*","$i*",function(r,i){return r.__id?r.__id:"+"+i}],Option:["$raw*",function(r){return Number(r.Tag)}],Value:["$raw*",function(r){return r.Value}],Force:["$raw*",function(r){return r.Force}]},IPv6DefaultRouter:["$serveripv6*",function(s){return"Stateless"==s.AutoconfigurationMode||"Statefull"==s.AutoconfigurationMode?s.IPv6DefaultRouter:void 0}]},DNS:{"->":["?","$input","Hosts"],"?":["$parent",function(o){return o.$dns.length}],"{$input}":["$parent",function(o){return o.$dns}],":":["$input",function(i){return i.inst}],Enable:["$input",function(i){return i.data?i.data.DNSRelay:void 0}],Hosts:{"->":["?"],$hostsipv4:["$parent",function(p){return p.$input.hostsv4}],$hostsipv6:["$parent",function(p){return p.$input.hostsv6}],"?":["$hostsipv4","$hostsipv6",function(hv4,hv6){return _.has(hv4,"Hosts")||_.has(hv6,"Hosts")}],"{$hosts, $i}":["$hostsipv4","$hostsipv6",function(hv4,hv6){return getRows(hv4,hv6,"Hosts")}],":":["$hosts*","$i",function(h,i){return h.__Inst||"new_inst_"+i}],IPAddress:["$hosts*",function(h){return h.IPAddress}],Hostname:["$hosts*",function(h){return h.Hostname}]}}}},Hostnames:{"->":!0,$input:["$root",function(r){return r.$input}],$lans:["$input",function(i){return getLans(i.LAN)}],$dhcps:["$lans",function(l){return getDHCP(l)}],$hostnames:["$input",function(i){return i.Hostnames}],"{$hosts, $i}":["$dhcps","$hostnames",function(d,h){return getHosts(d,h)}],":":["$hosts*",function(h){return h.__Inst}],MAC:["$hosts*",function(h){return h.MAC}],Aliasv4:["$hosts*",function(h){return h.Hostnamev4}],Aliasv6:["$hosts*",function(h){return h.Hostnamev6}]}}});return pattern.build({$input:input,$version:version})}},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}var _promise=__webpack_require__(7),_promise2=_interopRequireDefault(_promise),funcs=__webpack_require__(5),cpe=__webpack_require__(3),cpex=__webpack_require__(119),_=__webpack_require__(4),converter=__webpack_require__(177);module.exports=function(){function getInitData(){return funcs.deepClone(__initialData)}function pull(cb){__pull([paths.wifi,paths.interfaces],cb)}function pullCommon(cb){var configPaths=[paths.wifi+"RegulatoryDomain.",paths.radio,paths.apProfile,paths.interfaces,paths.bridgeIfaces,paths.stationProfile,paths.regDomain,paths.statistics+"*.Channel",paths.statistics+"*.EndPoint.",paths.smProfile];__pull(configPaths,cb)}function pullClient(cb){var configPaths=[paths.radio,paths.apProfile,paths.stationProfile,paths.interfaces,paths.bridgeIfaces,paths.devMode,paths.statistics+"*.EndPoint.",paths.statistics+"*.Channel"];__pull(configPaths,cb)}function pullAdv(cb){var configPaths=[paths.radio,paths.apProfile,paths.statistics+"*.OperatingChannelBandwidth"];__pull(configPaths,cb)}function pullWMM(cb){__pull([paths.radio],cb)}function pullWDS(cb){__pull([],cb)}function getChannels(band){var radioInst="5GHz"==band?"2":"1",radio=dms.data?_.find(dms.data.Device.WiFi.Radio,function(r){return r.OperatingFrequencyBand==band}):void 0,radioPath=paths.radio+(radio?radio.Inx:radioInst),freqPath=radioPath+".OperatingFrequencyBand",channelsPath={list:radioPath+".PossibleChannels",statistics:paths.statistics+(radio?radio.Inx:radioInst)+".Workload.",groups:paths.statistics+(radio?radio.Inx:radioInst)+".ChannelGroups.",operatingBandwidth:radioPath+".Advanced.OperatingChannelBandwidth",supportedBandwidth:radioPath+".Advanced.PossibleChannelBandwidth"};return cpe.GetParameterValues([freqPath,channelsPath.list,channelsPath.statistics,channelsPath.groups,channelsPath.operatingBandwidth,channelsPath.supportedBandwidth]).then(function(response){var config=funcs.buildTree(response.result.ParameterList),input=converter.cpeToNative.config(config),output={channels:funcs.fetchBranch(input,paths.radio+radioInst+".PossibleChannels."),channelsWorkload:funcs.fetchBranch(input,paths.radio+radioInst+".Workload.")};return _promise2["default"].resolve(output)})}function updateScan(rq){var responseData=[];_.each(rq,function(data){responseData=responseData.concat(funcs.splitTree(data))});var config=funcs.buildTree(responseData),wifi=converter.cpeToNative.config(config);dms.scanData||(dms.scanData={});var data=funcs.fetchBranch(wifi,"Device.WiFi.ScanList.");funcs.setValue("Device.WiFi.ScanList",data,dms.scanData)}function push(cb,forward,onlyRegulatoryDomain){function applyDiffs(diff){return cpe.ApplyDifference(diff)}function successCb(){cb&&cb()}function errorCb(response){var error=response&&response.error?response.error:{};return cb&&cb(error),_promise2["default"].reject(error)}function checkLinks(diff){function getRemoveBridges(bridges){var paths=[];return _.each(bridges,function(elem,key){if("-"==key[0]){var id=key.replace("-","");paths.push("Device.Network.Interface.Bridge."+id+".")}}),_promise2["default"].resolve(paths)}function getAllPaths(paths){var queue=_.map(paths,function(path){return cpex.checkLinks(path).then(function(result){var reList=/Device\.Firewall\.IPv4\.Zones\./,links=_.filter(result,function(e){return reList.test(e)});return links=_.map(links,function(link){var position=link.match(/([a-zA-Z]+\d*\.)+\d+/g,"")[0];return position}),links.length&&(paths=links.concat(paths)),_promise2["default"].resolve()})});return _promise2["default"].all(queue).then(function(e){return _promise2["default"].resolve(paths)})}function makeLinks(paths){var queue=_.map(paths,function(path){return cpex.checkLinks(path).then(function(result){if(!result)return _promise2["default"].resolve(diffs);var tree={};_.map(result,function(link){var num=Number(link.match(/\.\d+\./g,"")[0].replace(/\./g,"")),position=link.match(/([a-zA-Z]+\d*\.)+\d+/g,"")[0];position=position.replace(/\d+$/g,"-"+num),funcs.setValue(position,{},tree)}),diffs=diffs.concat(tree)})});return _promise2["default"].all(queue).then(function(e){return _promise2["default"].resolve(diffs)})}function addDiffs(){return diffs.push(diff),_promise2["default"].resolve(diffs)}var diffs=[];if(!diff.Device.Network||!diff.Device.Network.Interface.Bridge)return diff;var bridges=diff.Device.Network.Interface.Bridge,delBridges=_.filter(bridges,function(e,key){return~key.indexOf("-")});return delBridges.length?_promise2["default"].resolve(bridges).then(getRemoveBridges).then(getAllPaths).then(makeLinks).then(addDiffs):diff}function reconnect(changes,nativeData){function disconnect(path){var diff={};return funcs.setValue(path+".Enable",!1,diff),applyDiffs(diff).then(function(){return _promise2["default"].resolve(path)})}function connect(path){var diff={};return funcs.setValue(path+".Enable",!0,diff),applyDiffs(diff)}function getIndex(data,index){return data.Device.WiFi.Radio[index].Inx}var split=funcs.splitTree(changes),action=_.find(split,function(elem){return elem.Name.indexOf("Action")&&"reconnect"==elem.Value});if(!action)return _promise2["default"].resolve().then(successCb);var paths=action.Name.match(/([a-zA-Z]+\d*\.)+\d+/g,""),index=_.last(paths[0]),path="Device.WiFi.Radio."+getIndex(nativeData,index)+"."+paths[1];return _promise2["default"].resolve(path).then(disconnect).then(connect).then(successCb)["catch"](errorCb)}function changeRegDomain(){var changes=funcs.getChanges(__initialData,dms.data),regExp=/Device.WiFi.Radio.\d.RegulatoryDomain/,domain=null;if(_.each(_.keys(changes),function(key){regExp.test(key)&&(domain=changes[key])}),!domain)return _promise2["default"].resolve();var regDomain={};funcs.setValue("Device.WiFi.RegulatoryDomain",domain.Value,regDomain);var changes=funcs.splitTree(regDomain);return cpe.SetParameterValues(changes)}if(onlyRegulatoryDomain)return changeRegDomain().then(successCb)["catch"](errorCb);var changes=status();if(!forward&&(!changes||_.isEmpty(changes)))return _promise2["default"].resolve().then(successCb);autoconf.BR2_PACKAGE_ANWEB_CUSTOM_MALAYSIA_35692&&(dms.data.HasPostfix=!0,__initialData.HasPostfix=!0);var cpeData=converter.nativeToCpe.config(dms.data),initData=converter.nativeToCpe.config(__initialData),diffConfig=funcs.newConfig.makeDiff(initData,cpeData,__cpeAttrs);return _.isEmpty(diffConfig)?reconnect(changes,__initialData):_promise2["default"].resolve(diffConfig).then(checkLinks).then(applyDiffs).then(successCb)["catch"](errorCb)}function status(){return funcs.buildTree(funcs.configToResponse(funcs.getChanges(__initialData,dms.data)))}function __pull(input,cb){function initPull(response){var config=funcs.buildTree(response[0].result.ParameterList),attrs=funcs.buildTreeAttributes(response[1].result.ParameterList);return autoconf.BR2_PACKAGE_ANWEB_CUSTOM_MALAYSIA_35692&&(config.HasPostfix=!0),dms.data=converter.cpeToNative.config(config,attrs),dms.attrs=converter.cpeToNative.attrs(attrs),__initialData=funcs.deepClone(dms.data),__initialCpeData=funcs.deepClone(config),__cpeAttrs=funcs.deepClone(attrs),cb&&cb(),_promise2["default"].resolve()}function errorCb(response){var error=response&&response.error?response.error:{};return cb&&cb(error),_promise2["default"].reject(error)}return _promise2["default"].all([cpe.GetParameterValues(input,void 0,!0),cpe.GetParameterAttributes(input,void 0,!0)]).then(initPull,errorCb)}var paths={wifi:"Device.WiFi.",radio:"Device.WiFi.Radio.",apProfile:"Device.WiFi.APProfile.",stationProfile:"Device.WiFi.StationProfile.",smProfile:"Device.WiFi.SuperMeshProfile.",interfaces:"Device.Network.Interface.WiFi.",statistics:"Device.Statistics.WiFi.Radio.",bridgeIfaces:"Device.Network.Interface.Bridge.",devMode:"Device.DeviceInfo.DeviceMode",regDomain:"View.RegulatoryDomains."},__initialData=null,__initialCpeData=null,__cpeAttrs=null,dms={getInitData:getInitData,attrs:null,data:null,scanData:null,pull:pull,pullCommon:pullCommon,pullClient:pullClient,pullAdv:pullAdv,pullWMM:pullWMM,pullWDS:pullWDS,getChannels:getChannels,updateScan:updateScan,push:push,status:status};return dms}()},function(module,exports,__webpack_require__){"use strict";module.exports={cpeToNative:__webpack_require__(178),nativeToCpe:__webpack_require__(181)}},function(module,exports,__webpack_require__){"use strict";var config=__webpack_require__(179),attrs=__webpack_require__(180);module.exports={config:config,attrs:attrs}},function(module,exports,__webpack_require__){"use strict";function getSSID(ssid,config){return config.HasPostfix&&ssid?ssid.replace(/\@unifi$/,""):ssid}function getModeAvailable(config,standats,ap){function getStandardName(standart){switch(standart){case"a":return"802.11 A";case"b":return"802.11 B";case"g":return"802.11 G";case"n":return"802.11 N";case"ac":return"802.11 AC";case"bg":return"802.11 B/G mixed";case"gn":return"802.11 G/N mixed";case"bgn":return"802.11 B/G/N mixed";case"bgnac":return"802.11 B/G/N mixed + 256QAM";case"an":return"802.11 A/N mixed";case"acn":return"802.11 AC/N mixed";case"acan":return"802.11 AC/A/N mixed";case"anac":return"802.11 A/N/AC mixed";case"nac":return"802.11 N/AC mixed";case"bgnax":return"802.11 B/G/N/AX mixed";case"anacax":return"802.11 A/N/AC/AX mixed"}}function getAuthAvail(standart,supportModes){var modes=supportModes;return isGBStandard(standart)||"a"==standart||(modes=_.without(modes,"WEP"),modes=_.without(modes,"SHARED")),_.map(modes,function(mode){return{Id:"SHARED"==mode?"WEP":mode,EncrAvailable:getEncrAvailable(standart,mode),PMFAvailable:"WPA2"==mode||"WPA2PSK"==mode||"WPA3SAE"==mode||"WPA2PSKWPA3SAE"==mode?["NoMgmtFrameProtection","MgmtFrameProtectionRequired","MgmtFrameProtectionOptional"]:void 0}})}function getEncrAvailable(standart,mode){switch(mode){case"OPEN":return isGBStandard(standart)||"a"==standart?["WEP","NONE"]:["NONE"];case"SHARED":case"WEP":return["WEP"];case"WPA":return isGBStandard(standart)||"a"==standart?["TKIP"]:["AES"];case"WPA2":return["AES"];case"WPAPSK":case"WPA1WPA2":case"WPA2PSK":case"WPAPSKWPA2PSK":return isGBStandard(standart)||"a"==standart?["TKIP","AES","TKIP+AES"]:["AES"];case"WPA3SAE":case"WPA2PSKWPA3SAE":return["AES"]}}function isGBStandard(standards){return~"bg".indexOf(standards)}var stands=standats.split(","),profile=getAPProfile(config,ap.Profile);if(!_.isEmpty(profile)){var supportModes=profile.Security.ModesSupported.split(",");return _.map(stands,function(standart){return{Name:getStandardName(standart),AuthAvail:getAuthAvail(standart,supportModes)}})}}function getRadio(radio,band){return radio=funcs.newConfig.normalize(radio),_.each(radio,function(elem,key){elem.Inx=key}),_.find(radio,function(r){return r.OperatingFrequencyBand&&r.OperatingFrequencyBand==band})}function getSupportedStandards(config,input){var supportedStandads=input.SupportedStandards.replace(/\//g,"").split(","),band=input.OperatingFrequencyBand,ep=_.values(input.EndPoint),epProfile=ep[0]?funcs.fetchBranch(config,ep[0].Profile):void 0;if(!ep[0]||!ep[0].Enable||_.isEmpty(ep[0].Profile)||!epProfile)return supportedStandads.join(",");

var epEncrType=epProfile.Security.EncryptionType;switch(epEncrType){case"WEP":case"TKIP":supportedStandads=_.filter(supportedStandads,function(e){return"2.4"==band?-1==e.indexOf("n"):-1==e.indexOf("ac")&&-1==e.indexOf("n")})}return supportedStandads.join(",")}function getWpsCheck(ap,apProfile,radio){if(!radio.Enable)return!1;if(!ap.Enable)return!1;if(!apProfile.SSIDAdvertisementEnabled)return!1;var sec=apProfile.Security,wepKey=sec.WEPKeySelected?sec.WEPKey[sec.WEPKeySelected.toString()].Str:void 0,mode=getModeEnabled(sec.ModeEnabled,wepKey),encrType=sec.EncryptionType;switch(mode){case"None":if("WEP"==encrType)return!1;break;case"WPA-Personal":case"WPA2-Personal":case"WPA-WPA2-Personal":if("AES"!=encrType)return!1;break;default:return!1}return!0}function formScanList(lists){function getScanBand(radio){return radio.SiteSurvey&&radio.SiteSurvey[1]?radio.SiteSurvey[1].OperatingFrequencyBand:void 0}var result={},index=1;return _.each(lists,function(radio,key){var sitesSurveys=components.scanList.build({$scanList:funcs.newConfig.normalize(radio.SiteSurvey),$band:getScanBand(radio)});_.each(sitesSurveys,function(value){return result[index++]=value})}),result}function getWorkload(workload,groups,supportedWidth,operatedWidth,band){function getBandwidth(channel,groups,supportedWidth,operatedWidth){if(!groups.length)return"Auto"!=operatedWidth?operatedWidth:getCurrentWidth(supportedWidth);for(var width,i=0;i<groups.length;++i){var group=groups[i].Channels,channelGroup=group.split(",");if(_.contains(channelGroup,channel.toString())){width=groups[i].Bandwidth;break}}return width?width:"Auto"!=operatedWidth?operatedWidth:getCurrentWidth(supportedWidth)}function transformGroups(groups){return _.size(groups)?_.map(groups,function(elem){elem=funcs.newConfig.normalize(elem);var channels=_.map(funcs.newConfig.normalize(elem.Channels),function(channel){return channel.Channel});return{Channels:channels.join(","),Bandwidth:elem.Bandwidth}}):[]}function getNeighChannel(channel,groups,band,width){function get24Neigh(channel){var min,max;5>channel?(min=channel,max=channel+4):(min=channel-4,max=channel);for(var result=[],i=min;max>=i;++i)result.push(i.toString());return result.join(",")}if("2.4GHz"==band&&"40MHz"==width)return get24Neigh(channel);if(!groups.length)return channel.toString();for(var neigh,i=0;i<groups.length;++i){var group=groups[i].Channels,channelGroup=group.split(",");if(_.contains(channelGroup,channel.toString())){neigh=group;break}}return neigh?neigh:channel.toString()}function getSpeed(width,supportedWidth,operatedWidth){var currentWidth="Auto"!=operatedWidth?operatedWidth:getCurrentWidth(supportedWidth);return width==currentWidth?"maximum":"20MHz"==width?"40MHz"==currentWidth?"medium":"minimum":"medium"}function getCurrentWidth(supportedWidth){var width=supportedWidth.split(","),current="80+80MHz"!=width[width.length-1]?width[width.length-1]:width[width.length-2];return current}workload=_.values(funcs.newConfig.normalize(workload)),groups=funcs.newConfig.normalize(groups),groups=transformGroups(groups);var result={};if(workload.length){var max=900;_.each(workload,function(elem){var width=getBandwidth(elem.Channel,groups,supportedWidth,operatedWidth);result[elem.Channel]={workload:elem.Workload,width:width,neigh_channel:getNeighChannel(elem.Channel,groups,band,width),speed:getSpeed(width,supportedWidth,operatedWidth),recomended:elem.Recommended},elem.Workload>max&&(max=elem.Workload)}),0!=max&&_.map(result,function(elem,key){result[key].workload=parseInt(100*elem.workload/max)})}return result}function getOperationStandart(standart){var modes={ac:"802.11 AC",n:"802.11 N",b:"802.11 B",g:"802.11 G",a:"802.11 A"};return modes[standart]}function getExtChannel(extChannel){switch(extChannel){case"None":return"none";case"BelowControlChannel":return"below";case"AboveControlChannel":return"above";default:return"unknown"}}function getScanEncryptionType(encType){return encType?"TKIPAES"==encType?"TKIP+AES":encType:void 0}function getSupportedBandwidth(bandEnum){if(bandEnum){var bandEnum=bandEnum.split(",");bandEnum=_.without(bandEnum,"80+80MHz");var result=_.map(bandEnum,function(elem){switch(elem){case"20MHz":return"20MHz";case"40MHz":return"20/40MHz";case"80MHz":return"20/40/80MHz";case"160MHz":return"20/40/80/160MHz"}});return result.push("Auto"),result.join(",")}}function getProfileId(profile){var profileId=profile?profile.match(/\.\d+\.$/g,""):void 0;return profileId?Number(profileId[0].replace(/\./g,"")):""}function getOperationChannelBandwidth(bandwidth,extChannel,coexistense){switch(bandwidth){case"20MHz":return"20MHz";case"40MHz":return"20/40MHz";case"80MHz":return"20/40/80MHz";case"160MHz":return"20/40/80/160MHz";case"Auto":return"Auto";default:return"20MHz"}}function getAPs(aps){var result=[],aps=funcs.newConfig.normalize(aps);return _.each(aps,function(ap,key){ap.__id=key,result.push(ap)}),result}function getAPProfile(config,APlink){var profile=funcs.fetchBranch(config,APlink);return profile?profile:{}}function getEps(eps){var output=funcs.newConfig.normalize(eps);return _.map(output,function(ep,inst){return ep.__id=inst,ep})}function getDefaultEPSecurity(attrs){if(attrs){var template=attrs["#template"].Security;return{EncryptionType:"",KeyPassphrase:"",ModeEnabled:"NONE",ModesSupported:template.ModesSupported["default"],RADIUS:{Password:template.RADIUS.Password["default"],Username:template.RADIUS.Username["default"]},WEPKey:{1:{Str:template.WEPKey["#template"].Str["default"],Type:template.WEPKey["#template"].Type["default"]},2:{Str:template.WEPKey["#template"].Str["default"],Type:template.WEPKey["#template"].Type["default"]},3:{Str:template.WEPKey["#template"].Str["default"],Type:template.WEPKey["#template"].Type["default"]},4:{Str:template.WEPKey["#template"].Str["default"],Type:template.WEPKey["#template"].Type["default"]}},WEPKeySelected:""}}}function getDefaultEP(attrs){if(attrs){var template=attrs["#template"];return{Enable:!1,SSID:template.SSID["default"],BSSID:template.BSSID["default"],Connect:!1,FlagNew:!0,Security:getDefaultEPSecurity(attrs)}}}function getModesSupported(modesSupported){function hasModes(allModes,modes){return _.isArray(modes)||(modes=[modes]),_.some(modes,function(mode){return _.contains(allModes,mode)})}var result=[],arrSupported=modesSupported.split(",");return hasModes(arrSupported,"OPEN")&&result.push("None"),hasModes(arrSupported,["SHARED","WEP"])&&result.push("WEP"),hasModes(arrSupported,"WPAPSK")&&result.push("WPA-Personal"),hasModes(arrSupported,"WPA2PSK")&&result.push("WPA2-Personal"),hasModes(arrSupported,"WPAPSKWPA2PSK")&&result.push("WPA-WPA2-Personal"),hasModes(arrSupported,"WPA")&&result.push("WPA-Enterprise"),hasModes(arrSupported,"WPA2")&&result.push("WPA2-Enterprise"),hasModes(arrSupported,"WPA1WPA2")&&result.push("WPA-WPA2-Enterprise"),hasModes(arrSupported,"WPA3SAE")&&result.push("WPA3"),hasModes(arrSupported,"WPA2PSKWPA3SAE")&&result.push("WPA2-WPA3"),result.join(",")}function getModeEnabled(mode,WEPKey){if(mode)switch(mode){case"NONE":case"OPEN":return"None";case"WPAPSK":return"WPA-Personal";case"WPA2PSK":return"WPA2-Personal";case"WPAPSKWPA2PSK":return"WPA-WPA2-Personal";case"WPA":return"WPA-Enterprise";case"WPA2":return"WPA2-Enterprise";case"WPA1WPA2":return"WPA-WPA2-Enterprise";case"SHARED":case"WEP":return"WEP";case"WPA3SAE":return"WPA3";case"WPA2PSKWPA3SAE":return"WPA2-WPA3";default:return mode}}function getPossibleChannels(channels){function convertChannelsRange(value){var start=value.split("-")[0],end=value.split("-")[1];return _.range(parseInt(start),parseInt(end)+1,1)}var result=[];if(!channels)return result;var arrChannels=channels.split(";");return _.each(arrChannels,function(value){/-/.test(value)?result=result.concat(convertChannelsRange(value)):parseInt(value)&&result.push(parseInt(value))}),result}function getBGProtection(pr){switch(pr){case"Auto":return"Auto";case"Enable":return"Always On";case"Disable":return"Always Off"}}function getHTGI(htgi){switch(htgi){case 0:return"Auto";case 400:return"Enable";case 800:return"Disable"}}function getTransmitPowerSupported(values){var values=_.without(values,-1);return _.map(values,function(value){return value.toString()}).reverse().join(",")}function getAPMax(limits){var apMax=Number(limits.match(/ap,?\w*=\d+/g,"")[0].replace(/ap,?\w*=/g,""));return apMax}function prepareInterfaces(ifaces){var output=_.clone(ifaces);return output}function getBSSID(config,ap){var iface=funcs.fetchBranch(config,ap.Interface);return iface?iface.MACAddress:void 0}function getSMClientInfo(radio,config){var smPoints=funcs.newConfig.normalize(radio.SuperMeshPoint),endPoints=funcs.newConfig.normalize(radio.EndPoint);if(smPoints&&_.size(smPoints)){var smPoint=_.first(_.toArray(smPoints)),smProfile=funcs.fetchBranch(config,smPoint.Profile);if(smProfile&&!smProfile.PreferMaster)return!0}if(endPoints&&_.size(endPoints)){var clientPoint=_.first(_.toArray(endPoints)),clientProfile=funcs.fetchBranch(config,clientPoint.Profile);if(clientProfile&&clientPoint.Enable)return!0}return!1}function getMultiWPS(apCount,input){var multiwps=input.Advanced?input.Advanced.WPSPerMBSSIDSupported:void 0;return!(!_.isUndefined(multiwps)&&!multiwps)&&apCount>1}function getProtectedFrame(param){switch(param){case"Disabled":return"NoMgmtFrameProtection";case"Required":return"MgmtFrameProtectionRequired";case"Optional":return"MgmtFrameProtectionOptional";default:return}}var _=__webpack_require__(4),T=__webpack_require__(122).T,funcs=__webpack_require__(5);module.exports=function(config,attrs){var pattern=T({"->":["$config","Device"],$config:":external",$attrs:":external",Device:{"->":!0,WiFi:{"->":["$radio","CountriesList","Radio","RadioNumberOfEntries","Client","ClientNumberOfEntries"],$radio:["$root",function(r){return r.$config.Device.WiFi?r.$config.Device.WiFi.Radio:void 0}],$statistics:["$root",function(r){return funcs.fetchBranch(r.$config,"Device.Statistics.WiFi.Radio.")}],$epAttrs:["$root",function(r){return r.$attrs?r.$attrs.Device.WiFi.StationProfile:void 0}],$radioAttrs:["$root",function(r){return r.$attrs?r.$attrs.Device.WiFi.Radio:void 0}],CountriesList:["$root*",function(r){return components.countries.build({$config:r.$config})}],ScanList:["$root",function(r){return r.$config.Device.Statistics?formScanList(r.$config.Device.Statistics.WiFi.Radio):void 0}],RadioNumberOfEntries:["$radio*",function(r){return _.isUndefined(r)?void 0:r.max_instance}],Radio:{"->":!0,1:["$parent","$root",function(p,r){return components.radio.build({$config:r.$config,$radio:p.$radio,$radioAttrs:p.$radioAttrs,$statistics:p.$statistics,$epAttrs:p.$epAttrs,$band:"2.4GHz"})}],2:["$parent","$root",function(p,r){return components.radio.build({$config:r.$config,$radio:p.$radio,$radioAttrs:p.$radioAttrs,$statistics:p.$statistics,$epAttrs:p.$epAttrs,$band:"5GHz"})}]}},Network:{Interface:{"->":["$interfaces","WiFi"],$interfaces:["$root",function(r){return r.$config.Device.Network?r.$config.Device.Network.Interface:void 0}],Bridge:["$interfaces*",function(ifaces){return funcs.newConfig.normalize(ifaces.Bridge)}],WiFi:["$interfaces*",function(ifaces){return prepareInterfaces(ifaces.WiFi)}]}},DevMode:["$parent",function(p){return p.$config.Device.DeviceInfo?p.$config.Device.DeviceInfo.DeviceMode:void 0}]}});return pattern.build({$config:config,$attrs:attrs})};var components={};components.radio=T({"->":["?","$config","$inputStatistics","$advanced","$ap","$ep","AccessPoint","EndPoint","WMM"],$config:":external",$radio:":external",$radioAttrs:":external",$band:":external",$statistics:":external",$epAttrs:":external",$input:["$radio*","$band",function(r,b){return getRadio(r,b)}],$inputStatistics:["$statistics*","$input*",function(s,i){return s?s[i.Inx]:void 0}],$advanced:["$input",function(i){return i.Advanced}],$advancedAttrs:["$radioAttrs*",function(a){return a["#template"].Advanced}],$ap:["$input",function(i){return i.AccessPoint}],$ep:["$input",function(i){return i.EndPoint}],"?":["$input",function(i){return!!i}],Inx:["$input",function(i){return i.Inx}],OperatingFrequencyBand:["$input",function(i){return i.OperatingFrequencyBand}],Enable:["$input",function(i){return i.Enable}],RegulatoryDomain:["$config",function(c){return c.Device.WiFi.RegulatoryDomain}],SupportedStandards:["$config","$input",function(c,i){return i.SupportedStandards?getSupportedStandards(c,i):void 0}],OperatingStandards:["$input",function(i){return i.OperatingStandards?i.OperatingStandards.replace(/\//g,""):void 0}],ShortListSupportedStandards:["$input","SupportedStandards",function(i,ss){return i.SupportedStandards?ss!=i.SupportedStandards.replace(/\//g,""):void 0}],ModeAvailable:["SupportedStandards*","$ap*","$config*",function(st,ap,c){return getModeAvailable(c,st,ap[1])}],CheckStandard:!0,PossibleChannels:["$input",function(i){return getPossibleChannels(i.PossibleChannels)}],AutoChannelSupported:["$input",function(i){return i.AutoChannelSupported}],AutoChannelEnable:["$input",function(i){return i.AutoChannelEnable}],HighChannelEnable:["$input",function(i){return _.has(i,"HighChannelsEnable")?i.HighChannelsEnable:void 0}],HighChannelsAvailable:["$input",function(i){return i.HighChannelsAvailable}],AutoChannelReselect:["$input",function(i){return _.has(i,"AutoChannelRefreshEnable")?i.AutoChannelRefreshEnable:void 0}],AutoChannelReselectPeriod:["$input",function(i){return 0==i.AutoChannelRefreshPeriod?900:i.AutoChannelRefreshPeriod}],Channel:["$input","$inputStatistics",function(i,st){return st&&st.Channel?st.Channel:i.Channel}],SMSlaveClientEnable:["$input","$config",function(i,c){return getSMClientInfo(i,c)}],SupportedChannelBandwidth:["$advanced*","$band",function(a,b){return getSupportedBandwidth(a.PossibleChannelBandwidth)}],OperatingChannelBandwidth:["$advanced*",function(a){return getOperationChannelBandwidth(a.OperatingChannelBandwidth,a.ExtensionChannel,a.HTCoexistence)}],CurrentChannelBandwidth:["$inputStatistics*",function(st){return st.OperatingChannelBandwidth}],Workload:["$inputStatistics*","$advanced","$band",function(is,a,b){return getWorkload(is.Workload,is.ChannelGroups,a.PossibleChannelBandwidth,a.OperatingChannelBandwidth,b)}],Coexistence:["$advanced*","$band",function(a,b){return"2.4GHz"==b?a.HTCoexistence:void 0}],ExtensionChannel:["$advanced*","$band",function(a,b){return"2.4GHz"==b?a.ExtensionChannel:void 0}],BeaconPeriod:["$advanced*",function(a){return a.BeaconPeriod}],RTSThreshold:["$advanced*",function(a){return a.RTSThreshold}],FragmentationThreshold:["$advanced*",function(a){return a.FragmentationThreshold}],DTIMPeriod:["$advanced*",function(a){return a.DTIMPeriod}],StationKeepAlive:["$advanced*",function(a){return a.StationKeepAlive}],AdaptivityMode:["$advanced*",function(a){return a.AdaptivityMode}],BGProtection:["$advanced*",function(a){return getBGProtection(a.BGProtection)}],TransmitPowerSupported:["$advancedAttrs*",function(a){return getTransmitPowerSupported(a.TransmitPower["enum"])}],TransmitPower:["$advanced*",function(a){return a.TransmitPower?a.TransmitPower.toString():void 0}],HTGI:["$advanced*",function(a){return getHTGI(a.GuardInterval)}],TxPreamble:["$advanced*",function(a){return a.PreambleType}],Igmpdrop:["$advanced*",function(a){return a.DropMulticast}],SessionTimeoutInterval:["$advanced*",function(a){return a.SessionTimeoutInterval}],TxBeamforming:["$advanced*",function(a){return a.TransmitBeamforming}],TxBeamforminAvailable:["$advanced*",function(a){return a.TransmitBeamformingSupported}],STBC:["$advanced*",function(a){return a.STBC}],STBCAvailable:["$advanced*",function(a){return a.STBCSupported}],EnableLowOFDM:["$advanced*",function(a){return a.LowOFDM}],DFS:["$advanced*",function(a){return a.DFSEnable}],DFSAvailable:["$advanced*",function(a){return a.DFSAvailable}],Dot11KEnabled:["$advanced*",function(a){return a.Dot11KEnabled}],Dot11VEnabled:["$advanced*",function(a){return a.Dot11VEnabled}],AccessPointMax:["$input*",function(i){return i.Phy?getAPMax(i.Phy.Combinations[1].Limits):void 0}],MultiWPS:["AccessPointNumberOfEntries","$input*",function(a,i){return getMultiWPS(a,i)}],AccessPointNumberOfEntries:["AccessPoint",function(a){return a?_.size(a):void 0}],AccessPointProfileMax:["$config",function(c){return c.Device.WiFi&&c.Device.WiFi.APProfile?c.Device.WiFi.APProfile.max_instance:void 0}],AccessPoint:{"->":["?","$obj","Security"],"?":["$parent",function(p){return!!p.$ap}],$config:["$parent",function(p){return p.$config}],"{$obj}":["$parent",function(p){return getAPs(p.$ap)}],":":["$obj",function(o){return o.__id}],$apProfile:["$root","$obj",function(r,o){return getAPProfile(r.$config,o.Profile)}],$sec:["$apProfile",function(app){return app.Security}],SSID:["$apProfile","$config",function(a,c){return getSSID(a.SSID,c)}],Broadcast:["$obj",function(o){return o.Enable}],GuestAccess:["$apProfile",function(o){return o.GuestAccess}],BSSID:["$root","$obj",function(r,o){return getBSSID(r.$config,o)}],SSIDAdvertisementEnabled:["$apProfile",function(a){return!a.SSIDAdvertisementEnabled}],MaxAssociatedDevices:["$apProfile",function(a){return a.MaxAssociatedDevices}],ClientIsolation:["$apProfile",function(a){return a.IsolationEnable}],AccessPolicy:["$apProfile",function(a){return a.AccessPolicy}],NSG:["$apProfile",function(a){return a.NSG}],Profile:["$obj",function(o){return o.Profile}],ProfileId:["$obj",function(o){return getProfileId(o.Profile)}],BandwidthRestricted:["$apProfile",function(o){return o.BandwidthRestrict}],Interface:["$obj",function(o){return o.Interface}],Security:["$sec",function(sec){return components.security.build({$sec:sec})}],WPS:["$obj","$apProfile","$root",function(o,prof,r){return components.wps.build({$ap:o,$apProfile:prof,$radio:r.$input})}]},EndPointMax:1,EndPointNumberOfEntries:["EndPoint",function(ep){return ep?_.size(ep):void 0}],EndPointProfileMax:["$config",function(c){return c.Device.WiFi&&c.Device.WiFi.StationProfile?c.Device.WiFi.StationProfile.max_instance:void 0}],EndPoint:{"->":["?","$epp","Security"],$config:["$parent",function(p){return p.$config}],$input:["$parent",function(p){return p.$input}],$epAttrs:["$parent",function(p){return p.$epAttrs}],$statistic:["$parent",function(p){return p.$inputStatistics}],"?":["$input",function(i){return!!i&&!!i.EndPoint}],$eps:["$input",function(i){return getEps(i.EndPoint)}],"{$ep, $index}":["$eps","$epAttrs",function(eps,attrs){return 0!=eps.length?eps:[getDefaultEP(attrs)]}],":":["$ep*","$input",function(ep,i){return ep.__id||"+"+(1e3+("2.4GHz"==i.OperatingFrequencyBand)?2:5)}],$epp:["$config","$ep*",function(c,ep){return""!=ep.Profile?funcs.fetchBranch(c,ep.Profile):ep}],$sec:["$epp*","$epAttrs",function(epp,attrs){return epp&&epp.Security?epp.Security:getDefaultEPSecurity(attrs)}],Enable:["$ep*",function(ep){return ep.Enable}],Interface:["$ep*",function(ep){return ep.Interface}],MeshEnable:["$input*",function(i){return _.size(funcs.newConfig.normalize(i.SuperMeshPoint))>0}],Profile:["$ep*",function(ep){return ep.Profile}],ProfileId:["$ep*",function(ep){return getProfileId(ep.Profile)}],SSID:["$epp*",function(epp){return _.isEmpty(epp)?"":epp.SSID}],BSSID:["$epp*",function(epp){return _.isEmpty(epp)?"":epp.BSSID}],Band:["$input",function(i){return i.OperatingFrequencyBand}],Security:["$sec*",function(sec){return components.security.build({$sec:sec})}],RSSI:["$statistic","$ep",function(st,ep){return st&&st.EndPoint&&st.EndPoint[ep.__id]&&!_.isEmpty(st.EndPoint[ep.__id].Info.BSSID)?st.EndPoint[ep.__id].Info.SignalStrength+"%":void 0}],Connect:["$statistic","$ep",function(st,ep){return st&&st.EndPoint&&st.EndPoint[ep.__id]?!_.isEmpty(st.EndPoint[ep.__id].Info.BSSID):void 0}],Channel:["$statistic",function(st){return st?st.Channel:void 0}]},WMM:{"->":["$ap","$ap","$ep","$ac","$enable","AP","EP"],$advanced:["$parent",function(p){return p.$advanced}],$ap:["$parent",function(p){return p.$ap}],$ep:["$parent",function(p){return p.$ep}],$ac:["$advanced*",function(ad){return ad.AC}],"?":["$ac",function(ac){return!!ac}],Mode:["$ap",function(ap){return ap&&ap[1]?ap[1].WMMMode:"Auto"}],AP:{"->":["$ap","$ac","AC"],$ap:["$parent",function(p){return p.$ap}],$ac:["$parent",function(p){return p.$ac}],"{$obj}":["$parent",function(p){return getAPs(p.$ap)}],":":["$obj",function(o){return o.__id}],ACNumberOfEntries:["AC",function(ac){return ac?_.size(ac):void 0}],AC:{"->":["$acs","$ac"],$acs:["$parent",function(p){return p.$ac&&p.$ac.AP?p.$ac.AP:void 0}],"{$ac, $index}":["$acs",function(acs){return acs}],":":["$ac",function(ac){return ac.AccessCategory}],__id:["$index",function(i){return i}],AccessCategory:["$ac",function(ac){return ac.AccessCategory}],AIFSN:["$ac*",function(ac){return ac.AIFSN}],ECWMin:["$ac*",function(ac){return ac.ECWMin}],ECWMax:["$ac*",function(ac){return ac.ECWMax}],TxOpMax:["$ac*",function(ac){return ac.TxOpMax}],AcmPolicy:["$ac*",function(ac){return ac.ACM}],AckPolicy:["$ac*",function(ac){return ac.AckPolicy}]}},EP:{"->":["$ep","$ac","AC"],$ep:["$parent",function(p){return p.$ap}],$ac:["$parent",function(p){return p.$ac}],"{$obj}":["$parent",function(p){return getEps(p.$ap)||[{__id:"1"}]}],":":["$obj",function(o){return o.__id}],ACNumberOfEntries:["AC",function(ac){return ac?_.size(ac):void 0}],AC:{"->":["$acs","$ac"],$acs:["$parent",function(p){return p.$ac&&p.$ac.BSS?p.$ac.BSS:void 0}],"{$ac, $index}":["$acs",function(acs){return acs}],":":["$ac",function(ac){return ac.AccessCategory}],__id:["$index",function(i){return i}],AccessCategory:["$ac",function(ac){return ac.AccessCategory}],AIFSN:["$ac*",function(ac){return ac.AIFSN}],ECWMin:["$ac*",function(ac){return ac.ECWMin}],ECWMax:["$ac*",function(ac){return ac.ECWMax}],TxOpMax:["$ac*",function(ac){return ac.TxOpMax}],AcmPolicy:["$ac*",function(ac){return ac.ACM}],AckPolicy:["$ac*",function(ac){return ac.AckPolicy}]}}}}),components.security=T({"->":!0,$sec:":external","?":["$sec",function(sec){return!!sec}],$defWEPKey:["$sec*",function(s){return s.WEPKeySelected?s.WEPKey[s.WEPKeySelected.toString()].Str:void 0}],ModeEnabled:["$sec*","$defWEPKey",function(s,ks){return getModeEnabled(s.ModeEnabled,ks)}],PreAuthentication:["$sec*",function(s){return s.PreAuthentication}],ModesSupported:["$sec*",function(s){return getModesSupported(s.ModesSupported)}],PreSharedKey:["$sec*",function(s){return s.KeyPassphrase}],EncryptionType:["$sec*",function(s){return"TKIPAES"==s.EncryptionType?"TKIP+AES":s.EncryptionType}],RekeyingInterval:["$sec*",function(s){return s.RekeyingInterval}],RadiusServerIPAddr:["$sec*",function(s){return s.RADIUS.ServerIPAddr}],RadiusServerPort:["$sec*",function(s){return s.RADIUS.ServerPort}],RadiusSecret:["$sec*",function(s){return s.RADIUS.Secret}],RadiusUsername:["$sec*",function(s){return s.RADIUS.Username}],RadiusPassword:["$sec*",function(s){return s.RADIUS.Password}],DefaultKeyID:["$sec*",function(s){return s.WEPKeySelected?s.WEPKeySelected.toString():void 0}],OpenWEP:["$sec*",function(s){return"WEP"==s.EncryptionType}],WEPasHEX:["$defWEPKey*",function(ks){return _.contains([10,26],ks.length)}],WEPKey1:["$sec*",function(s){return s.WEPKey[1].Str}],WEPKey2:["$sec*",function(s){return s.WEPKey[2].Str}],WEPKey3:["$sec*",function(s){return s.WEPKey[3].Str}],WEPKey4:["$sec*",function(s){return s.WEPKey[4].Str}],ProtectedManagementFrames:["$sec*",function(s){return getProtectedFrame(s.ProtectedManagementFrames)}]}),components.scanList=T({"->":!0,$scanList:":external",$band:":external","{$elem, $index}":["$scanList",function(sl){return _.filter(sl,function(e){return!_.isEmpty(e.SSID)})}],":":["$index",function(i){return parseInt(i)+1}],SSID:["$elem*",function(e){return e.SSID||"< HIDDEN >"}],BSSID:["$elem*",function(e){return e.BSSID}],Mode:["$elem*",function(e){return getOperationStandart(e.OperatingStandards)}],Channel:["$elem*",function(e){return e.Channel}],AdvancedChannel:["$elem*",function(e){return getExtChannel(e.ExtensionChannel)}],ModeEnabled:["$elem*",function(e){return getModeEnabled(e.ModeEnabled)}],EncryptionType:["$elem*",function(e){return getScanEncryptionType(e.EncryptionType)}],SignalStrength:["$elem*",function(e){return e.SignalQuality}],Band:["$band",function(b){return b}]}),components.wps=T({"->":["?"],$ap:":external",$radio:":external",$apProfile:":external",$wps:["$ap",function(a){return a.WPS}],"?":["$wps",function(w){return!!w}],Enable:["$wps*",function(w){return w.Enable}],Configured:["$wps*",function(w){return w.Configured}],DefaultPIN:["$wps*",function(w){return w.PIN}],Check:["$ap","$apProfile","$radio",function(a,prof,r){return getWpsCheck(a,prof,r)}],ActivateRadioByButtonWPS:["$ap",function(ap){return ap.EnableWiFiFromWPSButton}]}),components.countries=T({"->":!0,$config:":external","{$rd}":["$config",function(c){return c.View?funcs.newConfig.normalize(c.View.RegulatoryDomains):[]}],code:["$rd*",function(rd){return rd.Code}],name:["$rd*",function(rd){return rd.Name}]})},function(module,exports,__webpack_require__){"use strict";function getSecurity(sec){var pattern=T({"->":["?"],$sec:":external","?":["$sec",function(s){return!!s}],$wep:["$sec*",function(s){return s.WEPKey["#template"]}],ModeEnabled:["$sec",function(s){return getModeEnabled(s.ModeEnabled)}],PreSharedKey:["$sec",function(s){return s.KeyPassphrase}],EncryptionType:["$sec",function(s){return s.EncryptionType}],RekeyingInterval:["$sec",function(s){return s.RekeyingInterval}],RadiusServerIPAddr:["$sec",function(s){return s.RADIUS.ServerIPAddr}],RadiusServerPort:["$sec",function(s){return s.RADIUS.ServerPort}],RadiusSecret:["$sec",function(s){return s.RADIUS.Secret}],PreAuthentication:["$sec",function(s){return s.PreAuthentication}],DefaultKeyID:["$sec",function(s){return getDefaultKeyID(s.WEPKeySelected)}],ProtectedManagementFrames:["$sec",function(s){return s.ProtectedManagementFrames}],OpenWEP:["$sec",function(s){return getOpenWEP()}],WEPasHEX:["$sec",function(s){return getWEPasHEX()}],WEPKey1:["$wep",function(w){return w.Str}],WEPKey1Type:["$wep",function(w){return getWEPType(w.Type)}],WEPKey2:["$wep",function(w){return w.Str}],WEPKey2Type:["$wep",function(w){return getWEPType(w.Type)}],WEPKey3:["$wep",function(w){return w.Str}],WEPKey3Type:["$wep",function(w){return getWEPType(w.Type)}],WEPKey4:["$wep",function(w){return w.Str}],WEPKey4Type:["$wep",function(w){return getWEPType(w.Type)}]});return sec?pattern.build({$sec:sec}):{}}function getEnable(enable){var result=enable;return _.isUndefined(result)||(result["default"]=!0),result}function getSSIDAdvertisement(ssid){var result=ssid;return _.isUndefined(result)||(result["default"]=!1),result}function getCPEBlock(){return{access:"readWrite","default":!0,type:"boolean"}}function getAutoChannelReselect(){return{access:"readWrite","default":!0,type:"boolean"}}function getBGProtection(attr){var valueMap={Auto:"Auto",Enable:"Always On",Disable:"Always Off"};return attr["default"]=valueMap[attr["default"]],attr["enum"]=_.map(attr["enum"],function(name){return valueMap[name]}),attr}function getExtensionChannel(attr){var valueMap={Auto:"Auto",AboveControlChannel:"wifi_advanced_above_channel",BelowControlChannel:"wifi_advanced_below_channel"};return attr["default"]=valueMap[attr["default"]],attr["enum"]=_.map(attr["enum"],function(name){return valueMap[name]}),attr}function getDefaultKeyID(attr){return attr.type="string",attr["default"]=attr["default"].toString(),attr}function getTransmitPower(attr){return attr["default"]=attr["default"].toString(),attr["enum"]=_.map(attr["enum"],function(name){return name.toString()}),attr}function getHTGI(attr){var valueMap={0:"Auto",400:"Enable",800:"Disable"};return attr["default"]=valueMap[attr["default"]],attr["enum"]=_.map(attr["enum"],function(name){return valueMap[name]}),attr.type="string",attr}function getModeEnabled(attr){function getMode(mode){switch(mode){case"OPEN":return["None"];case"WPAPSK":return["WPA-Personal"];case"WPA2PSK":return["WPA2-Personal"];case"WPAPSKWPA2PSK":return["WPA-WPA2-Personal"];case"WPA":return["WPA-Enterprise"];case"WPA2":return["WPA2-Enterprise"];case"WPA1WPA2":return["WPA-WPA2-Enterprise"];case"SHARED":case"WEP":return["WEP"];default:return[mode]}}attr["default"]=getMode(attr["default"])[0];var arrEnum=[];return _.each(attr["enum"],function(name){arrEnum=arrEnum.concat(getMode(name))}),attr["enum"]=_.uniq(arrEnum),attr}function getOpenWEP(){return{access:"readWrite","default":!0,type:"boolean"}}function getWEPasHEX(){return{access:"readWrite","default":!1,type:"boolean"}}function getWEPType(type){var mapValues={ASCII:"1",HEX:"2"};return type["default"]=mapValues[type["default"]]||type["default"],type["enum"]=_.map(type["enum"],function(e){return mapValues[e]||e}),type}var T=__webpack_require__(122).T,_=__webpack_require__(4);__webpack_require__(5),module.exports=function(input){var pattern=T({"->":["$input","$radio","$ap","Device"],$input:":external",$radio:["$input",function(i){return i.Device.WiFi.Radio["#template"]}],$ap:["$input",function(i){return i.Device.WiFi.Radio["#template"].AccessPoint["#template"]}],$apProfile:["$input",function(i){return i.Device.WiFi.APProfile?i.Device.WiFi.APProfile["#template"]:{}}],$ep:["$input",function(i){return i.Device.WiFi.Radio["#template"].EndPoint["#template"]}],$epProfile:["$input",function(i){return i.Device.WiFi.StationProfile?i.Device.WiFi.StationProfile["#template"]:{}}],$advanced:["$radio",function(r){return r.Advanced}],Device:{"->":!0,WiFi:{"->":!0,Radio:{"->":!0,$radio:["$root",function(r){return r.$radio}],$advanced:["$root",function(r){return r.$advanced}],OperatingFrequencyBand:["$radio",function(r){return r.OperatingFrequencyBand}],Enable:["$radio",function(r){return r.Enable}],RegulatoryDomain:["$root",function(r){return r.$input.Device.WiFi.RegulatoryDomain}],SupportedStandards:["$radio",function(r){return r.SupportedStandards}],OperatingStandards:["$radio",function(r){return r.OperatingStandards}],PossibleChannels:["$radio",function(r){return r.PossibleChannels}],AutoChannelSupported:["$radio",function(r){return r.AutoChannelSupported}],AutoChannelEnable:["$radio",function(r){return r.AutoChannelEnable}],AutoChannelReselect:["$radio",function(r){return getAutoChannelReselect()}],AutoChannelReselectPeriod:["$radio",function(r){return r.AutoChannelRefreshPeriod}],Channel:["$radio",function(r){return r.Channel}],OperatingChannelBandwidth:["$advanced*",function(a){return a.OperatingChannelBandwidth}],BeaconPeriod:["$advanced*",function(a){return a.BeaconPeriod}],RTSThreshold:["$advanced*",function(a){return a.RTSThreshold}],FragmentationThreshold:["$advanced*",function(a){return a.FragmentationThreshold}],DTIMPeriod:["$advanced*",function(a){return a.DTIMPeriod}],StationKeepAlive:["$advanced*",function(a){return a.StationKeepAlive}],AdaptivityMode:["$advanced*",function(a){return a.AdaptivityMode}],BGProtection:["$advanced*",function(a){return getBGProtection(a.BGProtection)}],TransmitPower:["$advanced*",function(a){return getTransmitPower(a.TransmitPower)}],HTGI:["$advanced*",function(a){return getHTGI(a.GuardInterval)}],SessionTimeoutInterval:["$advanced*",function(a){return a.SessionTimeoutInterval}],ExtensionChannel:["$advanced*",function(a){return getExtensionChannel(a.ExtensionChannel)}],Dot11KEnabled:["$advanced*",function(a){return a.Dot11KEnabled}],Dot11VEnabled:["$advanced*",function(a){return a.Dot11VEnabled}],EnableLowOFDM:["$advanced*",function(a){return a.LowOFDM}],AccessPoint:{"->":["$ap","$sec","Security","AC"],$ap:["$root",function(r){return r.$ap}],$apProfile:["$root",function(r){return r.$apProfile}],"?":["$apProfile",function(a){return!!a}],$sec:["$apProfile",function(a){return a.Security}],SSID:["$apProfile",function(a){return a.SSID}],Broadcast:["$ap",function(a){return getEnable(a.Enable)}],GuestAccess:["$apProfile",function(a){return a.GuestAccess}],BSSID:["$apProfile",function(a){return a.BSSID}],SSIDAdvertisementEnabled:["$apProfile",function(a){return getSSIDAdvertisement(a.SSIDAdvertisementEnabled)}],MaxAssociatedDevices:["$apProfile",function(a){return a.MaxAssociatedDevices}],CPEBlock:["$ap",function(a){return getCPEBlock()}],ClientIsolation:["$apProfile",function(a){return a.IsolationEnable}],AccessPolicy:["$apProfile",function(a){
return a.AccessPolicy}],BandwidthRestricted:["$apProfile",function(a){return a.BandwidthRestrict}],Interface:["$ap",function(a){return a.Interface}],Security:["$sec",function(sec){return getSecurity(sec)}]},EndPoint:{"->":["$ep","$sec","Security","AC"],$ep:["$root",function(r){return r.$ep}],$epp:["$root",function(r){return r.$epProfile}],"?":["$epp",function(epp){return!!epp}],$sec:["$epp",function(epp){return epp.Security}],Enable:["$ep",function(ep){return ep.Enable}],Profile:["$ep",function(ep){return ep.Profile}],Interface:["$ep",function(ep){return ep.Interface}],SSID:["$epp",function(epp){return epp.SSID}],BSSID:["$epp",function(epp){return epp.BSSID}],Security:["$sec",function(sec){return getSecurity(sec)}]},WMM:{"->":["$ap","$advanced","$ac","AP","EP"],$advanced:["$root",function(r){return r.$advanced}],$ap:["$root",function(r){return r.$ap}],$ac:["$advanced*",function(ad){return ad.AC}],"?":["$ac",function(ac){return!!ac}],Enable:["$ap",function(ap){return ap?ap.WMMEnable:void 0}],AP:{"->":["$ac","AC"],$ac:["$parent",function(p){return p.$ac}],AC:{"->":["$ac","?"],$ac:["$parent",function(p){return p.$ac&&p.$ac.AP?p.$ac.AP["#template"]:void 0}],"?":["$ac",function(ac){return!!ac}],"{$key}":["$ac",function($ac){return $ac.AccessCategory["enum"]}],":":["$key",function(k){return k}],AIFSN:["$ac",function(ac){return ac.AIFSN}],AccessCategory:["$ac",function(ac){return ac.AccessCategory}],AckPolicy:["$ac",function(ac){return ac.AckPolicy}],AcmPolicy:["$ac",function(ac){return ac.ACM}],ECWMax:["$ac",function(ac){return ac.ECWMax}],ECWMin:["$ac",function(ac){return ac.ECWMin}],TxOpMax:["$ac",function(ac){return ac.TxOpMax}]}},EP:{"->":["$ac","AC"],$ac:["$parent",function(p){return p.$ac}],AC:{"->":["$ac","?"],$ac:["$parent",function(p){return p.$ac&&p.$ac.BSS?p.$ac.BSS["#template"]:void 0}],"?":["$ac",function(ac){return!!ac}],"{$key}":["$ac",function($ac){return $ac.AccessCategory["enum"]}],":":["$key",function(k){return k}],AIFSN:["$ac",function(ac){return ac.AIFSN}],AccessCategory:["$ac",function(ac){return ac.AccessCategory}],AckPolicy:["$ac",function(ac){return ac.AckPolicy}],AcmPolicy:["$ac",function(ac){return ac.ACM}],ECWMax:["$ac",function(ac){return ac.ECWMax}],ECWMin:["$ac",function(ac){return ac.ECWMin}],TxOpMax:["$ac",function(ac){return ac.TxOpMax}]}}}}}}});return input?pattern.build({$input:input}):{}}},function(module,exports,__webpack_require__){"use strict";var config=__webpack_require__(182);module.exports={config:config}},function(module,exports,__webpack_require__){"use strict";function getEncryptionType(standart,security){var mode=security.ModeEnabled,encType=security.EncryptionType;return"None"==mode&&-1==standart.indexOf("n")&&-1==standart.indexOf("c")?security.OpenWEP?"WEP":"NONE":-1==standart.indexOf("n")&&-1==standart.indexOf("c")||"WEP"!=encType?"TKIP+AES"==encType?"TKIPAES":encType:"NONE"}function getOperatingStandart(standart){var output=standart.split("").join("/").replace("a/c","ac");return output=output.replace("a/x","ax")}function getProfile(id,profile,profileMaxNumber){return _.isUndefined(id)||~id.indexOf("+")?"Device.WiFi.APProfile."+(profileMaxNumber+1)+".":profile}function getProfileEP(id,profile,profileMaxNumber){return _.isUndefined(id)||~id.indexOf("+")||""==profile?"Device.WiFi.StationProfile."+(profileMaxNumber+1)+".":profile}function getProfileId(id,key){return id&&""!=id?id:key}function getProfileIdEP(id,key){return id?id:"new_inst_"+key}function getAP(apList){var result={};return _.each(apList,function(elem,index){-1==index.indexOf("-")&&(result[index]=elem)}),result}function getEP(epList){var result={};return _.each(epList,function(elem,index){_.isUndefined(elem.Band)&&""==elem.ProfileId||_.isEmpty(elem.SSID)||!elem.Enable||(result[index]=elem)}),result}function getEPList(epList){var result={};return _.each(epList,function(elem,index){elem.Enable&&(result[index]=elem)}),result}function getOperationChannelBandwidth(bandwidth,standart){var band;if(band=~bandwidth.lastIndexOf("/")?bandwidth.slice(bandwidth.lastIndexOf("/")+1,bandwidth.length):bandwidth,"Auto"==band)return band;switch(standart){case"a":case"b":case"g":case"bg":return"20MHz"!=band?"Auto":band;case"n":case"an":return"20MHz"!=band&&"40MHz"!=band?"Auto":band;default:return band}}function getExtChannel(bandwidth,channel,extChannel){return-1==bandwidth.indexOf("/")?(channel=parseInt(channel),"AboveControlChannel"==extChannel&&9>=channel?extChannel:"BelowControlChannel"==extChannel&&channel>=5?extChannel:"Auto"):extChannel}function getHTCoexistence(bandwidth,coexistence){return!(!~bandwidth.lastIndexOf("/")&&"Auto"!=bandwidth)&&coexistence}function getModeEnabled(mode,standart,encType){if(mode){if(-1!=standart.indexOf("n")&&"WEP"==encType)return"OPEN";switch(mode){case"None":return"OPEN";case"WPA-Personal":return"WPAPSK";case"WPA2-Personal":return"WPA2PSK";case"WPA-WPA2-Personal":return"WPAPSKWPA2PSK";case"WPA-Enterprise":return"WPA";case"WPA2-Enterprise":return"WPA2";case"WPA-WPA2-Enterprise":return"WPA1WPA2";case"WEP":return"SHARED";case"WPA3":return"WPA3SAE";case"WPA2-WPA3":return"WPA2PSKWPA3SAE";default:return mode}}}function getBGProtection(pr){switch(pr){case"Auto":return"Auto";case"Always On":return"Enable";case"Always Off":return"Disable"}}function getGuardInterval(htgi){switch(htgi){case"Auto":return 0;case"Enable":return 400;case"Disable":return 800}}function getWEPType(type){return type?"HEX":"ASCII"}function getProtectedFrame(param){switch(param){case"NoMgmtFrameProtection":return"Disabled";case"MgmtFrameProtectionOptional":return"Optional";case"MgmtFrameProtectionRequired":return"Required";default:return}}var _=__webpack_require__(4),T=__webpack_require__(122).T,funcs=__webpack_require__(5);module.exports=function(config){function getMembers(ifaces,radio,devMode){if(ifaces&&ifaces.Bridge){var ifacePath="Device.Network.Interface.",bridges=funcs.newConfig.normalize(ifaces.Bridge),result={};return _.each(bridges,function(br,id){var bridgeMembers=funcs.newConfig.normalize(br.Members);if(bridgeMembers){var members={};_.each(bridgeMembers,function(member,key){-1==member.Link.indexOf("WiFi")&&(members[key]=member)}),_.each(radio,function(elem,key){_.each(elem.AccessPoint,function(ap,index){if(-1==index.indexOf("-"))if(_.isUndefined(ap.ProfileId))~index.indexOf("+")&&"1"==id&&(members["+3"]={Link:ifacePath+"WiFi."+(parseInt(ifaces.WiFi.max_instance)+1)+"."});else{var ifaceId=_.findKey(bridgeMembers,{Link:ap.Interface});_.isUndefined(ifaceId)||(members[ifaceId]={Link:ap.Interface})}}),_.each(elem.EndPoint,function(ep,index){if(ep.Enable){var ifaceId=_.findKey(bridgeMembers,{Link:ep.Interface});_.isUndefined(ifaceId)?"1"==id&&"AccessPoint"==devMode&&(members["+new_member"]={Link:ifacePath+"WiFi."+(parseInt(ifaces.WiFi.max_instance)+1)+"."}):members[ifaceId]={Link:ep.Interface}}})}),(_.size(members)||"1"==id)&&(result[id]={Members:members})}}),result}}var pattern=T({"->":!0,$config:":external",Device:{WiFi:{"->":["$radio","Radio"],$config:["$root",function(r){return r.$config}],$radio:["$root",function(r){return r.$config.Device.WiFi.Radio}],Radio:{"->":!0,"{$elem}":["$parent",function(p){return p.$radio}],":":["$elem",function(e){return e.Inx}],$return:["$parent","$elem",function(p,e){return components.radio.build({$radio:p.$radio,$band:e.OperatingFrequencyBand})}]},APProfile:["$radio","$config",function(r,c){return components.approfile.build({$radio:r,$config:c})}],StationProfile:["$radio",function(r){return components.stprofile.build({$radio:r})}]},Network:{Interface:{Bridge:{"->":!0,$interfaces:["$root",function(r){return r.$config.Device.Network?r.$config.Device.Network.Interface:void 0}],$radio:["$root",function(r){return r.$config.Device.WiFi.Radio}],$devMode:["$root",function(r){return r.$config.Device.DevMode}],$return:["$interfaces","$radio","$devMode",function(ifaces,r,devMode){return getMembers(ifaces,r,devMode)}]}}}}});return pattern.build({$config:config})};var components={radio:T({"->":["?","$advanced","$ap","$wmm","Advanced","AccessPoint","EndPoint"],$radio:":external",$band:":external",$input:["$radio","$band",function(r,b){return _.find(r,function(e){return e.OperatingFrequencyBand&&b==e.OperatingFrequencyBand})}],$ap:["$input",function(i){return getAP(i.AccessPoint)}],$ep:["$input*",function(i){return getEPList(i.EndPoint)}],$wmm:["$input",function(i){return i.WMM}],"?":["$input",function(i){return!!i}],OperatingFrequencyBand:["$input",function(i){return i.OperatingFrequencyBand}],Enable:["$input",function(i){return i.Enable}],OperatingStandards:["$input",function(i){return i.OperatingStandards?getOperatingStandart(i.OperatingStandards):void 0}],AutoChannelEnable:["$input",function(i){return i.AutoChannelEnable}],HighChannelsEnable:["$input",function(i){return _.has(i,"HighChannelEnable")?i.HighChannelEnable:void 0}],AutoChannelRefreshEnable:["$input",function(i){return i.AutoChannelReselect}],AutoChannelRefreshPeriod:["$input",function(i){return i.AutoChannelReselectPeriod}],Channel:["$input",function(i){return i.Channel?parseInt(i.Channel):void 0}],CurrentAP:["$input",function(i){return i.AccessPointCurrent}],Advanced:{"->":["$input","AC"],$input:["$parent",function(p){return p.$input}],$wmm:["$parent",function(p){return p.$wmm}],OperatingChannelBandwidth:["$input",function(i){return getOperationChannelBandwidth(i.OperatingChannelBandwidth,i.OperatingStandards)}],HTCoexistence:["$input",function(i){return getHTCoexistence(i.OperatingChannelBandwidth,i.Coexistence)}],ExtensionChannel:["$input",function(i){return getExtChannel(i.OperatingChannelBandwidth,i.Channel,i.ExtensionChannel)}],BeaconPeriod:["$input",function(i){return i.BeaconPeriod}],RTSThreshold:["$input",function(i){return i.RTSThreshold}],FragmentationThreshold:["$input",function(i){return i.FragmentationThreshold}],DTIMPeriod:["$input",function(i){return i.DTIMPeriod}],StationKeepAlive:["$input",function(i){return i.StationKeepAlive}],AdaptivityMode:["$input",function(i){return i.AdaptivityMode}],BGProtection:["$input",function(i){return getBGProtection(i.BGProtection)}],TransmitPower:["$input",function(i){return parseInt(i.TransmitPower)}],GuardInterval:["$input",function(i){return getGuardInterval(i.HTGI)}],DropMulticast:["$input",function(i){return i.Igmpdrop}],SessionTimeoutInterval:["$input",function(i){return i.SessionTimeoutInterval}],TransmitBeamforming:["$input",function(i){return i.TxBeamforming}],STBC:["$input",function(i){return i.STBC}],LowOFDM:["$input",function(i){return i.EnableLowOFDM}],DFSEnable:["$input",function(i){return i.DFS}],Dot11KEnabled:["$input",function(i){return i.Dot11KEnabled}],Dot11VEnabled:["$input",function(i){return _.has(i,"Dot11VEnabled")?!!i.Dot11KEnabled&&i.Dot11VEnabled:void 0}],AC:{"->":["$acs","$bcs","?","AP","BSS"],$acs:["$parent",function(p){return p.$wmm?p.$wmm.AP[1].AC:void 0}],$bcs:["$parent",function(p){return p.$wmm?p.$wmm.EP[1].AC:void 0}],"?":["$acs","$bcs",function(acs,bcs){return!!acs||!!bcs}],AP:{"->":!0,$acs:["$parent",function(p){return p.$acs}],"{$ac, $index}":["$acs",function(acs){return acs}],":":["$ac",function(ac){return ac.__id}],AccessCategory:["$ac",function(ac){return ac.AccessCategory}],AIFSN:["$ac*",function(ac){return ac.AIFSN}],ECWMin:["$ac*",function(ac){return ac.ECWMin}],ECWMax:["$ac*",function(ac){return ac.ECWMax}],TxOpMax:["$ac*",function(ac){return ac.TxOpMax}],ACM:["$ac*",function(ac){return ac.AcmPolicy}],AckPolicy:["$ac*",function(ac){return ac.AckPolicy}]},BSS:{"->":!0,$bcs:["$parent",function(p){return p.$bcs}],"{$bc, $index}":["$bcs",function(bcs){return bcs}],":":["$bc",function(bc){return bc.__id}],AccessCategory:["$bc",function(bc){return bc.AccessCategory}],AIFSN:["$bc*",function(bc){return bc.AIFSN}],ECWMin:["$bc*",function(bc){return bc.ECWMin}],ECWMax:["$bc*",function(bc){return bc.ECWMax}],TxOpMax:["$bc*",function(bc){return bc.TxOpMax}],ACM:["$bc*",function(bc){return bc.AcmPolicy}],AckPolicy:["$bc*",function(bc){return bc.AckPolicy}]}}},AccessPoint:{"->":["?","$wmm","$obj","$key","WPS"],$wmm:["$parent",function(p){return p.$wmm}],"?":["$parent",function(p){return!!p.$ap}],"{$obj, $key}":["$parent",function(p){return p.$ap}],":":["$key",function(k){return k}],Enable:["$obj",function(o){return o.Broadcast}],WMMMode:["$wmm*",function(w){return w.Mode}],Profile:["$obj","$key","$root",function(o,k,r){return getProfile(k,o.Profile,r.$input.AccessPointProfileMax)}],EnableWiFiFromWPSButton:["$obj",function(o){return o.WPS?o.WPS.ActivateRadioByButtonWPS:void 0}],WPS:{"->":["?"],$wps:["$parent",function(p){return p.$obj.WPS}],"?":["$wps",function(w){return!!w}],Enable:["$wps*",function(w){return w.Enable}],ConnectPBC:["$wps*",function(w){return"PBC"==w.Method}],ConnectPIN:["$wps*",function(w){return"PIN"==w.Method?w.PIN:""}]}},EndPoint:{"->":["?"],"?":["$parent",function(p){return!!p.$ep}],"{$obj, $key}":["$parent",function(p){return p.$ep}],":":["$key*",function(k){return k}],Enable:["$obj*",function(o){return o.Enable}],Profile:["$obj*","$key*","$root",function(o,k,r){return _.isEmpty(o.SSID)?void 0:getProfileEP(k,o.Profile,r.$input.EndPointProfileMax)}]}}),approfile:T({"->":["$ap","$standart","Security"],$radio:":external",$config:":external","{$input}":["$radio",function(r){return r}],$standart:["$input",function(i){return getOperatingStandart(i.OperatingStandards)}],"{$ap, $key}":["$input",function(i){return getAP(i.AccessPoint)}],":":["$ap","$key",function(a,k){return getProfileId(a.ProfileId,k)}],SSID:["$ap","$config",function(a,c){return c.HasPostfix?a.SSID+"@unifi":a.SSID}],BSSID:["$ap",function(a){return a.BSSID}],SSIDAdvertisementEnabled:["$ap",function(a){return!a.SSIDAdvertisementEnabled}],MaxAssociatedDevices:["$ap",function(a){return a.MaxAssociatedDevices}],IsolationEnable:["$ap",function(a){return a.ClientIsolation}],AccessPolicy:["$ap",function(a){return a.AccessPolicy}],GuestAccess:["$ap",function(o){return o.GuestAccess}],BandwidthRestrict:["$ap",function(a){return a.BandwidthRestricted}],NSG:["$ap",function(a){return a.NSG}],Security:{"->":["$sec","ModeEnabled","RADIUS","WEPKey"],$standart:["$parent",function(p){return p.$standart}],$sec:["$parent",function(p){return p.$ap.Security}],ModeEnabled:["$sec*","$standart",function(s,st){return getModeEnabled(s.ModeEnabled,st,s.EncryptionType)}],KeyPassphrase:["$sec*","ModeEnabled",function(s,me){return"WPAPSKWPA2PSK"==me||"WPAPSK"==me||"WPA2PSK"==me||"WPA3SAE"==me||"WPA2PSKWPA3SAE"==me?s.PreSharedKey:void 0}],EncryptionType:["$sec*","$standart",function(s,st){return getEncryptionType(st,s)}],RekeyingInterval:["$sec*","ModeEnabled",function(s,me){return"OPEN"!=me&&"SHARED"!=me?s.RekeyingInterval:void 0}],RADIUS:{"->":!0,$sec:["$parent",function(p){return p.$sec}],$me:["$parent",function(p){return p.ModeEnabled}],ServerIPAddr:["$sec*","$me",function(s,me){return"WPA1WPA2"==me||"WPA"==me||"WPA2"==me?s.RadiusServerIPAddr:void 0}],ServerPort:["$sec*","$me",function(s,me){return"WPA1WPA2"==me||"WPA"==me||"WPA2"==me?s.RadiusServerPort:void 0}],Secret:["$sec*","$me",function(s,me){return"WPA1WPA2"==me||"WPA"==me||"WPA2"==me?s.RadiusSecret:void 0}]},ProtectedManagementFrames:["$sec*",function(s){return getProtectedFrame(s.ProtectedManagementFrames)}],PreAuthentication:["$sec*","ModeEnabled",function(s,me){return"WPA2"==me||"WPA1WPA2"==me?s.PreAuthentication:void 0}],WEPKeySelected:["$sec*","ModeEnabled",function(s,me){return!s.DefaultKeyID||"OPEN"!=me&&"SHARED"!=me?void 0:parseInt(s.DefaultKeyID)}],WEPKey:{"->":["$sec*","1","2","3","4"],$sec:["$parent",function(p){return p.$sec}],$me:["$parent",function(p){return p.ModeEnabled}],1:{"->":!0,$sec:["$parent",function(p){return p.$sec}],$me:["$parent",function(p){return p.$me}],Str:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?s.WEPKey1:void 0}],Type:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?getWEPType(s.WEPasHEX):void 0}]},2:{"->":!0,$sec:["$parent",function(p){return p.$sec}],$me:["$parent",function(p){return p.$me}],Str:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?s.WEPKey2:void 0}],Type:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?getWEPType(s.WEPasHEX):void 0}]},3:{"->":!0,$sec:["$parent",function(p){return p.$sec}],$me:["$parent",function(p){return p.$me}],Str:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?s.WEPKey3:void 0}],Type:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?getWEPType(s.WEPasHEX):void 0}]},4:{"->":!0,$sec:["$parent",function(p){return p.$sec}],$me:["$parent",function(p){return p.$me}],Str:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?s.WEPKey4:void 0}],Type:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?getWEPType(s.WEPasHEX):void 0}]}}}}),stprofile:T({"->":["$ep","$standart","Security"],$radio:":external","{$input}":["$radio",function(r){return r}],$standart:["$input",function(i){return getOperatingStandart(i.OperatingStandards)}],"{$ep, $key}":["$input",function(i){return getEP(i.EndPoint)}],":":["$ep*","$key*",function(e,k){return getProfileIdEP(e.ProfileId,k)}],SSID:["$ep*",function(ep){return ep.SSID}],BSSID:["$ep*",function(ep){return ep.BSSID}],Security:{"->":["$sec","ModeEnabled","RADIUS","WEPKey"],$sec:["$parent",function(p){return p.$ep?p.$ep.Security:void 0}],$standart:["$parent",function(p){return p.$standart}],EncryptionType:["$sec*",function(s){return getEncryptionType("",s)}],ModeEnabled:["$sec*","$standart",function(s,st){return getModeEnabled(s.ModeEnabled,st,s.EncryptionType)}],KeyPassphrase:["$sec*","ModeEnabled",function(s,me){return"WPAPSKWPA2PSK"==me||"WPAPSK"==me||"WPA2PSK"==me||"WPA3SAE"==me||"WPA2PSKWPA3SAE"==me?s.PreSharedKey||void 0:void 0}],RADIUS:{"->":!0,$sec:["$parent",function(p){return p.$sec}],Password:["$sec*",function(s){return s.RadiusPassword}],Username:["$sec*",function(s){return s.RadiusUsername}]},WEPKeySelected:["$sec*","ModeEnabled",function(s,me){return!s.DefaultKeyID||"OPEN"!=me&&"SHARED"!=me?void 0:parseInt(s.DefaultKeyID)}],WEPKey:{"->":["$sec*","1","2","3","4"],$sec:["$parent",function(p){return p.$sec}],$me:["$parent",function(p){return p.ModeEnabled}],1:{"->":!0,$sec:["$parent",function(p){return p.$sec}],$me:["$parent",function(p){return p.$me}],Str:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?s.WEPKey1:void 0}],Type:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?getWEPType(s.WEPasHEX):void 0}]},2:{"->":!0,$sec:["$parent",function(p){return p.$sec}],$me:["$parent",function(p){return p.$me}],Str:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?s.WEPKey2:void 0}],Type:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?getWEPType(s.WEPasHEX):void 0}]},3:{"->":!0,$sec:["$parent",function(p){return p.$sec}],$me:["$parent",function(p){return p.$me}],Str:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?s.WEPKey3:void 0}],Type:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?getWEPType(s.WEPasHEX):void 0}]},4:{"->":!0,$sec:["$parent",function(p){return p.$sec}],$me:["$parent",function(p){return p.$me}],Str:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?s.WEPKey4:void 0}],Type:["$sec*","$me",function(s,me){return"SHARED"==me||"OPEN"==me&&s.OpenWEP?getWEPType(s.WEPasHEX):void 0}]}}}})}},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}var _promise=__webpack_require__(7),_promise2=_interopRequireDefault(_promise);!function(){function pull(cb){function initPull(response){var config=funcs.buildTree(response[0].result.ParameterList),attrs=funcs.buildTreeAttributes(response[1].result.ParameterList);return dms.data=converter.dsysinitToNative(config),dms.attrs=funcs.deepClone(attrs),dms.__initialData=funcs.deepClone(dms.data),cb&&cb(),_promise2["default"].resolve()}function errorCb(response){var error=response&&response.error?response.error:{};return cb&&cb(error),_promise2["default"].reject()}return _promise2["default"].all([cpe.GetParameterValues([wifiPath,hostnamePath]),cpe.GetParameterAttributes([wifiPath,hostnamePath])]).then(initPull,errorCb)}function push(cb){function successCb(){cb&&cb()}function errorCb(response){var error=response&&response.error?response.error:{};return cb&&cb(error),_promise2["default"].reject(error)}function prepareHostnames(initialHosts,configHosts){var result={};return _.each(configHosts,function(elem,key){if(-1==key.indexOf("+")){var host=initialHosts[key];host&&(result[key]=host)}}),result}var changes=dms.status();if(!changes)return cb&&cb();var cpeData=converter.nativeToDsysinit(dms.data),initData=converter.nativeToDsysinit(dms.__initialData);initData.Device.Hostnames=prepareHostnames(dms.__initialData.Device.Hostnames,cpeData.Device.Hostnames);var diffConfig=funcs.newConfig.makeDiff(initData,cpeData,dms.attrs);return cpe.ApplyDifference(diffConfig).then(successCb,errorCb)}var _=__webpack_require__(4),funcs=__webpack_require__(5),wifiPath="Device.WiFi.",hostnamePath="Device.Hostnames.",converter=__webpack_require__(184),cpe=__webpack_require__(3),dms={pull:pull,push:push,data:null,attrs:null,__initialData:null};module.exports=dms}()},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getProfiles(data){var radio=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.radio)),result={},key=1;return _.each(radio,function(item,radioKey){_.each(item.AccessPoint,function(ap){var profile=ap.Profile,profileId=profile?profile.match(/\.\d+\.$/g,""):void 0;if(profileId){var approfile=funcs.fetchBranch(data,profile);approfile.Band=item.OperatingFrequencyBand,approfile.BandInx=radioKey,approfile.Inx=Number(profileId[0].replace(/\./g,"")),result[key++]=approfile}})}),result}function getHost(data,mac){var hosts=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.hostnames)),result={},host=_.find(hosts,function(elem){return elem.MAC.toUpperCase()==mac.toUpperCase()});return host&&(result.Hostname=host.Alias,result.__Inst=_.findKey(hosts,function(elem){return elem.MAC.toUpperCase()==mac.toUpperCase()})),result}var pattern=T({"->":["$data","Device"],$data:":external",Device:{"->":!0,Hostnames:["$root",function(r){return funcs.newConfig.normalize(funcs.fetchBranch(r.$data,paths.hostnames))}],WiFiMACFilter:{"->":["$profiles","Networks","Rules"],$profiles:["$root",function(r){return getProfiles(r.$data)}],NeedHostname:!0,Networks:{"->":!0,1:["$parent",function(p){return components.network.build({$profiles:p.$profiles,$band:"2.4GHz"})}],2:["$parent",function(p){return components.network.build({$profiles:p.$profiles,$band:"5GHz"})}]},Rules:{"->":!0,"{$profiles, $profileKey}":["$parent",function(p){return p.$profiles}],"{$macFilters, $key}":["$profiles*",function(p){return funcs.newConfig.normalize(p.MACFilter)}],":":["$profileKey*","$key*",function(pKey,key){return pKey+key}],$host:["$root","$macFilters*",function(r,mf){return getHost(r.$data,mf.MAC)}],Network:["$profiles","$macFilters",function(p,mf){return mf?p.Inx.toString():void 0}],Band:["$profiles","$macFilters",function(p,mf){return mf?"2.4GHz"==p.Band?"1":"2":void 0}],BandInx:["$profiles","$macFilters",function(p,mf){return mf?p.BandInx:void 0}],MAC:["$macFilters*",function(mf){return mf.MAC}],Enable:["$macFilters*",function(mf){return mf.Enable}],Hostname:["$host*",function(h){return h.Hostname}],Inx:["$key*",function(k){return k}],HostInst:["$host*",function(h){return h.__Inst}]}}}});return pattern.build({$data:data})}function getBand(band){return band.replace(/\./g,"").replace(/GHz/g,"")}function getAccessPolicy(accessPolicy){switch(accessPolicy){case"Disable":return"off";case"Allow":return"allow";case"Deny":return"deny"}}function nativeToDsysinit(data){function getRules(allRules,band,network,hostnames){var rules=_.omit(allRules,function(rule,key){return-1!=key.indexOf("-")});return rules=_.where(rules,{Band:band,Network:network}),_.map(rules,function(elem){if(!elem.HostInst){var host=_.findKey(hostnames,function(obj){return obj.MAC.toUpperCase()==elem.MAC.toUpperCase()});host&&(elem.HostInst=host)}return _.has(elem,"Hostname")&&!elem.Hostname&&(elem.Hostname=""),elem})}function getAccessPolicy(accessPolicy){switch(accessPolicy){case"off":return"Disable";case"allow":return"Allow";case"deny":return"Deny"}}function getHosts(data){var result=[],networks=funcs.fetchBranch(data,paths.wifiProfiles),rules=funcs.fetchBranch(data,paths.wifiMACFilter),hostnames=funcs.fetchBranch(data,paths.hostnames);return _.each(networks,function(net,key){_.each(net.List,function(list,id){result=result.concat(getRules(rules,key,id,hostnames))})}),_.uniq(result)}var pattern=T({"->":["$data","Device"],$data:":external",Device:{"->":!0,WiFi:{APProfile:{"->":["$rules","$netKey","$profileKey","MACFilter"],$rules:["$root",function(r){return funcs.fetchBranch(r.$data,paths.wifiMACFilter)}],"{$networks, $netKey}":["$root",function(r){return funcs.fetchBranch(r.$data,paths.wifiProfiles)}],"{$profiles, $profileKey}":["$networks",function(net){return net.List}],":":["$profileKey*",function(key){return key}],AccessPolicy:["$profiles",function(p){return getAccessPolicy(p.AccessPolicy)}],MACFilter:{"->":!0,"{$rules, $key}":["$parent",function(p){return getRules(p.$rules,p.$netKey,p.$profileKey)}],":":["$rules*","$key*",function(r,key){return r.Inx?r.Inx:key+"+"}],MAC:["$rules*",function(r){return r.MAC}],Enable:["$rules*",function(r){return r.Enable}]}}},Hostnames:{"->":!0,"{$hosts, $i}":["$root",function(r){return getHosts(r.$data)}],":":["$hosts*","$i*",function(h,i){return h.HostInst?h.HostInst:"+"+i}],Alias:["$hosts*",function(h){return h.Hostname}],MAC:["$hosts*",function(h){return h.MAC}]}}});return pattern.build({$data:data})}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),paths={radio:"Device.WiFi.Radio.",hostnames:"Device.Hostnames.",wifiProfiles:"Device.WiFiMACFilter.Networks.",wifiMACFilter:"Device.WiFiMACFilter.Rules."};module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit};var components={};components.network=T({"->":["$input","List"],$profiles:":external",$band:":external",$input:["$profiles","$band",function(p,b){return _.filter(p,function(e){return e.Band&&e.Band==b})}],"?":["$input",function(i){return i.length>0}],Band:["$band",function(b){return getBand(b)}],BandInx:["$input",function(i){return i[0].BandInx}],List:{"->":!0,"{$profilesList}":["$root",function(r){return r.$input}],":":["$profilesList*",function(p){return p.Inx}],BSSID:["$profilesList*",function(p){return p.BSSID}],SSID:["$profilesList*",function(p){return p.SSID}],AccessPolicy:["$profilesList*",function(p){return getAccessPolicy(p.AccessPolicy)}],Enable:["$profilesList*",function(p){return"Disable"!=p.AccessPolicy}]}})},function(module,exports,__webpack_require__){"use strict";"use version 6";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}var _promise=__webpack_require__(7),_promise2=_interopRequireDefault(_promise);!function(){function pull(cb){function fetchData(){return _promise2["default"].all([cpe.GetParameterValues(configPaths,void 0,!0),cpe.GetParameterAttributes(configPaths,void 0,!0)])}function initPull(response){var config=funcs.buildTree(response[0].result.ParameterList);return dms.attrs=funcs.buildTreeAttributes(response[1].result.ParameterList),dms.data={Device:{DNS:converter.dsysinitToNative(config)}},dms.__initialData=funcs.deepClone(dms.data),cb&&cb(),_promise2["default"].resolve()}function errorCb(response){var error=response&&response.error?response.error:{};return cb&&cb(error),_promise2["default"].reject(error)}return fetchData().then(initPull,errorCb)}function push(cb){function success(){return cb&&cb(),_promise2["default"].resolve()}function error(response){var error=response&&response.error?response.error:{};return cb&&cb(error),_promise2["default"].reject()}var initData=converter.nativeToDsysinit(dms.__initialData),newData=converter.nativeToDsysinit(dms.data),diff=funcs.newConfig.makeDiff(initData,newData,dms.attrs);return _.isEmpty(diff)?(cb&&cb(),_promise2["default"].resolve()):void cpe.ApplyDifference(diff).then(success,error)}var _=__webpack_require__(4),funcs=__webpack_require__(5),cpe=__webpack_require__(3),converter=(__webpack_require__(119),__webpack_require__(186)),paths={dnsServer:"Device.Network.Server.DNS.",dhcp:"Device.Network.Server.DHCP.",connection:"Device.Network.Connection.",group:"Device.Network.Group.",dns:"Device.Network.DNS.",server:"Device.Network.Server.",iface:"Device.Network.Interface.",usbConns:"Device.USB.Connection."},dms={pull:pull,push:push,data:null,__initialData:null,attrs:null};module.exports=dms;var configPaths=[paths.dns,paths.server,paths.iface,paths.connection,paths.group];autoconf.BR2_PACKAGE_ANWEB_USB_MODEM&&configPaths.push(paths.usbConns)}()},function(module,exports,__webpack_require__){"use strict";!function(){function dsysinitToNative(data){function getDns(data,dhcp){var dns=funcs.fetchBranch(data,paths.dnsServer),currentDns=_.findWhere(dns,{Interface:dhcp.Interface}),dnsInst=_.findKey(dns,function(e){return e.Interface==dhcp.Interface});return currentDns&&(currentDns.__Inst=dnsInst),currentDns}function getGroup(data,dhcp){var groups=funcs.fetchBranch(data,paths.group);return _.findWhere(groups,{LAN:dhcp.Interface})}function getIfname(primary,dnsMode,group,ipType){var ifname;if("Default"==dnsMode||"None"==dnsMode){var order="v4"==ipType?group.WAN.order:group.WANv6.order,wans="v4"==ipType?group.WAN:group.WANv6;ifname=order.length?wans[order[0]].Link:""}else ifname=primary;return ifname}function getServers(servers,ipType,ifname){var dnsServers=servers.split(","),ipFunc="v4"==ipType?funcs.is.ipv4:funcs.is.ipv6,result=_.filter(dnsServers,function(elem){return ipFunc(elem)});if(!result.length){var dns=funcs.fetchBranch(data,paths.dns+"Current."),activeDns=_.findWhere(dns,{Origin:ifname});if(activeDns){var addrs=funcs.newConfig.normalize(activeDns.Address);result=_.map(addrs,function(elem){return elem.IPAddress})}}return result}function getAfterServers(ipType){var dnsAfter=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.dns+"After.")),ipFunc="v4"==ipType?funcs.is.ipv4:funcs.is.ipv6;return _.chain(dnsAfter).map(function(elem,key){return elem.__id=key,elem}).filter(function(elem){return ipFunc(elem.IPAddress)}).value()}function getIfaces(group,data){function getIfaceList(group,data,type){var result={},wans="v4"==type?group.WAN:group.WANv6,order=wans.order,gwKey=order.length?order[0]:void 0;return _.each(funcs.newConfig.normalize(wans),function(elem,key){var iface=funcs.fetchBranch(data,elem.Link);iface&&(_.isEmpty(iface.Name)&&(iface=funcs.fetchBranch(data,iface.Interface)),result[elem.Link]={Name:iface.Name||iface.Ifname,Gwif:gwKey==key})}),result}var ifaces={V4:{},V6:{}};return ifaces.V4=getIfaceList(group,data,"v4"),_.has(group,"WANv6")&&(ifaces.V6=getIfaceList(group,data,"v6")),ifaces}var pattern=T({"->":["$data","$dhcp","$dns","$conns","$group","Ifaces","V4","V6"],$data:":external",$dhcp:["$data",function(d){return funcs.fetchBranch(d,paths.dhcp)}],$dns:["$data","$dhcp",function(d,dhcp){return getDns(data,dhcp)}],$group:["$data","$dhcp",function(d,dhcp){return getGroup(d,dhcp)}],$conns:["$data",function(d){return funcs.fetchBranch(d,paths.conns)}],__DhcpInst:"1",__DnsInst:["$dns*",function(dns){return dns.__Inst}],AvailDefroute:["$dhcp*",function(dhcp){return _.has(dhcp,"PrimaryWAN")}],AvailIPv6:["$group*",function(gr){return _.has(gr,"WANv6")}],Ifaces:{"->":["$ifaces","V4","V6"],$group:["$parent",function(p){return p.$group}],$data:["$parent",function(p){return p.$data}],$ifaces:["$group*","$data",function(gr,data){return getIfaces(gr,data)}],V4:{"->":!0,"{$ifaces, $i}":["$parent",function(p){return p.$ifaces.V4}],":":["$i*",function(i){return i}],Name:["$ifaces*",function(i){return i.Name}],Gwif:["$ifaces*",function(i){return i.Gwif}]},V6:{"->":["?"],
"?":["$parent",function(p){return!!p.$ifaces.V6}],"{$ifaces, $i}":["$parent",function(p){return p.$ifaces.V6}],":":["$i*",function(i){return i}],Name:["$ifaces*",function(i){return i.Name}],Gwif:["$ifaces*",function(i){return i.Gwif}]}},V4:{"->":["$dhcp","$dns","$ifname","Servers","After"],$dhcp:["$parent",function(p){return p.$dhcp}],$dns:["$parent",function(p){return p.$dns}],$group:["$parent",function(p){return p.$group}],Defroute:["$dhcp*",function(dhcp){return dhcp.DNSMode?"Default"==dhcp.DNSMode:void 0}],Manual:["$dns*","$dhcp*",function(dns,dhcp){return"None"==dhcp.DNSMode}],Ifname:["$dhcp*","$group*",function(dhcp,group){return dhcp.DNSMode?getIfname(dhcp.PrimaryWAN,dhcp.DNSMode,group,"v4"):""}],$ifname:["Ifname",function(i){return i}],Servers:{"->":!0,$dhcp:["$parent",function(p){return p.$dhcp}],$dns:["$parent",function(p){return p.$dns}],$ifname:["$parent",function(p){return p.$ifname}],"{$servers, $i}":["$dhcp*","$dns*","$ifname",function(dhcp,dns,ifname){return getServers(dns.DNSServers,"v4",ifname)}],":":["$i",function(i){return i+1}],$return:["$servers",function(s){return s}]},After:{"->":!0,$data:["$root",function(r){return r.data}],"{$servers, $i}":["$data",function(d){return getAfterServers("v4")}],":":["$i",function(i){return i}],IPAddress:["$servers*",function(s){return s.IPAddress}],__id:["$servers*",function(s){return s.__id}]}},V6:{"->":["?","$dhcp","$dns","$ifname","Servers"],$dhcp:["$parent",function(p){return p.$dhcp}],$dns:["$parent",function(p){return p.$dns}],$group:["$parent",function(p){return p.$group}],"?":["$group*",function(gr){return _.has(gr,"WANv6")}],Defroute:["$dhcp*",function(dhcp){return dhcp.DNSModev6?"Default"==dhcp.DNSModev6:void 0}],Manual:["$dns*","$dhcp*",function(dns,dhcp){return"None"==dhcp.DNSModev6}],Ifname:["$dhcp*","$group*",function(dhcp,group){return dhcp.DNSModev6?getIfname(dhcp.PrimaryWANv6,dhcp.DNSModev6,group,"v6"):""}],$ifname:["Ifname",function(i){return i}],Servers:{"->":!0,$dhcp:["$parent",function(p){return p.$dhcp}],$dns:["$parent",function(p){return p.$dns}],$ifname:["$parent",function(p){return p.$ifname}],"{$servers, $i}":["$dhcp*","$dns*","$ifname",function(dhcp,dns,ifname){return getServers(dns.DNSServers,"v6",ifname)}],":":["$i",function(i){return i+1}],$return:["$servers",function(s){return s}]},After:{"->":!0,$data:["$root",function(r){return r.$data}],"{$servers, $i}":["$data",function(d){return getAfterServers("v6")}],":":["$i",function(i){return i}],IPAddress:["$servers*",function(s){return s.IPAddress}],__id:["$servers*",function(s){return s.__id}]}}});return pattern.build({$data:data})}function nativeToDsysinit(data){function getPrimaryWAN(dns){var servers=_.toArray(dns.Servers);return servers=_.compact(servers),dns.Manual?{mode:"None",primary:""}:dns.Defroute?{mode:"Default",primary:""}:{mode:"Link",primary:dns.Ifname}}function getServers(data){var v4=data.V4,v6=data.V6,servers=[];if(v4.Manual){var v4Servers=_.toArray(v4.Servers);servers=servers.concat(_.compact(v4Servers))}if(v6&&v6.Manual){var v6Servers=_.toArray(v6.Servers);servers=servers.concat(_.compact(v6Servers))}return servers.join(",")}function getAfterServers(data){var v4=data.V4,v6=data.V6,servers=_.toArray(v4.After);return servers=v6?servers.concat(_.toArray(v6.After)):servers,_.filter(servers,function(e){return!_.isEmpty(e.IPAddress)})}var pattern=T({"->":["$data","Device"],$data:":external",Device:{Network:{"->":!0,Server:{"->":!0,DHCP:{"->":!0,$data:["$root",function(r){return r.$data.Device.DNS}],":":["$data",function(d){return d.__DhcpInst}],$primaryv4:["$data",function(d){return getPrimaryWAN(d.V4)}],DNSMode:["$primaryv4",function(p){return p.mode}],PrimaryWAN:["$primaryv4",function(p){return p.primary}],$primaryv6:["$data",function(d){return d.AvailIPv6?getPrimaryWAN(d.V6):void 0}],DNSModev6:["$primaryv6*",function(p){return p?p.mode:void 0}],PrimaryWANv6:["$primaryv6*",function(p){return p?p.primary:void 0}]},DNS:{"->":!0,$data:["$root",function(r){return r.$data.Device.DNS}],":":["$data",function(d){return d.__DnsInst}],DNSServers:["$data",function(d){return getServers(d)}]}},DNS:{After:{"->":!0,$data:["$root",function(r){return r.$data.Device.DNS}],"{$servers, $inx}":["$data",function(d){return getAfterServers(d)}],":":["$inx*","$servers*",function(i,s){return s.__id?s.__id:"new_inst_"+i}],IPAddress:["$servers*",function(s){return s.IPAddress}]}}}}});return pattern.build({$data:data})}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),paths={dhcp:"Device.Network.Server.DHCP.1.",dnsServer:"Device.Network.Server.DNS.",conns:"Device.Network.Connection.",group:"Device.Network.Group.",dns:"Device.Network.DNS."};module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}}()},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}var _promise=__webpack_require__(7),_promise2=_interopRequireDefault(_promise);!function(){function pull(cb){function success(response){var config=funcs.buildTree(response[0].result.ParameterList),attrs=funcs.buildTreeAttributes(response[1].result.ParameterList);return dms.__initialData=funcs.deepClone(config),__initialCpeData=funcs.deepClone(config),dms.data=converter.config.dsysinitToNative(config),__initialNativeData=JSON.parse(angular.toJson(dms.data)),dms.attrs=funcs.deepClone(attrs),cb&&cb(),_promise2["default"].resolve()}function error(response){var error=response&&response.error?response.error:{};return _promise2["default"].reject(error)}return clean(),_promise2["default"].all([cpe.GetParameterValues([paths["switch"]]),cpe.GetParameterAttributes([paths["switch"]])]).then(success,error)}function push(cb){function prepareDiff(diff){var vlan=funcs.fetchBranch(diff,paths["switch"]+"Switches.1.Vlan."),result={};return _.each(vlan,function(elem,key){~key.indexOf("-")&&(elem.CreateIface=!1),result[key]=elem}),funcs.setValue(paths["switch"]+"Switches.1.Vlan",result,diff),diff}function success(){return cb&&cb(),_promise2["default"].resolve()}function error(response){if(response){console.log("error port allocation",response);var error=response&&response.error?response.error:{};return cb&&cb(error),_promise2["default"].reject()}return success()}if(!dms.isChanged())return cb&&cb();var newData=converter.config.nativeToDsysinit(dms.data),diff=funcs.newConfig.makeDiff(dms.__initialData,newData,dms.attrs);return _.isEmpty(diff)?(cb&&cb(),_promise2["default"].resolve()):(diff=prepareDiff(diff),cpe.ApplyDifference(diff).then(success,error))}function isChanged(){if(!dms.data||!dms.__initialData)return!1;var hasRemoved=_.keys(dms.data.sources).length!=_.keys(__initialNativeData.sources).length,changes=funcs.getChangesWithRemoved(JSON.parse(angular.toJson(__initialNativeData)),JSON.parse(angular.toJson(dms.data)));return hasRemoved||!_.isEmpty(changes)}function clean(){dms.data=null,dms.attrs=null,dms.__initialData=null}var _=__webpack_require__(4),funcs=__webpack_require__(5),cpe=__webpack_require__(3),converter=__webpack_require__(188),paths={"switch":"Device.Switch."},__initialCpeData=null,__initialNativeData=null,dms={pull:pull,push:push,data:null,attrs:null,__initialData:null,isChanged:isChanged};module.exports=dms}()},function(module,exports,__webpack_require__){"use strict";module.exports={config:__webpack_require__(189)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getVlanType(data,vlan){var LANPorts=[],WANPorts=[];return _.each(funcs.newConfig.normalize(vlan.Ports),function(elem){var portInfo=funcs.fetchBranch(data,elem.Link);-1!=portInfo.Alias.indexOf("WAN")?WANPorts.push({tag:elem.Tag}):LANPorts.push({tag:elem.Tag})}),LANPorts.length>0?WANPorts.length>0?WANPorts[0].tag?"wan_tag":"wan":"lan":WANPorts[0].tag?"wan_tag":"wan"}function getVlanID(vlan){return vlan.VID&&-1!=vlan.VID?vlan.VID:null}function getPorts(ports){var ports=funcs.newConfig.normalize(ports),result={};return _.each(ports,function(port,key){result[port.Link]=key}),result}function getBridge(link,sources){var bridge=_.findKey(sources,function(source){return"lan"!==source.type&&source.__ports[link]});return!!(bridge&&bridge>=0)&&bridge}function getTypeBridge(link,sources){var bridge=_.find(sources,function(source){return"lan"!==source.type&&source.__ports[link]});return bridge?bridge.type:void 0}var pattern=T({"->":["$data","$vlans","$ports","sources","lanPorts","wanPorts"],$data:":external",$vlans:["$data",function(o){return funcs.newConfig.normalize(funcs.fetchBranch(o,"Device.Switch.Switches.1.Vlan."))}],$ports:["$data",function(o){return funcs.newConfig.normalize(funcs.fetchBranch(o,"Device.Switch.Ports."))}],sources:{"->":!0,"{$vlan, $key, $index}":["$root",function(r){return r.$vlans}],":":["$index",function(o){return o}],__link:["$key",function(o){return"Device.Switch.Switches.1.Vlan."+o+"."}],__inst:["$key",function(o){return o}],__ports:["$vlan",function(o){return getPorts(o.Ports)}],type:["$parent","$vlan",function(p,v){return getVlanType(p.$data,v)}],vid:["$vlan",function(v){return getVlanID(v)}],enabled:["$vlan",function(v){return v.Enable}],name:["$vlan",function(v){return v.Name}]},lanPorts:{"->":!0,"{$port, $key}":["$root",function(r){return _.pick(r.$ports,function(o){return/^LAN/.test(o.Alias)})}],__link:["$key",function(o){return"Device.Switch.Ports."+o+"."}],__inst:["$key",function(o){return o}],name:["$port",function(o){return o.Alias}],alias:["$port",function(o){return o.Alias}],bridge:["__link","$parent",function(o,p){return getBridge(o,p.sources)}],bridgeType:["__link","$parent",function(o,p){return getTypeBridge(o,p.sources)}],isSelected:["$port",function(o){return o.Enable}],isWan:!1,isWifi:!1},wanPorts:{"->":!0,"{$port, $key}":["$root",function(r){return _.pick(r.$ports,function(o){return/^WAN/.test(o.Alias)})}],__link:["$key",function(o){return"Device.Switch.Ports."+o+"."}],__inst:["$key",function(o){return o}],name:["$port",function(o){return o.Alias}],alias:["$port",function(o){return o.Alias}],isSelected:["$port",function(o){return o.Enable}],isWan:!0,isWifi:!1}});return pattern.build({$data:data})}function nativeToDsysinit(data){function isIncluded(port,vlan,bridge){return"lan"==vlan.type?!port.bridge&&!port.isWan:port.isWan||port.bridge&&port.bridge==bridge}var pattern=T({"->":["$data","$ports","Device"],$data:":external",Device:{Switch:{Switches:{"->":!0,":":"1",Vlan:{"->":["$vlan","Ports"],"{$vlan, $pos, $index}":["$root",function(r){return r.$data.sources}],":":["$vlan","$index",function(o,i){return o.__inst?o.__inst:"new_vlan_"+i}],Enable:["$vlan",function(o){return o.enabled}],Name:["$vlan",function(o){return o.name}],VID:["$vlan",function(o){return o.vid||void 0}],CreateIface:!0,Ports:{"->":!0,"{$port, $pos, $index}":["$root",function(r){return[].concat(r.$data.lanPorts,r.$data.wanPorts)}],"?":["$port","$parent",function(o,p){return isIncluded(o,p.$vlan,p.$pos)}],":":["$port","$parent","$index",function(o,p,i){return p.$vlan.__ports&&p.$vlan.__ports[o.__link]?p.$vlan.__ports[o.__link]:"vlan_"+p.$index+"_new_port_"+i}],Link:["$port",function(o){return o.__link}],Tag:["$port","$parent",function(o,p){return("bridge"==p.$vlan.type||"wan_tag"==p.$vlan.type)&&o.isWan}]}}}}}});return pattern.build({$data:data})}var _=__webpack_require__(4),T=__webpack_require__(122).T,funcs=__webpack_require__(5);module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}var _promise=__webpack_require__(7),_promise2=_interopRequireDefault(_promise);!function(){function pull(cb){function initPull(response){var config=funcs.buildTree(response[0].result.ParameterList),attrs=funcs.buildTreeAttributes(response[1].result.ParameterList);return dms._data=converter.dsysinitToNative(config),dms._attrs=funcs.deepClone(attrs),dms._backup=funcs.deepClone(dms._data),cb&&cb(),_promise2["default"].resolve()}function errorCb(response){var error=response&&response.error?response.error:{};return cb&&cb(error),_promise2["default"].reject()}return _promise2["default"].all([cpe.GetParameterValues([paths.radio,paths.bands,paths.apProfile]),cpe.GetParameterAttributes([paths.apProfile])]).then(initPull,errorCb)}function getData(){return dms._data.Rules}function getNetworks(){return dms._data.Networks}function push(cb){function successCb(){return cb&&cb(),_promise2["default"].resolve()}function errorCb(response){var error=response&&response.error?response.error:{};return cb&&cb(error),_promise2["default"].reject(error)}var data=converter.nativeToDsysinit(dms._data),initData=converter.nativeToDsysinit(dms._backup),diff=funcs.newConfig.makeDiff(initData,data,dms._attrs);return _.isEmpty(diff)?cb&&cb():cpe.ApplyDifference(diff).then(successCb,errorCb)}function wasModified(){return!_.isEqual(dms._data,dms._backup)}var _=__webpack_require__(4),funcs=__webpack_require__(5),cpe=__webpack_require__(3),converter=__webpack_require__(192),dms={pull:pull,push:push,getData:getData,getNetworks:getNetworks,wasModified:wasModified,_data:null,_attrs:null,_backup:null},paths={radio:"Device.WiFi.Radio.*.AccessPoint.",bands:"Device.WiFi.Radio.*.OperatingFrequencyBand",apProfile:"Device.WiFi.APProfile."};module.exports=dms}()},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getProfiles(data){var radio=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.radio)),result={},key=1;return _.each(radio,function(item){_.each(item.AccessPoint,function(ap){var profile=ap.Profile,profileId=profile?profile.match(/\.\d+\.$/g,""):void 0;if(profileId){var approfile=funcs.fetchBranch(data,profile);approfile.Band=item.OperatingFrequencyBand,approfile.Inx=Number(profileId[0].replace(/\./g,"")),result[key++]=approfile}})}),result}var pattern=T({"->":["$profiles","Rules","Networks"],$data:":external",$profiles:["$data",function(d){return getProfiles(d)}],NeedSSIDSelect:!0,Networks:{"->":!0,1:["$parent",function(p){return components.network.build({$profiles:p.$profiles,$band:"2.4GHz"})}],2:["$parent",function(p){return components.network.build({$profiles:p.$profiles,$band:"5GHz"})}]},Rules:{"->":!0,"{$profiles, $profileKey}":["$parent",function(p){return p.$profiles}],"{$rules, $key}":["$profiles*",function(p){return funcs.newConfig.normalize(p.StationBandwidth)}],":":["$profileKey*","$key*",function(pKey,key){return pKey+key}],Network:["$profiles","$rules*",function(p,r){return r?p.Inx.toString():void 0}],Band:["$profiles","$rules*",function(p,r){return r?"2.4GHz"==p.Band?"1":"2":void 0}],MAC:["$rules*",function(r){return r.MAC.toUpperCase()}],Enabled:["$rules*",function(r){return r.Enable}],Inx:["$key*",function(k){return k}],ProfileKey:["$profileKey*",function(pk){return pk}],UploadRate:["$rules*",function(r){return r.UploadRate}],DownloadRate:["$rules*",function(r){return r.DownloadRate}],SSID:["$profiles","$rules*",function(p,r){return r?p.SSID:void 0}]}});return pattern.build({$data:data})}function getBand(band){return band.replace(/\./g,"").replace(/GHz/g,"")}function nativeToDsysinit(data){function getRules(allRules,band,network){var rules=_.omit(allRules,function(rule,key){return-1!=key.indexOf("-")});return rules=_.where(rules,{Band:band,Network:network})}var pattern=T({"->":["$data","Device"],$data:":external",Device:{WiFi:{APProfile:{"->":["$rules","$netKey","$profileKey","StationBandwidth"],$rules:["$root",function(r){return r.$data.Rules}],"{$networks, $netKey}":["$root",function(r){return r.$data.Networks}],"{$profiles, $profileKey}":["$networks",function(net){return net.List}],":":["$profileKey*",function(key){return key}],StationBandwidth:{"->":!0,"{$rules, $key}":["$parent",function(p){return getRules(p.$rules,p.$netKey,p.$profileKey)}],":":["$rules*","$key*",function(r,key){return r.Inx?r.Inx:key+"+"}],MAC:["$rules*",function(r){return r.MAC}],Enable:["$rules*",function(r){return r.Enabled}],UploadRate:["$rules*",function(r){return r.UploadRate}],DownloadRate:["$rules*",function(r){return r.DownloadRate}]}}}}});return pattern.build({$data:data})}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),paths={radio:"Device.WiFi.Radio."};module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit};var components={};components.network=T({"->":["$input","List"],$profiles:":external",$band:":external",$input:["$profiles","$band",function(p,b){return _.filter(p,function(e){return e.Band&&e.Band==b})}],"?":["$input",function(i){return i.length>0}],Band:["$band",function(b){return getBand(b)}],List:{"->":!0,"{$profilesList}":["$root",function(r){return r.$input}],":":["$profilesList*",function(p){return p.Inx}],BSSID:["$profilesList*",function(p){return p.BSSID}],SSID:["$profilesList*",function(p){return p.SSID}]}})},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports={nativeToDsysinit:__webpack_require__(195),dsysinitToNative:__webpack_require__(196)}},function(module,exports,__webpack_require__){"use strict";"use version 6";function getIfaceEnabled(conns,iface){if("BRIDGE"!=iface.data.LinkType)return iface.data.Enable;var bridgeConns=_.filter(conns,{type:"Bridge"});if(!bridgeConns.length)return iface.data.Enable;var connIface=_.find(bridgeConns,function(elem){return elem.data.__Link==iface.data.__Link});return connIface?connIface.data.Enable:iface.data.Enable}function getIGMPConns(conns){var ipv4oeConns=_.filter(conns,function(c){return"DHCP"==c.type||"Static"==c.type&&"L2TPv3"!=c.data.MediaType}),upstreams=_.filter(ipv4oeConns,function(c){return!!funcs.fetchBranch(c,"data.Flags.IGMP")});if(__autoconf.BR2_PACKAGE_ANWEB_CUSTOM_ROSTELECOM_35980){var pppoeConn=conns.find(function(c){return"PPPoE"==c.type&&!!funcs.fetchBranch(c,"data.Flags.IGMP")});if(pppoeConn){var fakePPPoE=funcs.deepClone(pppoeConn);fakePPPoE.data.__Link=pppoeConn.data.__LinkInterface,fakePPPoE.link=pppoeConn.data.__LinkInterface,upstreams.push(fakePPPoE)}}if(upstreams.length>0)return upstreams;var newConn=_.find(ipv4oeConns,function(c){return c.__isNew});return newConn?[newConn]:upstreams}function getMLDProxyConns(conns){var ipv6oeConns=_.filter(conns,function(c){return"DHCPv6"==c.type||"Staticv6"==c.type}),upstreams=_.filter(ipv6oeConns,function(c){return!!funcs.fetchBranch(c,"data.Flags.MLDProxy")});return upstreams.length>0?upstreams[0]:upstreams}function getUdpxyConns(conns){var ipv4oeConns=_.filter(conns,function(c){return"DHCP"==c.type||"Static"==c.type}),upstreams=_.find(ipv4oeConns,function(c){return!!funcs.fetchBranch(c,"data.Flags.Udpxy")});return upstreams}function isExtended(deviceMode){return!!deviceMode&&"Firewall"!=deviceMode}function flatConnections(input){var result=[];return _.each(input,function(elem,type){_.isObject(elem)&&elem.Connection&&_.each(elem.Connection,function(conn,inst){result.push({data:conn,inst:inst,type:type,path:"Device.WAN."+type+".Connection."+inst+"."})})}),result}function getConnections(conns){function isRemoveConn(inst){return/\-$/.test(inst)}function hasAdditonalConn(conn){return"PPPoEv6"==conn.type||"PPPoEDual"==conn.type||"PPTP"==conn.type&&"L2TPDUAL"==conn.data.ActualType||"PPTP"==conn.type&&!!conn.data.IPsec}function getAdditionalConn(conn,index,parentConn){var additionalConn=funcs.deepClone(conn);return"PPPoEv6"==conn.type||"PPPoEDual"==conn.type?additionalConn.type="IPv6oE":"PPTP"==conn.type&&conn.data.IPsec?additionalConn.type="IPsec":"PPTP"==conn.type&&"L2TPDUAL"==conn.data.ActualType&&(additionalConn.type="IPv6oE"),additionalConn.parentConn=parentConn.link,additionalConn.data.Flags=funcs.deepClone(parentConn.data.Flags),parentConn.data.__PingRuleInstSub&&(additionalConn.data.__PingRuleInst=parentConn.data.__PingRuleInstSub),parentConn.data.__RIPNetworkInstSub&&(additionalConn.data.__RIPNetworkInst=parentConn.data.__RIPNetworkInstSub),parentConn.data.__NATZoneInstSub&&(additionalConn.data.__NATZoneInst=parentConn.data.__NATZoneInstSub),parentConn.data.__IPsecInst&&(additionalConn.__Link="Device.Network.Connection.IPsec"+parentConn.data.__IPsecInst+"."),prepareConn(additionalConn,index)}function prepareConn(elem,index){function getLink(data,type,inst){if(data.__Link&&~data.__Link.indexOf(type))return data.__Link;if(data.__LinkSub)return data.__LinkSub;var newInst="new_conn_"+type+"_"+inst;return("USB"==type?"Device.USB.Connection.":"Device.Network.Connection."+type+".")+newInst+"."}function getType(conn,name){switch(name){case"IPv4oE":return"DHCP"==conn.AddressingType?"DHCP":"Static";case"IPoA":return"Static";case"IPv6oE":return"Static"==conn.Origin?"Staticv6":"DHCPv6";case"PPTP":return"PPTP"==conn.ActualType?"PPTP":"L2TP";case"PPPoA":case"PPPoEv6":case"PPPoEDual":return"PPPoE";default:return name}}function getInst(link){var arrLink=link?link.split("."):null,cpeInst=arrLink?arrLink[arrLink.length-2]:null;return cpeInst}function isPPP(type){return _.contains(["PPPoE","PPPoEv6","PPPoEDual","PPTP","L2TP","L2TPDUAL","PPPoA"],type)}function isVPN(type,data){return"IPsec"==type||!("PPTP"!=type&&"L2TP"!=type&&"Static"!=type&&"IPIP6"!=type||!data.AutomaticalConnection)}function getVersion(type,data){return"PPPoEDual"==type||"PPTP"==type&&"L2TPDUAL"==data.ActualType?"IPv4IPv6":"PPPoEDual"==type?"IPv4IPv6":_.contains(["IPv6oE","PPPoEv6"],type)?"IPv6":"USB"==type?"Dual"==data.Version?"IPv4IPv6":data.Version:"IPv4"}var version=getVersion(elem.type,elem.data),type=getType(elem.data,elem.type),link=getLink(elem.data,type,elem.inst),inst=getInst(link);return"PPTP"==elem.data.__Type&&"L2TPOVERIPSEC"==elem.data.ActualType&&elem.data.__New&&(elem.data.BaseConnectionIPSec="Device.Network.Connection.IPsec.new_conn_IPsec_"+elem.inst+"."),{data:elem.data,inst:inst,type:type,link:link,version:version,__isNew:elem.data.__New,__nativePath:elem.path,__nativeType:elem.type,__isPPP:isPPP(type),__isVPN:isVPN(type,elem.data),__parentConn:elem.parentConn,__NATBridgeLink:elem.data.__NATBridgeLink}}function setLinks(conns){function getLinkConfiguration(type,inst){var newInst="new_ppp_configuration_"+type+"_"+inst;return"Device.Network.Settings.PPPClient."+newInst+"."}_.each(conns,function(elem){elem.data.__Link||(elem.data.__Link=elem.link),elem.__isPPP&&!elem.data.__LinkConfiguration&&(elem.data.__LinkConfiguration=getLinkConfiguration(elem.type,elem.inst))}),_.each(conns,function(elem){if(elem.__isPPP&&!elem.data.__LowerConnection&&elem.data.__LowerConnectionNative){var lowerConnectionPath=elem.data.__LowerConnectionNative,lowerConnection=_.find(conns,function(e){return e.__nativePath==lowerConnectionPath});lowerConnection&&(elem.data.__LowerConnection=lowerConnection.data.__Link)}})}var outputConns=[];return _.each(conns,function(conn,index){if(!isRemoveConn(conn.inst)){var output=prepareConn(conn,index);if(outputConns.push(output),hasAdditonalConn(conn)){var additionalConn=getAdditionalConn(conn,index,output);outputConns.push(additionalConn)}}}),setLinks(outputConns),outputConns}function getZones(conns,nativeModel,type){var result={2:{conns:_.filter(conns,function(c){return("IPv4"==type&&systemIPv4(c)||"IPv6"==type&&systemIPv6(c))&&"Bridge"!=c.type&&"IPsec"!=c.type&&("USB"!=c.type||!c.data.InterfaceOnly)}),typeZone:"wan"}},connsUsb=conns.filter(function(c){return"USB"==c.type&&c.data.InterfaceOnly&&("IPv4"==type?"IPv6"!=c.version:"IPv4"!=c.version)});if(connsUsb.length){var zoneUsbInst=("IPv4"==type?nativeModel.Device.WAN.__inxZoneUSB:nativeModel.Device.WAN.__inxZoneUSBv6)||"new_inst_usb";result[zoneUsbInst]={conns:connsUsb,typeZone:"usb"}}return result}function getZoneIfaceInst(conn,ifaceInst,zone,version){switch(zone.typeZone){case"wan":return"USB"==conn.type&&"IPv6"==version?conn.data.__NATZonev6Inst||"new_inst_"+ifaceInst:conn.data.__NATZoneInst||"new_inst_"+ifaceInst;case"usb":return"IPv4"==version?conn.data.__UsbZoneInst||"new_inst_"+ifaceInst:conn.data.__UsbZonev6Inst||"new_inst_"+ifaceInst}}function getInterfaces(conns,media){function getInst(link){var arrLink=link.split(".");return arrLink[arrLink.length-2]}function isUniqIface(ifaces,vlan,type,inst){return _.every(ifaces,function(elem){return elem.type!=type||elem.inst!=inst})}function findConnByMedia(conns,mediaType,mediaLink){return _.find(conns,function(conn){if(!conn.data.Media)return!1;var connMedia=funcs.fetchBranch(conn.data.Media,mediaType+".");return connMedia&&connMedia.__Link==mediaLink})}var ifaces=[];if(!media)return ifaces;var mediaTypes=[{name:"Ethernet",prefix:"Interface",section:"Ethernet"},{name:"WiFi",prefix:"Network",section:"WiFi"},{name:"DSL.ATM",prefix:"Link",section:"ATM"},{name:"DSL.PTM",prefix:"Link",section:"PTM"},{name:"L2TPv3",prefix:"Interface",section:"L2TPv3"}];return _.each(mediaTypes,function(elem){var mediaInsts=funcs.fetchBranch(media,elem.name+"."+elem.prefix+".");_.each(mediaInsts,function(data,index){var type=elem.name,link=data.__Link,bridge=data.__BridgeLink,inst=getInst(link),conn=findConnByMedia(conns,type,link),vlan=conn?funcs.fetchBranch(conn,"data.VLAN."):void 0,bridgeInst=bridge?getInst(bridge):void 0;"PTM"==elem.section&&conn&&"Bridge"==conn.type&&(data.LinkType="BRIDGE"),isUniqIface(ifaces,vlan,type,inst)&&ifaces.push({type:type,inst:inst,bridgeInst:bridgeInst,data:data,conn:conn?conn.data:void 0,vlan:vlan})})}),ifaces}function getSettings(conns){function getParams(input){var arrLink=input.data.__LinkConfiguration.split(".");return{data:input.data,type:arrLink[arrLink.length-3],inst:arrLink[arrLink.length-2],version:input.version,nativeConnType:input.__nativeType}}var result=[];return _.each(conns,function(elem){elem.data.__LinkConfiguration&&result.push(getParams(elem))}),result}function getGroups(conns,input){function getDLConns(conns){var connsPPPoE=_.filter(conns,function(c){return"PPPoE"==c.type&&("IPv4"==c.version||"IPv4IPv6"==c.version)}),connsL2TP=_.filter(conns,function(c){return"L2TP"==c.type}),connsL2TPwithBaseConns=[];return _.each(connsL2TP,function(l2tp){var lowerConn=conns.find(function(conn){return"Device.WAN."+conn.data.__Path==l2tp.data.BaseConnection});lowerConn.data.DualLAN={Enable:!!l2tp.data.DualLAN&&l2tp.data.DualLAN.Enable},connsL2TPwithBaseConns.push(l2tp,lowerConn)}),_.union(connsPPPoE,connsL2TPwithBaseConns)}function getInst(linkGroup,type,inst){var arrLink=linkGroup?linkGroup.split("."):null;return arrLink?arrLink[arrLink.length-2]:"new_group_"+type+"_"+inst}function findConnLink(conns,link){var subConn=_.find(conns,{__parentConn:link});return subConn.link}var dl=input.Device.WAN.DualLAN,output={1:[]};if(_.each(conns,function(conn){if("IPsec"!=conn.type&&!_.find(conns,function(c){return conn.__parentConn==c.link&&c.__isVPN&&"L2TPDUAL"==c.data.ActualType})){var version=conn.version,obj={},groupInst=conn.data.__GroupInst||1,linkGroup="IPv4"==version||"IPv4IPv6"==version?conn.data.__LinkGroupv4:conn.data.__LinkGroupv6,rootPath="IPv4"==version||"IPv4IPv6"==version?"Device.Network.Group."+groupInst+".WAN.":"Device.Network.Group."+(conn.data.__GroupInst||1)+".WANv6.",inst=getInst(linkGroup,conn.type,conn.inst);dl&&conn.data.DualLAN&&conn.data.DualLAN.Enable&&"L2TP"==conn.type||(obj={inst:inst,version:"IPv4IPv6"==version?"IPv4":version,link:rootPath+inst+".",type:conn.type,vpn:conn.__isVPN,data:{Link:conn.data.__Link,InterfaceOnly:conn.data.InterfaceOnly},disabledGwif:conn.data.DisabledGateway},output[groupInst]||(output[groupInst]=[]),output[groupInst].push(obj),"USB"==conn.type&&"IPv4IPv6"==version&&(linkGroup=conn.data.__LinkGroupv6,rootPath="Device.Network.Group."+groupInst+".WANv6.",inst=getInst(linkGroup,conn.type,conn.inst),obj={inst:inst,version:"IPv6",link:rootPath+inst+".",type:conn.type,vpn:conn.__isVPN,data:{Link:conn.data.__Link,InterfaceOnly:conn.data.InterfaceOnly},disabledGwif:conn.data.DisabledGateway},output[groupInst]||(output[groupInst]=[]),output[groupInst].push(obj)))}}),dl&&dl.__has){var key=dl.__GroupInst?dl.__GroupInst:"new_group",dlConns=getDLConns(conns),dlRes=[];_.each(dlConns,function(conn,inx){if(conn.data.DualLAN&&conn.data.DualLAN.Enable&&("L2TP"==conn.type||"PPPoE"==conn.type)){var rootPath="Device.Network.Group."+key,keyv4=conn.data.DualLAN.__GroupInst?conn.data.DualLAN.__GroupInst:conn.inst;if(dlRes.push({inst:keyv4,version:conn.version,link:rootPath+".WAN."+keyv4+".",type:conn.type,vpn:conn.__isVPN,enableDualLan:conn.data.DualLAN.Enable,data:{Link:conn.data.__Link,InterfaceOnly:conn.data.InterfaceOnly}}),"IPv4IPv6"==conn.version){var keyv6=conn.data.DualLAN.__Groupv6Inst?conn.data.DualLAN.__Groupv6Inst:conn.inst,connLink=conn.data.__LinkSub?conn.data.__LinkSub:findConnLink(conns,conn.data.__Link);dlRes.push({inst:keyv6,version:"IPv6",type:"DHCPv6",vpn:!1,link:rootPath+".WANv6."+keyv6+".",data:{Link:connLink,InterfaceOnly:conn.data.InterfaceOnly}})}}}),output[key]=dlRes}return output}function getVPN(conns){function getInst(linkVPN,type,inst){var arrLink=linkVPN?linkVPN.split("."):null;return arrLink?arrLink[arrLink.length-2]:"new_vpn_"+type+"_"+inst}return _.chain(conns).filter(function(conn){return conn.__isVPN||_.find(conns,function(c){return conn.__parentConn==c.link&&c.__isVPN&&"L2TPDUAL"==c.data.ActualType})}).map(function(conn){var linkVPN=conn.data.__LinkVPN,inst=getInst(linkVPN,conn.type,conn.inst);return{inst:inst,data:{Link:conn.link}}}).value()}function getXDSL(ifaces){function getInst(linkPVC,inst){var arrLink=linkPVC?linkPVC.split("."):null;return arrLink?arrLink[arrLink.length-2]:"new_xdsl_"+inst}return _.chain(ifaces).filter(function(iface){return iface.data.__PVCLink}).map(function(iface){var linkPVC=iface.data.__PVCLink,inst=getInst(linkPVC,iface.inst);return{inst:inst,data:iface.data}}).value()}function getConnMedia(conn){if(_.has(conn,"Media")&&_.has(conn,"MediaType")){var mediaType=conn.MediaType;return funcs.fetchBranch(conn.Media,mediaType+".")||void 0}}function getDNS(conn,isStatic,type){function addDNS(output,value,inst){output[inst]={IPAddress:value}}var output={};return(_.has(conn,"DNSIPv6Automatical")&&!conn.DNSIPv6Automatical||isStatic)&&"v4"!=type&&(conn.DNSIPv6Server1&&addDNS(output,conn.DNSIPv6Server1,conn.DNSIPv6Order&&conn.DNSIPv6Order[0]?conn.DNSIPv6Order[0]:"+1"),conn.DNSIPv6Server2&&addDNS(output,conn.DNSIPv6Server2,conn.DNSIPv6Order&&conn.DNSIPv6Order[1]?conn.DNSIPv6Order[1]:"+2")),(_.has(conn,"DNSAutomatical")&&!conn.DNSAutomatical||isStatic)&&"v6"!=type&&(conn.DNSServer1&&addDNS(output,conn.DNSServer1,conn.DNSOrder&&conn.DNSOrder[0]?conn.DNSOrder[0]:"+1"),conn.DNSServer2&&addDNS(output,conn.DNSServer2,conn.DNSOrder&&conn.DNSOrder[1]?conn.DNSOrder[1]:"+2")),output}function getPPPAuth(type){return{CHAP:"AUTO"==type||"CHAP"==type,EAP:"AUTO"==type||"EAP"==type,MSCHAP:"AUTO"==type||"MS-CHAP"==type,MSCHAPv2:"AUTO"==type||"MS-CHAP-V2"==type,PAP:"AUTO"==type||"PAP"==type}}function getPPPEncryption(encr){switch(encr){case"None":return"None";case"MPPE":return"MPPE-40/128";case"MPPE40":return"MPPE-40";case"MPPE128":return"MPPE-128"}}function getPPPOndemand(ct){return"OnDemand"==ct}function getIPv4Address(input){return input.StaticIPAddress0+"/"+funcs.ipv4.mask["short"](input.StaticIPSubnetMask0)}function getIPv6Address(input){return input.StaticIPAddress0+"/"+ +input.StaticIPPrefix0}function getIPv6Mode(origin){switch(origin){case"AutoConfiguredBySlaac":return"Autoconf";case"AutoConfiguredByDHCPv6":return"DHCP";case"AutoConfigured":return"Auto";default:return}}function getGroupList(gs,order,dm){function getOrder(groups,oldOrder){if(!groups.length)return[];if(groups[0].disabledGwif)return oldOrder;var newOrder=_.pluck(groups,"inst"),curGw=null,unsortOrder=[];oldOrder&&_.isString(oldOrder)&&(oldOrder=oldOrder.split(","),curGw=_.find(groups,function(e){return e.inst==oldOrder[0]}),unsortOrder=_.filter(oldOrder,function(inst){return!(!_.contains(newOrder,inst)||curGw&&curGw.inst==inst)}));var sortConns=_.filter(groups,function(e){return-1!=e.inst.indexOf("new_conn")});curGw&&sortConns.push(curGw);var sortConns=_.sortBy(sortConns,function(conn){
var type=conn.type,inst=conn.inst;return"DHCPv6"==type?-1:-1==inst.indexOf("new_conn")||"PPTP"!=type&&"L2TP"!=type&&"PPPoE"!=type?0:-1}),sortOrder=_.pluck(sortConns,"inst");return _.union(sortOrder,unsortOrder)}var output={};if(_.each(gs,function(g){output[g.inst]={Link:g.data.Link}}),isExtended(dm)){var order=getOrder(gs,order);order&&order.length?(output.order=[],output.order[0]=order[0]):output.order=[]}return output}function systemIPv4(conn){return"IPv4"==conn.version||"IPv4IPv6"==conn.version}function systemIPv6(conn){return"IPv6"==conn.version&&"PPPoE"!=conn.type||"IPv4IPv6"==conn.version&&"USB"==conn.type}function activeFlag(conn,name){return conn.data.Flags&&conn.data.Flags[name]}function linkType(lt){switch(lt){case"EoA":return"IPOE_PPPOE";case"IPoA":return"IPOA";case"PPPoA":return"PPPOA";case"BRIDGE":return"BRIDGE"}}function qosClass(qos){switch(qos){case"UBR":return"ubr";case"UBR+":return"ubr_pcr";case"CBR":return"cbr";case"VBR-nrt":return"nrtvbr";case"VBR-rt":return"rtvbr"}}function getUnnumberedIP(input,conns){var output={},unnumberedInst=input.Device.WAN.UnnumberedIP,pppoeConns=_.filter(conns,function(c){return"PPPoE"==c.type&&("IPv4"==c.version||"IPv4IPv6"==c.version)});if(!pppoeConns)return unnumberedInst&&(output[unnumberedInst]={}),output;var result={};if(_.each(pppoeConns,function(elem){var unnumIP=elem.data.UnnumberedIP;if(unnumIP&&!_.isEmpty(unnumIP.IPAddress)&&!_.isEmpty(unnumIP.Mask)){var key=unnumIP.__IPKey?unnumIP.__IPKey:"new_"+elem.data.Name;result[key]={Enable:!0,Origin:elem.data.__Link,IPAddress:unnumIP.IPAddress+"/"+funcs.ipv4.mask["short"](unnumIP.Mask)}}}),!_.size(result))return unnumberedInst&&(output[unnumberedInst]={IPv4Address:{}}),output;var key=unnumberedInst?unnumberedInst:"new_ip";return output[key]={Enable:!0,IPv4Address:result,LowerLayer:"Device.Network.Interface.Loopback.1.",Name:"Unnumbered IP"},output}function getUnnumberedLink(conn,unnumberedInst){var unnumIP=conn.data.UnnumberedIP;return!unnumIP||_.isEmpty(unnumIP.IPAddress)||_.isEmpty(unnumIP.Mask)?"":unnumIP.__Link?unnumIP.__Link:"Device.Network.IP."+(unnumberedInst?unnumberedInst:"new_ip")+".IPv4Address.new_"+conn.data.Name+"."}function getFWRuleConns(input,conns,type){var pbr=input.Device.WAN.PBREnable,result=_.filter(conns,function(c){return activeFlag(c,"Ping")});result=_.map(result,function(elem){return elem.ruletype="ping",elem});var fwRules=conns.filter(function(c){return c.data.Flags&&0==c.data.Flags.Firewall});if(fwRules.map(function(elem){var obj=funcs.deepClone(elem);obj.ruletype="fw",result.push(obj)}),pbr){var dlConns=_.filter(conns,function(c){return"L2TP"==c.type&&c.data.DualLAN&&c.data.DualLAN.Enable});if(dlConns=_.map(dlConns,function(elem){return elem.ruletype="vrf",elem.__PBRInst=input.Device.WAN.PBRRule,elem}),result=result.concat(dlConns),input.Device.WAN.DualLAN&&input.Device.WAN.DualLAN.__has){var rules="IPv4"==type?input.Device.WAN.DualLAN.Rulesv4:input.Device.WAN.DualLAN.Rulesv6;if(rules){var dlfwRule={};dlfwRule.ruletype="dlvrf",dlfwRule.sourceZone="Device.Firewall."+type+".Zones."+("IPv4"==type?input.Device.WAN.DualLAN.Zonev4:input.Device.WAN.DualLAN.Zonev6)+".",dlfwRule.destZone="Device.Firewall."+type+".Zones.1.",dlfwRule.__Link="Device.Network.Interface.Bridge.1.",dlfwRule.__PBRInst=_.size(rules)?rules.dlToFw:void 0;var lanfwRule={};lanfwRule.ruletype="dlvrf",lanfwRule.sourceZone="Device.Firewall."+type+".Zones.3.",lanfwRule.destZone="Device.Firewall."+type+".Zones.1.",lanfwRule.__Link="Device.Network.Interface.Bridge."+input.Device.WAN.DualLAN.__inst+".",lanfwRule.__PBRInst=_.size(rules)?rules.lanToFw:void 0,result=result.concat([dlfwRule,lanfwRule])}}}return result}function getNameIfacePTM(allIfaces,currentIface){function getIndexIface(ifaces,inst){if(!ifaces.length)return null;if("new_inst"==inst){if(1==ifaces.length)return 1;var prefixName=_.last(ifaces).data.Name.match(/\d+$/)[0];return+prefixName+1}return _.findIndex(ifaces,{inst:inst})}if(currentIface.data.Name)return currentIface.data.Name;var tag=currentIface.vlan.Enable?currentIface.vlan.ID:"untag",name="PTM "+tag,ifaces=_.filter(allIfaces,function(iface){return-1!==iface.data.Name.indexOf(name)}),index=getIndexIface(ifaces,currentIface.inst);return index>0?name+"_"+index:name}function getFWDestZone(conn,type){switch(conn.ruletype){case"ping":case"vrf":return"Device.Firewall."+type+".Zones.1.";case"fw":return"Device.Firewall."+type+".Zones.3.";default:return conn.destZone}}function getFWInst(conn,inx,version){switch(conn.ruletype){case"ping":return"USB"==conn.type&&"IPv6"==version&&"IPv4IPv6"==conn.version?conn.data.__PingRulev6Inst?conn.data.__PingRulev6Inst:"new_inst_"+inx:conn.data.__PingRuleInst?conn.data.__PingRuleInst:"new_inst_"+inx;case"fw":return conn.data.__FWRuleInstSub||conn.data.__FWRuleInst?conn.data.__FWRuleInstSub||conn.data.__FWRuleInst:"new_inst_"+inx;default:return conn.__PBRInst?conn.__PBRInst:"new_inst_"+inx}}function getMasqueradeSourceInterface(data){if(data.$conn){if(data.$groups){var groupInst=null;if(_.each(data.$groups,function(group,inx){for(var i=0;i<group.length;i++)if(group[i].data.Link==data.$conn.link&&group[i].enableDualLan){groupInst=inx;break}}),groupInst)return"Device.Network.Interface.Bridge."+groupInst+"."}return!data.$groups&&data.$conn.__NATBridgeLink?data.$conn.__NATBridgeLink:"Device.Network.Interface.Bridge.1."}}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),__autoconf="undefined"==typeof autoconf?{}:autoconf;module.exports=function(input,initial){var pattern=T({"->":["$input","$flatConns","$conns","$ifaces","$settings","$groups","$vpns","$xdsl","$deviceMode","$pbr","Device"],$input:":external",$initial:":external",$flatConns:["$input",function(o){return flatConnections(funcs.fetchBranch(o,"Device.WAN."))}],$media:["$input",function(o){return funcs.fetchBranch(o,"Device.WAN.Media.")}],$conns:["$flatConns",function(o){return getConnections(o)}],$ifaces:["$flatConns","$media",function(cs,m){return getInterfaces(cs,m)}],$settings:["$conns",function(o){return getSettings(o)}],$groups:["$conns","$input",function(o,i){return getGroups(o,i)}],$vpns:["$conns",function(o){return getVPN(o)}],$xdsl:["$ifaces",function(o){return getXDSL(o)}],$deviceMode:["$input",function(o){return funcs.fetchBranch(o,"Device.WAN.__DeviceMode")}],$groupv4Order:["$input",function(o){return funcs.fetchBranch(o,"Device.WAN.__Groupv4Order")}],$groupv6Order:["$input",function(o){return funcs.fetchBranch(o,"Device.WAN.__Groupv6Order")}],$igmpDownstreamsInst:["$input",function(o){return funcs.fetchBranch(o,"Device.WAN.__IgmpDownstreamsInst")}],$mldDownstreamInst:["$input",function(o){return funcs.fetchBranch(o,"Device.WAN.__MLDDownstreamInst")}],$dsl:["$input",function(o){return funcs.fetchBranch(o,"Device.WAN.__DSL")}],$natv6:["$input",function(o){return funcs.fetchBranch(o,"Device.WAN.__NATv6")}],Device:{"->":["Network","Firewall","Routing","Services","xDSL","USB"],Network:{"->":!0,Connection:{"->":!0,DHCP:{"->":["$conn","?","Kabinet"],"{$conn,$i}":["$root",function(o){return _.filter(o.$conns,function(e){return"DHCP"==e.type})}],$media:["$conn*",function(c){return getConnMedia(c.data)}],":":["$conn*",function(c){return c.inst}],Enable:["$conn*",function(o){return o.data.Enable}],Name:["$conn*",function(o){return o.data.Name}],DNS:["$conn*",function(o){return getDNS(o.data,!1)}],Interface:["$media*",function(o){return o.__BridgeLink||o.__Link}],VendorID:["$conn*",function(o){return o.data.VendorID}],Hostname:["$conn*",function(o){return o.data.Hostname}],Kabinet:{"->":["?"],"?":["$parent",function(p){return!!p.$conn&&!!p.$conn.data.Kabinet}],$conn:["$parent",function(p){return p.$conn}],Enable:["$conn*",function(o){return o.data.Kabinet.Enable}],Password:["$conn*",function(o){return o.data.Kabinet.Password}]}},Static:{"->":["$conn","?","Kabinet"],"{$conn,$i}":["$root",function(o){return _.filter(o.$conns,function(e){return"Static"==e.type})}],$media:["$conn*",function(c){return getConnMedia(c.data)}],":":["$conn*",function(c){return c.inst}],Enable:["$conn*",function(o){return o.data.Enable}],Name:["$conn*",function(o){return o.data.Name}],IPAddress:["$conn*",function(o){return getIPv4Address(o.data)}],Gateway:["$conn*",function(o){return o.data.GatewayIPAddress}],DNS:["$conn*",function(o){return getDNS(o.data,!0)}],Interface:["$media*",function(o){return o.__BridgeLink||o.__Link}],Kabinet:{"->":["?"],"?":["$parent",function(p){return!!p.$conn&&!!p.$conn.data.Kabinet}],$conn:["$parent",function(p){return p.$conn}],Enable:["$conn*",function(o){return o.data.Kabinet.Enable}],Password:["$conn*",function(o){return o.data.Kabinet.Password}]}},DHCPv6:{"->":["$conn","?"],"{$conn,$i}":["$root",function(o){return _.filter(o.$conns,function(e){return"DHCPv6"==e.type})}],$media:["$conn*",function(c){return getConnMedia(c.data)}],":":["$conn*",function(c){return c.inst}],Enable:["$conn*",function(o){return o.data.Enable}],Name:["$conn*",function(o){return o.data.Name}],IPv6Mode:["$conn*",function(o){return getIPv6Mode(o.data.Origin)}],DHCPv6EnablePD:["$conn*",function(c){return c.data.DHCPv6EnablePD}],DNS:["$conn*",function(o){return getDNS(o.data,!1,"v6")}],Interface:["$media","$conn*",function(m,c){return c.__parentConn?c.__parentConn:m.__BridgeLink||m.__Link}]},Staticv6:{"->":["$conn","?"],"{$conn,$i}":["$root",function(o){return _.filter(o.$conns,function(e){return"Staticv6"==e.type})}],$media:["$conn*",function(c){return getConnMedia(c.data)}],":":["$conn*",function(c){return c.inst}],Enable:["$conn*",function(o){return o.data.Enable}],Name:["$conn*",function(o){return o.data.Name}],IPAddress:["$conn*",function(o){return getIPv6Address(o.data)}],Gateway:["$conn*",function(o){return o.data.GatewayIPAddress}],DNS:["$conn*",function(o){return getDNS(o.data,!0)}],Interface:["$media*",function(o){return o.__BridgeLink||o.__Link}]},PPPoE:{"->":["$conn","?"],"{$conn,$i}":["$root",function(o){return _.filter(o.$conns,function(e){return"PPPoE"==e.type})}],$media:["$conn*",function(c){return getConnMedia(c.data)}],":":["$conn*",function(c){return c.inst}],Enable:["$conn*",function(o){return o.data.Enable}],Name:["$conn*",function(o){return o.data.Name}],DNS:["$conn*",function(o){return getDNS(o.data,!1,"v4")}],ServiceName:["$conn*",function(o){return o.data.ServiceName}],PPPConfiguration:["$conn*",function(o){return o.data.__LinkConfiguration}],Interface:["$conn*",function(o){return o.data.__LinkTunnelInterface}],BaseInterface:["$media*",function(o){return o.__BridgeLink||o.__Link}],UnnumberedIP:["$conn*","$root",function(c,r){return getUnnumberedLink(c,r.$input.Device.WAN.UnnumberedIP)}]},PPTP:{"->":["$conn","?"],"{$conn,$i}":["$root",function(o){return _.filter(o.$conns,function(e){return"PPTP"==e.type})}],":":["$conn*",function(c){return c.inst}],Enable:["$conn*",function(o){return o.data.Enable}],Name:["$conn*",function(o){return o.data.Name}],DNS:["$conn*",function(o){return getDNS(o.data,!1)}],ServerAddress:["$conn*",function(o){return o.data.ServiceName}],PPPConfiguration:["$conn*",function(o){return o.data.__LinkConfiguration}],BaseInterface:["$conn*","$root",function(c,r){return c.__isVPN?"Device.Network.Group.1.":funcs.fetchBranch(r.$input,c.data.BaseConnection).__Link}]},L2TP:{"->":["$conn","?"],"{$conn,$i}":["$root",function(o){return _.filter(o.$conns,function(e){return"L2TP"==e.type})}],":":["$conn*",function(c){return c.inst}],Enable:["$conn*",function(o){return o.data.Enable}],Name:["$conn*",function(o){return o.data.Name}],DNS:["$conn*",function(o){return getDNS(o.data,!1,"v4")}],LNS:["$conn*",function(o){return o.data.ServiceName}],PPPConfiguration:["$conn*",function(o){return o.data.__LinkConfiguration}],BaseInterface:["$conn*","$root",function(c,r){return c.__isVPN?"Device.Network.Group.1.":c.data.BaseConnectionIPSec?c.data.BaseConnectionIPSec:funcs.fetchBranch(r.$input,c.data.BaseConnection).__Link}],LocalHostname:["$conn*",function(o){return o.data.Auth?o.data.Auth.LocalHostname:void 0}],RemoteHostname:["$conn*",function(o){return o.data.Auth?o.data.Auth.RemoteHostname:void 0}],Secret:["$conn*",function(o){return o.data.Auth?o.data.Auth.Secret:void 0}]},IPsec:{"->":!0,"{$conn,$i}":["$root",function(o){return _.filter(o.$conns,function(e){return"IPsec"==e.type})}],$parentConn:["$conn*","$root",function(c,r){return _.find(r.$conns,function(conn){return conn.link==c.__parentConn})}],":":["$conn*",function(c){return c.inst}],Name:["$conn*",function(o){return o.data.Name}],Enable:["$conn*",function(o){return o.data.Enable}],Key:["$conn*",function(o){return o.data.IPsec.Key}],PFS:["$conn*",function(o){return o.data.IPsec.PFS}],RightPort:["$conn*",function(o){return o.data.IPsec.PortEnabled?o.data.IPsec.Port:0}],Right:["$conn*",function(o){return o.data.ServiceName}],L2TP:["$parentConn*",function(o){return o.link}],Left:["$parentConn*","$root",function(c,r){return c.__isVPN?"Device.Network.Group.1.":funcs.fetchBranch(r.$input,c.data.BaseConnection).__Link}],Type:["$conn*",function(o){return o.data.IPsec.Type}]},IPIP6:{"->":!0,"{$conn, $i}":["$root",function(o){return o.$conns.filter(function(e){return"IPIP6"==e.type})}],":":["$conn*",function(c){return c.inst}],Enable:["$conn*",function(c){return c.data.Enable}],Name:["$conn*",function(c){return c.data.Name}],MTU:["$conn*",function(c){return c.data.MRUAuto?0:c.data.MaxMRUSize}],AFTRNameOption:["$conn*",function(c){return c.data.PeerIPv6Auto}],PeerIPv6:["$conn*",function(c){return c.data.PeerIPv6Auto?"":c.data.PeerIPv6}],Mode:["$conn*",function(c){return c.data.Mode}],IPv6:["$conn*","$root",function(c,r){return funcs.fetchBranch(r.$input,c.data.BaseConnection).__Link}]}},Interface:{"->":["?","Ethernet","WiFi","L2TPv3"],Ethernet:{"->":!0,"{$iface,$i}":["$root",function(o){return _.filter(o.$ifaces,function(e){return"Ethernet"==e.type})}],":":["$iface*",function(i){return i.inst}],Enable:["$iface*",function(o){return o.data.Enable}],MACAddress:["$iface*",function(o){return o.data.MACAddress.toLowerCase()}],MTU:["$iface*",function(o){return o.data.MaxMRUSize}],ProxyARP:["$iface*",function(o){return o.data.ProxyARP}]},WiFi:{"->":!0,"{$iface, $i}":["$root",function(o){return _.filter(o.$ifaces,function(e){return"WiFi"==e.type})}],":":["$iface*",function(i){return i.inst}],Enable:["$iface*",function(o){return o.data.Enable}],ProxyARP:["$iface*",function(o){return o.data.ProxyARP}]},ATM:{"->":!0,"{$iface, $i}":["$root",function(o){return _.filter(o.$ifaces,function(e){return"DSL.ATM"==e.type})}],":":["$iface*",function(i){return i.inst}],$vlan:["$iface*",function(iface){return funcs.fetchBranch(iface,"conn.VLAN.")||void 0}],Enable:["$root","$iface*",function(r,i){return getIfaceEnabled(r.$conns,i)}],LinkType:["$iface*",function(o){return linkType(o.data.LinkType)}],VID:["$vlan*",function(v){return v.Enable?parseInt(v.ID):0}],VPR:["$vlan*",function(v){return v.Enable?parseInt(v.Priority):0}],Name:["$iface*",function(i){return i.data.DestinationAddress?"ATM "+i.data.DestinationAddress:i.data.Name}],ProxyARP:["$iface*",function(o){return o.data.ProxyARP}]},PTM:{"->":!0,$ifaces:["$root",function(o){return _.filter(o.$ifaces,function(e){return"DSL.PTM"==e.type})}],"{$iface, $i}":["$ifaces",function(o){return o}],$vlan:["$iface*",function(iface){return iface.vlan}],":":["$iface*",function(i){return i.inst}],Enable:["$root","$iface*",function(r,i){return getIfaceEnabled(r.$conns,i)}],MACAddress:["$iface*",function(o){return o.data.MACAddress.toLowerCase()}],VID:["$vlan*",function(v){return v.Enable?parseInt(v.ID):0}],VPR:["$vlan*",function(v){return v.Enable?parseInt(v.Priority):0}],Name:["$ifaces*","$iface*",function(allIfaces,iface){return getNameIfacePTM(allIfaces,iface)}],ProxyARP:["$iface*",function(o){return o.data.ProxyARP}]},L2TPv3:{"->":!0,"{$iface, $i}":["$root",function(o){return _.filter(o.$ifaces,function(e){return"L2TPv3"==e.type})}],":":["$iface*",function(i){return i.inst}],MACAddress:["$iface*",function(i){return i.data.MACAddress.toLowerCase()}],MTU:["$iface*",function(i){return i.data.MaxMRUSize}]},Bridge:{"->":!0,"{$iface, $i}":["$root",function(o){return _.filter(o.$ifaces,function(e){return"Ethernet"==e.type&&!_.isEmpty(e.bridgeInst)})}],":":["$iface*",function(i){return i.bridgeInst}],MACAddress:["$iface*",function(o){return o.data.MACAddress.toLowerCase()}]}},Settings:{"->":["?","PPP"],"?":["$root",function(o){return o.$settings.length}],PPPClient:{"->":["$ppp","?","KeepAlive"],"?":["$ppp",function(o){return!!o}],"{$ppp,$i}":["$root",function(o){return _.filter(o.$settings,function(e){return"PPPClient"==e.type})}],":":["$ppp*",function(p){return p.inst}],Username:["$ppp*",function(p){return p.data.Username}],Password:["$ppp*",function(p){return p.data.WithoutAuth?"":p.data.Password}],MTU:["$ppp*",function(p){return p.data.MaxMRUSize}],KeepAlive:{"->":!0,$ppp:["$parent",function(p){return p.$ppp}],Enable:["$ppp*",function(p){return p.data.KeepAlive}],Fails:["$ppp*",function(p){return p.data.LCPEchoRetry}],Interval:["$ppp*",function(p){return p.data.LCPEcho}]},Auth:["$ppp*",function(p){return getPPPAuth(p.data.AuthenticationProtocol)}],Encryption:["$ppp*",function(p){return getPPPEncryption(p.data.EncryptionProtocol)}],Ondemand:["$ppp*",function(p){return getPPPOndemand(p.data.ConnectionTrigger)}],OndemandTimeout:["$ppp*",function(p){return p.data.IdleDisconnectTime}],PPPDebug:["$ppp*",function(p){return p.data.PPPDebug}],IPv6:["$ppp*",function(o){return"IPv6"==o.version||"IPv4IPv6"==o.version||"IPv4"==o.version&&"L2TPDUAL"==o.data.ActualType||void 0}],IPv6Only:["$ppp*",function(o){return"IPv6"==o.version||void 0}],LocalIP:["$ppp*",function(o){return o.data.StaticIPAddress0}]}},Group:{"->":["$groups","WAN","WANv6","VPN"],"{$groups, $key}":["$root",function(r){return r.$groups}],":":["$key",function(k){return k}],PBREnable:["$key","$root",function(k,r){return 1==k?r.$input.Device.WAN.PBREnable:void 0}],WAN:{"->":["$groups","$order","?"],$deviceMode:["$root",function(r){return r.$deviceMode}],$order:["$root",function(r){return r.$groupv4Order}],$groups:["$parent",function(o){return _.filter(o.$groups,function(g){return systemIPv4(g)&&!g.vpn&&"Bridge"!=g.type&&("USB"!=g.type||!g.data.InterfaceOnly)})}],$return:["$groups","$order","$deviceMode",function(gs,order,dm){return getGroupList(gs,order,dm)}]},WANv6:{"->":["$groups","$order","?"],$deviceMode:["$root",function(r){return r.$deviceMode}],$order:["$root",function(r){return r.__Groupv6Order}],$groups:["$parent",function(o){return _.filter(o.$groups,function(g){return systemIPv6(g)&&"Bridge"!=g.type&&("USB"!=g.type||!g.data.InterfaceOnly)})}],$return:["$groups","$order","$deviceMode",function(gs,order,dm){return getGroupList(gs,order,dm)}]},VPN:{"->":["$vpns"],"{$vpn,$i}":["$root",function(r){return r.$vpns}],":":["$vpn*",function(v){return v.inst}],$return:["$vpn*",function(v){return v.data}]}},IP:["$root",function(r){return getUnnumberedIP(r.$input,r.$conns)}]},Firewall:{"->":["?","IPv4","IPv6"],"?":["$root",function(p){return isExtended(p.$deviceMode)}],IPv4:{"->":["$conns","Zones","Rules","Masquerade"],$conns:["$root",function(r){return _.filter(r.$conns,function(c){return systemIPv4(c)&&"Bridge"!=c.type})}],Zones:{"->":["$zone","Interfaces","Type"],"{$zone, $inxZone}":["$root",function(r){return getZones(r.$conns,r.$input,"IPv4")}],":":["$inxZone",function(i){return i}],Interfaces:{"->":!0,$zone:["$parent",function(p){return p.$zone}],$inxZone:["$parent",function(p){return p.$inxZone}],"{$conn,$i}":["$parent",function(p){return p.$zone.conns}],":":["$conn*","$i","$zone",function(c,i,z){return getZoneIfaceInst(c,i,z,"IPv4")}],Path:["$conn*",function(c){return c.link}]},Type:["$zone",function(z){return z.type}],Name:["$zone",function(z){return"usb"==z.typeZone?"USB":void 0}]},Masquerade:{"->":["$groups","$conns","$conn","Dest","Source"],$groups:["$root",function(r){return r.$groups}],$conns:["$parent",function(p){return _.filter(p.$conns,function(c){return"IPsec"!=c.type&&"Bridge"!=c.type&&(!c.data.Flags||activeFlag(c,"NAT"))})}],"{$conn,$i}":["$conns",function(cs){return cs}],":":["$conn*","$i*",function(c,i){return c.data.__NATMasqInst||"new_inst_"+i}],Enable:["$conn*",function(c){return!c.data.__NATMasqInst||void 0}],Source:{"->":["Interface"],Interface:["$parent",function(p){return getMasqueradeSourceInterface(p)}]},Dest:{"->":["?"],"?":["$conn",function(c){return!!c}],$conn:["$parent",function(p){return p.$conn}],Interface:["$conn*",function(c){return c.data.__Link}]}},Rules:{"->":["$conns","$conn","Dest","Source","Proto","OriginalNAT"],$conns:["$root","$parent",function(r,p){return getFWRuleConns(r.$input,p.$conns,"IPv4")}],"{$conn,$i}":["$conns",function(cs){return cs}],":":["$conn*","$i*",function(c,i){return getFWInst(c,i,"IPv4")}],Enable:!0,Action:["$conn*",function(c){return c.action||("ping"==c.ruletype||"fw"==c.ruletype?"ACCEPT":"DROP")}],Pattern:["$conn*",function(c){return c.pattern||"fw"==c.ruletype&&"(FW)ALLOW"||"ping"==c.ruletype&&"ICMP"||void 0}],Proto:{"->":["?"],$conn:["$parent",function(p){return p.$conn}],"?":["$conn",function(c){return!(!c||!c.proto&&"ping"!=c.ruletype)}],":":1,Value:["$conn",function(c){return c.proto||"icmp"}]},OriginalNAT:{"->":["?"],$conn:["$parent",function(p){return p.$conn}],"?":["$conn",function(c){return!!c&&!!c.originalNAT}],":":1,IPAddress:["$conn",function(c){return c.originalNAT}]},Source:{"->":!0,$conn:["$parent",function(p){return p.$conn}],Iface:["$conn*",function(c){return"ping"==c.ruletype||"fw"==c.ruletype?c.data.__Link:""}],Zone:["$conn*",function(c){return"ping"==c.ruletype||"fw"==c.ruletype?"Device.Firewall.IPv4.Zones.2.":c.sourceZone?c.sourceZone:"Device.Firewall.IPv4.Zones.3."}]},Dest:{"->":["$conn","IPLinks"],$conn:["$parent",function(p){return p.$conn}],Zone:["$conn*",function(c){return getFWDestZone(c,"IPv4")}],Iface:["$conn*",function(c){return c.destIface}],IPLinks:{"->":["?"],$conn:["$parent",function(p){return p.$conn}],"?":["$conn",function(c){return!!c&&("vrf"==c.ruletype||"dlvrf"==c.ruletype)}],":":1,Link:["$conn*",function(c){return"dlvrf"==c.ruletype?c.__Link:c.data.__Link}]}}}},IPv6:{"->":["$conns","Zones","Rules","Masquerade"],$conns:["$root",function(r){return _.filter(r.$conns,function(c){return systemIPv6(c)})}],Zones:{"->":["$zone","Interfaces"],"{$zone, $inxZone}":["$root",function(r){return getZones(r.$conns,r.$input,"IPv6")}],":":["$inxZone",function(i){return i}],Interfaces:{"->":!0,$zone:["$parent",function(p){return p.$zone}],"{$conn, $i}":["$parent",function(p){return p.$zone.conns}],":":["$conn*","$i","$zone",function(c,i,z){return getZoneIfaceInst(c,i,z,"IPv6")}],Path:["$conn*",function(c){return c.link}]},Name:["$zone",function(z){return"usb"==z.typeZone?"USB":void 0}]},Masquerade:{"->":["?","$conns","$conn","Dest","Source"],"?":["$root",function(r){return!!r.$natv6}],$conns:["$parent",function(p){return p.$conns.filter(function(c){return"USB"==c.type&&!c.dataInterfaceOnly&&activeFlag(c,"NATv6")})}],"{$conn,$i}":["$conns",function(cs){return cs}],":":["$conn*","$i*",function(c,i){return c.data.__NATMasqInstv6||"new_inst_"+i}],Enable:["$conn*",function(c){return!c.data.__NATMasqInstv6||void 0}],Source:{"->":["Interface"],Interface:["$parent",function(p){return p.$conn?p.$conn.__NATBridgeLink||"Device.Network.Interface.Bridge.1.":void 0}]},Dest:{"->":["?"],"?":["$conn",function(c){return!!c}],$conn:["$parent",function(p){return p.$conn}],Interface:["$conn*",function(c){return c.data.__Link}]}},Rules:{"->":["$conns","$conn","Dest","Source","Proto"],$conns:["$root","$parent",function(r,p){return getFWRuleConns(r.$input,p.$conns,"IPv6")}],"{$conn,$i}":["$conns",function(cs){return cs}],":":["$conn*","$i*",function(c,i){return getFWInst(c,i,"IPv6")}],Enable:!0,Action:["$conn*",function(c){return"ping"==c.ruletype||"fw"==c.ruletype?"ACCEPT":"DROP"}],Pattern:["$conn*",function(c){return"fw"==c.ruletype&&"(FW)ALLOW"||"ping"==c.ruletype&&"ICMP"||void 0}],Proto:{"->":["?"],$conn:["$parent",function(p){return p.$conn}],"?":["$conn",function(c){return!!c&&"ping"==c.ruletype}],":":1,Type:{1:{Value:128},2:{Value:129}},Value:"ipv6-icmp"},Source:{"->":!0,$conn:["$parent",function(p){return p.$conn}],Iface:["$conn*",function(c){return"ping"==c.ruletype||"fw"==c.ruletype?c.data.__LinkSub||c.data.__Link:""}],Zone:["$conn*",function(c){return"ping"==c.ruletype||"fw"==c.ruletype?"Device.Firewall.IPv6.Zones.2.":c.sourceZone}]},Dest:{"->":["$conn","IPLinks"],$conn:["$parent",function(p){return p.$conn}],Zone:["$conn*",function(c){return getFWDestZone(c,"IPv6")}],IPLinks:{"->":["?"],$conn:["$parent",function(p){return p.$conn}],"?":["$conn",function(c){return!!c&&"dlvrf"==c.ruletype}],":":1,Link:["$conn*",function(c){return"dlvrf"==c.ruletype?c.__Link:c.data.__Link}]}}}}},Routing:{"->":["?"],"?":["$root",function(r){return isExtended(r.$deviceMode)}],RIP:{"->":["Networks","Enable"],Networks:{"->":!0,$conns:["$root",function(r){return _.filter(r.$conns,function(c){return systemIPv4(c)&&activeFlag(c,"RIP")})}],"{$conn,$i}":["$conns*",function(c){return c}],":":["$conn*","$i",function(c,i){return c.data.__RIPNetworkInst||"new_inst_"+i}],Link:["$conn*",function(c){return c.data.__Link}]},Enable:["Networks",function(nets){return!!_.size(nets)}]},RIPng:{"->":["Networks","Enable"],Networks:{"->":!0,$conns:["$root",function(r){return _.filter(r.$conns,function(c){return systemIPv6(c)&&activeFlag(c,"RIPng")&&"PPPoE"!=c.type})}],"{$conn,$i}":["$conns*",function(c){return c}],":":["$conn*","$i",function(c,i){return c.data.__RIPNetworkInstSub||c.data.__RIPNetworkInst||"new_inst_"+i}],Link:["$conn*",function(c){return c.link}]},Enable:["Networks",function(nets){return!!_.size(nets)}]}},Services:{"->":["?"],"?":["$root",function(r){return isExtended(r.$deviceMode)}],IGMPX:{"->":["$conn","Downstreams","Upstreams"],$conns:["$root",function(r){return getIGMPConns(r.$conns)}],Upstreams:{"->":!0,$conns:["$parent",function(p){return p.$conns}],"{$conn,$i}":["$conns*",function(c){return c}],":":["$conn*",function(c){return c.data?c.data.__IGMPInst||"new_inst_0":void 0}],Interface:["$conn*",function(c){return c.data.__Link}]},Downstreams:{"->":!0,$inst:["$root",function(r){return r.$igmpDownstreamsInst}],$conns:["$parent",function(p){return p.$conns}],":":["$conns*","$inst*",function(cs,inst){return inst?inst:cs.length?"new_inst_0":void 0}],Interface:["$conns*","$inst*",function(cs,inst){return cs.length||inst?"Device.Network.Interface.Bridge.1.":void 0}]}},MLDProxy:{"->":["$conn","Downstream"],$conn:["$root",function(r){return getMLDProxyConns(r.$conns)}],Upstream:["$conn*",function(c){return c&&c.data?c.data.__Link:""}],Downstream:{"->":!0,$inst:["$root",function(r){return r.$mldDownstreamInst}],$conn:["$parent",function(p){return p.$conn}],":":["$conn*","$inst*",function(cs,inst){return inst?inst:!_.isEmpty(cs)&&cs.data.Flags.MLDProxy?"new_inst_0":void 0}],Interface:["$conn","$inst*",function(cs,inst){return!_.isEmpty(cs)||inst?"Device.Network.Interface.Bridge.1.":void 0}]}},Udpxy:{"->":!0,$conn:["$root",function(r){return getUdpxyConns(r.$conns)}],IfaceWan:["$conn*",function(c){return c?c.data.__Link:""}]},IPsec:{"->":!0,Enable:["$root",function(r){return!!_.find(r.$conns,function(conn){return"IPsec"==conn.type})}]}},xDSL:{"->":["?","1"],"?":["$root",function(p){return p.$dsl}],1:{ATM:{PVC:{"->":!0,$pvcs:["$root",function(p){return p.$xdsl}],"{$pvc,$i}":["$pvcs*",function(p){return p}],":":["$pvc*",function(p){return p.inst}],$vpivci:["$pvc*",function(p){return p.data?p.data.DestinationAddress.split("/"):void 0}],Enable:!0,Interface:["$pvc*",function(p){return p.data.__Link}],VPI:["$vpivci*",function(o){return parseInt(o[0])}],VCI:["$vpivci*",function(o){return parseInt(o[1])}],QOS:["$pvc*",function(p){return qosClass(p.data.QoSClass)}],PCR:["$pvc*",function(p){return p.data.PeakCellRate}],MBS:["$pvc*",function(p){return p.data.MaximumBurstSize}],SCR:["$pvc*",function(p){return p.data.SustainableCellRate}],Encap:["$pvc*",function(p){return p.data.Encapsulation.toLowerCase()}]}}}},USB:{"->":["?","Modem","Connection"],"?":["$root",function(o){return!!o.$input.Device.WAN.Modems}],Modem:{"->":!0,"{$modems, $key}":["$root",function(o){return o.$input.Device.WAN.Modems}],":":["$key*",function(k){return k}],ActiveSIM:["$modems*",function(m){return m.ActiveSIM}]},Connection:{"->":["$conn","?","$ppp","PPPOptions","Binding","HealthCheck"],"{$conn, $i}":["$root",function(o){return _.filter(o.$conns,function(e){return"USB"==e.type})}],":":["$conn*",function(c){return c.inst}],APN:["$conn*",function(c){return c.data.APN}],DialNumber:["$conn*",function(c){return c.data.DialNumber}],AuthType:["$conn*",function(c){return c.data.AuthenticationProtocol}],Enable:["$conn*",function(c){return c.data.Enable}],Mode:["$conn*",function(c){return c.data.Mode}],Name:["$conn*",function(c){return c.data.Name}],NoAuth:["$conn*",function(c){return c.data.WithoutAuth}],Ifname:["$conn*",function(c){return _.isEmpty(c.data.Ifname)?void 0:c.data.Ifname}],Password:["$conn*",function(c){return c.data.WithoutAuth?void 0:c.data.Password}],Username:["$conn*",function(c){return c.data.WithoutAuth?void 0:c.data.Username}],IPv6:["$conn*",function(c){return"IPv4"!=c.data.Version}],IPv6Only:["$conn*",function(c){return"IPv6"==c.data.Version}],InterfaceOnly:["$conn*",function(c){return c.data.InterfaceOnly}],$ppp:["$conn*",function(c){return c}],PPPOptions:{"->":["$ppp","KeepAlive"],$ppp:["$parent",function(p){return p.$ppp}],KeepAlive:{"->":!0,$ppp:["$parent",function(p){return p.$ppp}],Enable:["$ppp*",function(ppp){return ppp.data.KeepAlive}],Fails:["$ppp*",function(ppp){return ppp.data.LCPEchoRetry}],Interval:["$ppp*",function(ppp){return ppp.data.LCPEcho}]},MTU:["$ppp*",function(ppp){return ppp.data.MaxMRUSize}],PPPDebug:["$ppp*",function(ppp){return ppp.data.PPPDebug}],Ondemand:["$ppp*",function(ppp){return getPPPOndemand(ppp.data.ConnectionTrigger)}],OndemandTimeout:["$ppp*",function(ppp){return ppp.data.IdleDisconnectTime}]},Binding:{"->":!0,$conn:["$parent",function(p){return p.$conn}],Modem:["$conn*",function(c){return c.data.Modem}]},HealthCheck:{"->":["$conn","$data","Ping"],$conn:["$parent",function(p){return p.$conn}],$data:["$conn*",function(c){return c.data.HealthCheck}],Enable:["$data*",function(d){return d.Enable}],Timeout:["$data*",function(d){return d.Timeout}],MaxAttempts:["$data*",function(d){return d.MaxPing}],Ping:{"->":!0,$data:["$parent",function(p){return p.$data}],$dataPing:["$data*",function(d){return d.PingAddress}],"{$ping, $index}":["$dataPing*",function(d){return d}],":":["$ping*","$index*",function(p,i){return p.__inst?p.__inst:"new_inst_"+i}],Address:["$ping*",function(p){return p.Address}]}},IPChangeDetection:["$conn*",function(c){return c.data.IPChangeDetection}]}}}}),res=pattern.build({$input:input,$initial:initial});if(initial){var flatConns=flatConnections(funcs.fetchBranch(input,"Device.WAN.")),conns=getConnections(flatConns),bridgeIfaces=_.filter(conns,{type:"Bridge"}),newBridgeIfaces=_.filter(bridgeIfaces,{__isNew:!0});if(res.Device.Network.Interface.Bridge=funcs.deepClone(funcs.newConfig.normalize(initial.Device.Network.Interface.Bridge)),newBridgeIfaces&&newBridgeIfaces.length){var groups=funcs.newConfig.normalize(funcs.fetchBranch(initial,"Device.Network.Group.")),bridgeGroup=_.find(groups,function(g){return"_tech#bridge"===g.Name}),oldBridges=funcs.newConfig.normalize(funcs.fetchBranch(initial,"Device.Network.Interface.Bridge.")),key=bridgeGroup&&_.findKey(oldBridges,function(br,k){return bridgeGroup.LAN==="Device.Network.Interface.Bridge."+k+"."});key||(key="new_inst",res.Device.Network.Group.new_inst={Name:"_tech#bridge",LAN:"Device.Network.Interface.Bridge."+key+"."},res.Device.Network.Interface.Bridge[key]={Members:{}}),_.each(newBridgeIfaces,function(i,k){_.each(i.data.Media,function(media,type){var obj={};switch(type){case"Ethernet":obj=media;break;case"DSL":obj=media.ATM||media.PTM}obj&&(res.Device.Network.Interface.Bridge[key].Members["new_inst"+k]={Link:obj.__Link,Name:i.data.Name})})})}}return res}},function(module,exports,__webpack_require__){"use strict";"use version 6";function _interopRequireDefault(obj){
return obj&&obj.__esModule?obj:{"default":obj}}function setBaseConnection(model){function flattenConnections(model){var types=["PPPoE","PPPoEv6","PPPoEDual","PPPoA","PPTP","IPv4oE","IPoA","IPv6oE","Bridge","USB"],arr=[];for(var i in types){var t=types[i],obj=model[t];if(obj){var conns=obj.Connection;for(var j in conns){var c=conns[j];c.__Path=t+".Connection."+j+".",arr.push(c)}}}return arr}var conns=flattenConnections(model),tunnels=model.PPTP.Connection,ipip6=model.IPIP6.Connection;for(var i in tunnels){var tunn=tunnels[i],baseConns=conns.find(function(conn){return conn.__Link==tunn.__LowerConnection});baseConns&&(tunn.BaseConnection="Device.WAN."+baseConns.__Path)}for(var i in ipip6){var elem=ipip6[i],baseConns=conns.find(function(conn){return conn.__Link==elem.__LowerConnection});baseConns&&(elem.BaseConnection="Device.WAN."+baseConns.__Path)}}function getMediaPath(media){return"Device.WAN.Media."+media.type+"."+media.prefix+"."+media.inx+"."}function getBridgeInst(ifaces,link,bridgeLink){var path="Bridge.1.";bridgeLink&&(path=bridgeLink.match(/Bridge\.\d+\.$/)[0]);var bridge=funcs.fetchBranch(ifaces,path);if(bridge){var members=funcs.newConfig.normalize(bridge.Members),key=_.findKey(members,{Link:link});return key?key:void 0}}function getEthernetLinkType(raw,input,memberInst){return __autoconf.BR2_PACKAGE_ANWEB_REALTEK_MODEM&&getPortParam(input,raw.data.LowerLayer).Upstream?memberInst?"EoA":"BRIDGE":void 0}function getPortParam(input,vlanPath){var vlan=funcs.fetchBranch(input,vlanPath);if(!vlan)return{};var ports=_.values(funcs.newConfig.normalize(vlan.Ports));if(!ports.length)return{};var port=funcs.fetchBranch(input,ports[0].Link);return port}function getUseAutomatical(conns){var count=0;return _.each(funcs.newConfig.normalize(conns),function(conn){count+=_.size(funcs.newConfig.normalize(conn))}),count>0}function getMedia(ifaces,type,conns,isDSL,hasDL,config){function mapFn(data,inst){var statsLink="Device.Statistics.Interface.";if(config&&data.Statistics){var statsInterfaces=funcs.fetchBranch(config,statsLink);statsInterfaces=_.omit(statsInterfaces,"max_instance");var keys=data.Statistics.split("."),key=keys[keys.length-2],currentMACAddress=key&&_.size(statsInterfaces)&&statsInterfaces[key].MACAddress;currentMACAddress&&(data.CurrentMACAddress=currentMACAddress)}var bridgeLink,link="Device.Network.Interface."+type+"."+inst+".";if(data.Bridged&&(bridgeLink=data.BridgeLink,config&&("Ethernet"==type||"L2TPv3"==type))){var bridgeIface=funcs.fetchBranch(config,data.BridgeLink);bridgeIface.MACAddress&&(data.MACAddress=bridgeIface.MACAddress)}return{data:data,link:link,bridgeLink:bridgeLink}}function filterFn(elem){function filterEth(elem){if(~elem.data.LowerLayer.indexOf("Cellular"))return!1;if(hasDL&&elem.bridgeLink){var fullIfaces={};return funcs.setValue("Device.Network.Interface",ifaces,fullIfaces),"Device.Network.Interface.Ethernet.1."!=elem.link&&"DualLAN"!=funcs.fetchBranch(fullIfaces,elem.bridgeLink).Name}if(isDSL&&elem.Upstream&&"Device.Network.Interface.Bridge.1."!=elem.BridgeLink)return!0;if("Device.Network.Interface.Bridge.1."==elem.bridgeLink)return!1;var vlan=funcs.fetchBranch(config,elem.data.LowerLayer);return _.some(vlan.Ports,function(e){return funcs.fetchBranch(config,e.Link).Upstream})}function filterWifi(elem){return"sta"==elem.data.Type&&elem.data.Enable&&!elem.data.Bridged}function filterL2TPv3(elem){return!elem.data.Bridged}if(!_.isObject(elem.data))return!1;switch(type){case"Ethernet":return filterEth(elem,isDSL);case"WiFi":return filterWifi(elem);case"ATM":case"PTM":return!0;case"L2TPv3":return filterL2TPv3(elem);case"Bridge":return!1;default:return!1}}function getCellularMedia(input,conns){var curConns=funcs.newConfig.normalize(conns),result=[];return _.each(curConns,function(item){var usb_iface=funcs.fetchBranch(input,item.Interface),ifaceLink=item.Interface;usb_iface.Type=""==item.Ifname?"-":item.Ifname,result.push({link:ifaceLink,data:usb_iface})}),result}return"Cellular"==type?getCellularMedia(ifaces,conns):ifaces&&ifaces[type]?_.chain(ifaces[type]).map(mapFn).filter(filterFn).value():void 0}function getMediaByConnection(media,conn){var result=void 0,mediaTypes=[{name:"Ethernet",prefix:"Interface"},{name:"WiFi",prefix:"Network"},{name:"DSL.ATM",prefix:"Link"},{name:"DSL.PTM",prefix:"Link"},{name:"Dongle",prefix:"Interface"},{name:"L2TPv3",prefix:"Interface"}];return _.some(mediaTypes,function(elem){var mediaInsts=funcs.fetchBranch(media,elem.name+"."+elem.prefix+".");return _.some(mediaInsts,function(obj,inx){var link=obj.__BridgeLink||obj.__Link;return _.contains([conn.data.Interface,conn.data.BaseInterface,conn.data.BridgeLink],link)?!(conn.data.Interface!=link&&conn.data.BaseInterface!=link&&obj.__BridgeLink&&link==obj.__BridgeLink&&conn.memberInst!=obj.__MemberInst||(result=_assign2["default"]({},{data:obj,type:elem.name,inx:inx,prefix:elem.prefix}),0)):void 0})}),result}function expandMedia(media){return funcs.setValue(media.type,media.data,{})}function getSubConnection(conns,types,config){var output=[];return _.each(types,function(type){output=output.concat(getConnection(conns,type,config,!0))}),output}function getConnection(conns,nativeType,config,onlySubConn,usbConns){function isBridge(type){return"ATM"==type||"PTM"==type||"Ethernet"==type}function prepareConns(conns,type,config){function getIPv4(conns,type,config){var input=_.pick(conns,"DHCP","Static"),output={};return _.each(input,function(elem,subType){output[subType]={},_.each(elem,function(obj,inst){if(_.isObject(obj)){var iface=funcs.fetchBranch(config,obj.Interface);("IPv4oE"!==type||isIPv4oE(iface))&&("IPoA"!==type||isIPv4oA(iface))&&(output[subType][inst]=obj)}})}),output}function getIPv6(conns,type,config){var input=_.pick(conns,"DHCPv6","Staticv6"),output={};return _.each(input,function(elem,subType){output[subType]={},_.each(elem,function(obj,inst){if(_.isObject(obj)){var usb=config.Device.USB?config.Device.USB.Connection:{};if(_.size(usb)){usb=funcs.newConfig.normalize(usb);var usbKey=_.findKey(usb,{Interface:"Device.Network.Connection."+subType+"."+inst+"."});if(usbKey)return}output[subType][inst]=obj}})}),output}function getPPPoE(conns,pppoeType,config){var output={PPPoE:{}};return _.each(conns.PPPoE,function(elem,inst){if(_.isObject(elem)){var pppClient=funcs.fetchBranch(config,elem.PPPConfiguration),iface=funcs.fetchBranch(config,elem.BaseInterface);("PPPoA"!=pppoeType||isPPPoA(iface))&&("PPPoE"!=pppoeType||isPPPoE(pppClient,iface))&&("PPPoEv6"!=pppoeType||isPPPoEv6(pppClient,iface))&&("PPPoEDual"!=pppoeType||isPPPoEDual(pppClient,iface))&&(output.PPPoE[inst]=elem)}}),output}function getBridge(conns,config){function hasTechGroup(bridgeLink,config){var groups=funcs.newConfig.normalize(funcs.fetchBranch(config,"Device.Network.Group.")),techGroup=_values2["default"](groups).find(function(group){return group.LAN==bridgeLink&&-1!=group.Name.indexOf("#bridge")});return!!techGroup}var input=_.pick(conns,"ATM","PTM","Ethernet"),output={};return _.each(input,function(elem,subType){output[subType]={},_.each(elem,function(obj,inst){_.isObject(obj)&&obj.BridgeLink&&("BRIDGE"==obj.LinkType||obj.Bridged)&&("Ethernet"!=subType||getPortParam(config,obj.LowerLayer).Upstream)&&hasTechGroup(obj.BridgeLink,config)&&(output[subType][inst]=obj)})}),output}function getPPTP(conns,config){var output=_.pick(conns,"PPTP","L2TP");return _.each(output,function(types){_.each(types,function(elem,key){if(elem.BaseInterface&&/IPsec/.test(elem.BaseInterface)){var baseIPsec=funcs.fetchBranch(config,elem.BaseInterface);baseIPsec&&(elem.BaseInterface=baseIPsec.Left)}if(elem.PPPConfiguration){var pppClient=funcs.fetchBranch(config,elem.PPPConfiguration);elem.isL2TPv6=pppClient&&pppClient.IPv6?!0:!1}})}),output}function isIPv4oE(iface){return!isIPv4oA(iface)}function isIPv4oA(iface){return iface&&iface.LinkType&&"IPOA"===iface.LinkType}function isPPPoE(pppClient,iface){return!pppClient.IPv6&&!pppClient.IPv6Only&&!isPPPoA(iface)}function isPPPoEv6(pppClient,iface){var isUSBLowerLayer=iface.LowerLayer&&iface.LowerLayer.includes("USB.Modem.");return pppClient.IPv6&&pppClient.IPv6Only&&!isPPPoA(iface)&&!isUSBLowerLayer&&!_.has(iface,"DialNumber")}function isPPPoEDual(pppClient,iface){return pppClient.IPv6&&!pppClient.IPv6Only&&!isPPPoA(iface)}function isPPPoA(iface){return iface&&iface.LinkType&&"PPPOA"===iface.LinkType}switch(type){case"IPv4oE":return getIPv4(conns,"IPv4oE",config);case"IPv6oE":return getIPv6(conns,"IPv6oE",config);case"IPoA":return getIPv4(conns,"IPoA",config);case"PPPoA":return getPPPoE(conns,"PPPoA",config);case"PPPoE":return getPPPoE(conns,"PPPoE",config);case"PPPoEv6":return getPPPoE(conns,"PPPoEv6",config);case"PPPoEDual":return getPPPoE(conns,"PPPoEDual",config);case"PPTP":return getPPTP(conns,config);case"USB":return{USB:conns};case"Bridge":return getBridge(conns,config);case"IPIP6":return{IPIP6:conns.IPIP6};default:return null}}function getAdditionalConn(conns,link,config){var additionalConn=void 0;return _.each(conns,function(elem,type){_.each(funcs.newConfig.normalize(elem),function(data,inst){data.Interface==link&&(additionalConn=makeConn(data,inst,type,config))})}),additionalConn}function getAdditionalConnUSB(conn,ifaceLink,config){if(conn.IPv6){var ifaceDHCPv6=_.find(ifaceLink,function(iface){return-1!=iface.indexOf("DHCPv6")});if(ifaceDHCPv6){var dhcpv6=funcs.fetchBranch(config,ifaceDHCPv6);if(-1!=dhcpv6.Interface.indexOf("PPPoE"))return dhcpv6.Interface}}}function getIPsecConn(conns,link,config){var ipsecConn=void 0;return _.each(conns,function(elem,type){_.each(funcs.newConfig.normalize(elem),function(data,inst){"IPsec"===type&&data.L2TP===link&&(ipsecConn=makeConn(data,inst,type,config))})}),ipsecConn}function makeBridgeConn(conn,inst,type,config){var connLink="Device.Network.Interface."+type+"."+inst+".";conn.Interface=connLink;var memberInst,name=void 0,bridge=funcs.fetchBranch(config,conn.BridgeLink);if(bridge){var inx=_.findKey(bridge.Members,function(m){return m.Link===connLink});inx&&(name=bridge.Members[inx].Name,memberInst=inx)}return{data:conn,type:type,link:connLink,name:name?name:conn.Name,memberInst:memberInst}}function makeConn(conn,inst,type,config){var groups=funcs.fetchBranch(config,"Device.Network.Group."),vpn=funcs.fetchBranch(config,"Device.Network.Group.1.VPN."),fw=funcs.fetchBranch(config,"Device.Firewall."),rip=funcs.fetchBranch(config,"Device.Routing.RIP."),ripv6=funcs.fetchBranch(config,"Device.Routing.RIPng."),igmp=funcs.fetchBranch(config,"Device.Services.IGMPX."),mld=funcs.fetchBranch(config,"Device.Services.MLDProxy."),ipsec=funcs.fetchBranch(config,"Device.Network.Connection.IPsec."),modems=funcs.fetchBranch(config,"Device.USB.Modem."),udpxy=funcs.fetchBranch(config,"Device.Services.Udpxy."),balancing=funcs.fetchBranch(config,"Device.Network.LoadBalancing."),loadBalancing=void 0;balancing&&(balancing=funcs.newConfig.normalize(balancing),_.size(balancing)&&(loadBalancing=_.first(_.toArray(balancing))));var version=getVersion(type,conn,config),connLink=("USB"==type?"Device.USB.Connection.":"Device.Network.Connection."+type+".")+inst+".",ifaceLink="USB"==type?_.pluck(funcs.newConfig.normalize(conn.Connections),"Link"):conn.Interface,curRip="IPv4"==version?rip:ripv6,output={data:"USB"!=type?conn:getUsbData(conn,conns,modems),additionalConn:"USB"!=type?getAdditionalConn(conns,connLink,config):getAdditionalConnUSB(conn,ifaceLink,config),ipsecConn:getIPsecConn(conns,connLink,config),type:type,isL2TPv6:_.has(conn,"isL2TPv6")?conn.isL2TPv6:void 0,version:version,link:connLink,ifaceLink:ifaceLink,NATBridgeLink:getNATBridgeLink(config,connLink),NATZoneInst:getNATZoneInst(fw,connLink,ifaceLink,"USB"==type?"IPv4":version),NATZoneInstv6:"USB"==type&&"IPv4"!=version?getNATZoneInst(fw,connLink,ifaceLink,"IPv6"):void 0,NATMasqInst:getNATMasqInst(fw,connLink,ifaceLink,version,"IPv4"),NATMasqInstv6:"USB"!=type||conn.InterfaceOnly?void 0:getNATMasqInst(fw,connLink,ifaceLink,version,"IPv6"),PingRuleInst:getPingRuleInst(fw,connLink,ifaceLink,"IPv4IPv6"==version?"IPv4":version),PingRulev6Inst:"USB"==type&&"IPv4IPv6"==version?getPingRuleInst(fw,connLink,ifaceLink,"IPv6"):void 0,FWRuleInst:getFWRuleInst(fw,connLink,ifaceLink,version),RIPNetworkInst:getRIPNetworkInst(curRip,~connLink.indexOf("USB")?ifaceLink:connLink),IGMPInst:getIGMPInst(igmp,~connLink.indexOf("USB")?ifaceLink:connLink,conn),IGMPDownInst:getIGMPDownInst(igmp,~connLink.indexOf("USB")?ifaceLink:connLink),MLDProxyInst:getMLDProxyInst(mld,~connLink.indexOf("USB")?ifaceLink:connLink),UdpxyInst:getUdpxyInst(udpxy,connLink),IPsecInst:getIPsecInst(ipsec,connLink),isShorewallZone:isShorewallZone(fw,connLink),isShorewallMasq:isShorewallMasq(fw,connLink),usbZoneInst:"USB"==type&&conn.InterfaceOnly?getZoneInst(fw,connLink,"IPv4"):void 0,usbZonev6Inst:"USB"==type&&conn.InterfaceOnly&&"IPv4"!=version?getZoneInst(fw,connLink,"IPv6"):void 0,isBased:"USB"==type?checkBased(config,connLink):void 0,isUseInMirror:"USB"==type?isUseInMirror(config,connLink):void 0};if(-1!=version.indexOf("IPv4")&&(output.groupInst=getGroupInst(groups,connLink,ifaceLink,"IPv4"),output.groupInst)){var group=funcs.fetchBranch(config,"Device.Network.Group."+output.groupInst+".WAN."),failover=funcs.fetchBranch(config,"Device.Network.Group."+output.groupInst+".");output.gw=isDefaultGateway(group,connLink,ifaceLink,failover),output.groupLink=getGroupLink(group,connLink,ifaceLink,"IPv4",output.groupInst),output.disabledGateway=isDisabledGateway(failover,loadBalancing),output.isFailover=isFailover(group,connLink,ifaceLink,failover),output.isLoadBalancing=isLoadBalancing(connLink,ifaceLink,loadBalancing)}if(-1!=version.indexOf("IPv6")&&(output.groupInst=getGroupInst(groups,connLink,ifaceLink,"IPv6"),output.groupInst)){var groupv6=funcs.fetchBranch(config,"Device.Network.Group."+output.groupInst+".WANv6.");output.gwv6=isDefaultGateway(groupv6,connLink,ifaceLink),output.groupLinkv6=getGroupLink(groupv6,connLink,ifaceLink,"IPv6",output.groupInst)}return"PPTP"!=type&&"Static"!=type&&"IPIP6"!=type||(output.vpnLink=getVPNLink(vpn,connLink)),funcs.deepClone(output)}function getNATBridgeLink(config,connLink){var group=_.find(funcs.fetchBranch(config,"Device.Network.Group."),function(g){return _.find(g.WAN,function(w){return w.Link===connLink})});return group?group.LAN:void 0}function isSubConnection(conn,usbConns){return"DHCPv6"==conn.type?/Connection/.test(conn.data.Interface)||/Cellular/.test(conn.data.Interface):!("PPPoE"!=conn.type||!/Cellular/.test(conn.data.BaseInterface))||!("DHCP"!=conn.type&&"PPPoE"!=conn.type&&"Static"!=conn.type||!usbConns)&&_.some(usbConns,function(elem){return _.some(elem.Connections,function(obj){return obj.Link==conn.link})})}function getUsbData(data,allConns,modems){function getRoutesInfo(config,conn){function getRoutes(config,version,iface){var routePath="Device.Routing."+version+".Routes.",routes=funcs.newConfig.normalize(funcs.fetchBranch(config,routePath)),result=[];for(var i in routes){var elem=routes[i];""==elem.Origin&&""!=elem.Destination&&_keys2["default"](funcs.newConfig.normalize(elem.Table)).length>0&&elem.Interface==iface&&result.push(elem)}return result}var routes=[];return conn&&!conn.IPv6Only&&(routes=getRoutes(config,"IPv4",conn.Interface)),conn&&conn.IPv6&&(routes=routes.concat(getRoutes(config,"IPv6",conn.Interface))),routes.length>0}var extData=funcs.deepClone(data),extConns={Device:{Network:{Connection:allConns}}},conn=funcs.fetchBranch(extConns,data.Interface),usbIface=funcs.fetchBranch(config,data.Interface);if(usbIface&&(extData.IsBridged=usbIface.Bridged,extData.UseAsRoute=getRoutesInfo(config,data)),conn&&(extData.BaseInterface=conn.BaseInterface,extData.StopOnFail=conn.StopOnFail),modems=funcs.newConfig.normalize(modems),!_.isEmpty(data.Binding.Modem)){var extModems={};funcs.setValue("Device.USB.Modem",modems,extModems);var modem=funcs.fetchBranch(extModems,data.Binding.Modem),sim=modem.ActiveSIM;extData.Modem=data.Binding.Modem,extData.IntModem=modem.Internal,_.isUndefined(sim)||(extData.SIM=sim?sim.toString():"1"),_.isEmpty(data.Binding.IMSI)||(extData.IMSI=data.Binding.IMSI)}return extData}function checkBased(config,connLink){var conns=funcs.fetchBranch(config,"Device.Network.Connection.");for(var i in conns)for(var j in conns[i])if(conns[i][j].BaseInterface==connLink)return!0;return!1}function isUseInMirror(config,connLink){var mirror=funcs.fetchBranch(config,"Device.Switch.PortMirror.");if(!mirror)return!1;for(var i in funcs.newConfig.normalize(mirror))for(var j in funcs.newConfig.normalize(mirror[i].Source))if(mirror[i].Source[j].Link==connLink)return!0;return!1}function getVersion(type,conn,config){if(_.contains(["DHCPv6","Staticv6"],type))return"IPv6";if("PPPoE"==type){var pppClient=funcs.fetchBranch(config,conn.PPPConfiguration);return pppClient.IPv6Only?"IPv6":"IPv4"}return"USB"==type&&conn.IPv6?conn.IPv6Only?"IPv6":"IPv4IPv6":"IPv4"}function isDefaultGateway(group,connLink,ifaceLink,failover){function getCurrentInst(group,link){var inst=null;for(var i in group){var elem=group[i];elem.Link&&elem.Link==link&&(inst=i)}return inst}var connInst;return _.isArray(ifaceLink)||(ifaceLink=[ifaceLink]),connInst=failover&&failover.FailoverEnable&&""!=failover.CurrentWAN?getCurrentInst(group,failover.CurrentWAN):group&&group.order&&group.order.length?group.order[0]:null,!!connInst&&(group[connInst].Link==connLink||_.contains(ifaceLink,group[connInst].Link))}function isDisabledGateway(failover,loadBalancing){return failover&&failover.FailoverEnable||loadBalancing&&loadBalancing.Enable}function isFailover(group,connLink,ifaceLink,failover){_.isArray(ifaceLink)||(ifaceLink=[ifaceLink]);var obj=_.find(group,function(gr){return gr.Link==connLink||_.contains(ifaceLink,gr.Link)});if(failover&&failover.FailoverEnable){var connInst=group.order&&group.order.length?group.order[0]:null;if(connInst&&(group[connInst].Link==connLink||_.contains(ifaceLink,group[connInst].Link)))return!0}return obj&&obj.FailoverEnable}function isLoadBalancing(connLink,ifaceLink,loadBalancing){if(!loadBalancing)return!1;var wans=funcs.newConfig.normalize(loadBalancing.WAN),obj=_.find(wans,function(elem){return elem.Link==connLink||elem.Link==ifaceLink});return!!obj&&loadBalancing.Enable}function getGroupInst(groups,connLink,ifaceLink,version){ifaceLink instanceof Array||(ifaceLink=[ifaceLink]);var type="IPv4"==version?"WAN":"IPv6"==version?"WANv6":"VPN";for(var key in groups){var elem=groups[key][type];for(var i in funcs.newConfig.normalize(elem))if(elem[i].Link==connLink||ifaceLink.find(function(il){return il==elem[i].Link}))return key}}function getGroupLink(group,connLink,ifaceLink,version,groupInst){_.isArray(ifaceLink)||(ifaceLink=[ifaceLink]);var inst=_.findKey(group,function(g){return g.Link==connLink||_.contains(ifaceLink,g.Link)}),groupName="IPv4"==version?"WAN":"WANv6";return inst?"Device.Network.Group."+groupInst+"."+groupName+"."+inst+".":void 0}function getVPNLink(vpn,link){var inst=_.findKey(vpn,function(v){return v.Link==link});return inst?"Device.Network.Group.1.VPN."+inst+".":void 0}function getNATZoneInst(fw,connLink,ifaceLink,version){if(fw){_.isArray(ifaceLink)||(ifaceLink=[ifaceLink]);var input=funcs.fetchBranch(fw,version+".Zones.2.Interfaces.");return _.findKey(input,function(e){return e.Path==connLink||_.contains(ifaceLink,e.Path)})}}function getNATMasqInst(fw,connLink,ifaceLink,version,type){if(fw&&!("IPv4"==type&&"IPv4"!=version&&"IPv4IPv6"!=version||"IPv6"==type&&"IPv4"==version)){_.isArray(ifaceLink)||(ifaceLink=[ifaceLink]);var input=funcs.fetchBranch(fw,type+".Masquerade.");return _.findKey(input,function(elem){return elem.Source&&elem.Dest&&(elem.Dest.Interface==connLink||_.contains(ifaceLink,elem.Dest.Interface))})}}function getPingRuleInst(fw,connLink,ifaceLink,version){if(fw&&fw[version]){_.isArray(ifaceLink)||(ifaceLink=[ifaceLink]);var input=funcs.fetchBranch(fw[version],"Rules.");return _.findKey(input,function(elem){function isIPv4IgmpProto(elem){return elem.Proto[1]&&"icmp"==elem.Proto[1].Value}function isIPv6IgmpProto(elem){var proto=elem.Proto[1];return proto&&"ipv6-icmp"==proto.Value&&proto.Type&&proto.Type[1]&&proto.Type[2]&&128==proto.Type[1].Value&&129==proto.Type[2].Value}return"IPv4"==version?elem.Source&&elem.Dest&&"ACCEPT"==elem.Action&&isIPv4IgmpProto(elem)&&(elem.Source.Iface==connLink||_.contains(ifaceLink,elem.Source.Iface))&&"Device.Firewall.IPv4.Zones.2."==elem.Source.Zone&&"Device.Firewall.IPv4.Zones.1."==elem.Dest.Zone:"IPv6"==version?elem.Source&&elem.Dest&&"ACCEPT"==elem.Action&&isIPv6IgmpProto(elem)&&(elem.Source.Iface==connLink||_.contains(ifaceLink,elem.Source.Iface))&&"Device.Firewall.IPv6.Zones.2."==elem.Source.Zone&&"Device.Firewall.IPv6.Zones.1."==elem.Dest.Zone:void 0})}}function getFWRuleInst(fw,connLink,ifaceLink,version){if(fw&&fw[version]){ifaceLink instanceof Array||(ifaceLink=[ifaceLink]);var ruleKey=void 0,input=funcs.newConfig.normalize(fw[version].Rules),sourceZone="Device.Firewall."+version+".Zones.2.",destZone="Device.Firewall."+version+".Zones.3.";for(var key in input){var elem=input[key];"ACCEPT"!=elem.Action||"(FW)ALLOW"!=elem.Pattern||elem.Source.Zone!=sourceZone||elem.Dest.Zone!=destZone||elem.Source.Iface!=connLink&&!ifaceLink.find(function(e){return e==elem.Source.Iface})||(ruleKey=key)}return ruleKey}}function getRIPNetworkInst(rip,connLink){if(rip){var input=funcs.fetchBranch(rip,"Networks.");return _.findKey(input,function(e){return e.Link==connLink})}}function getIGMPInst(igmp,connLink,conn){if(igmp){var link=connLink;return __autoconf.BR2_PACKAGE_ANWEB_CUSTOM_ROSTELECOM_35980&&~connLink.indexOf("PPPoE")&&(link=conn.BaseInterface),_.findKey(igmp.Upstreams,function(elem){return elem.Interface==link})}}function getMLDProxyInst(mld,connLink){return mld?mld.Upstream==connLink:void 0}function getIGMPDownInst(igmp,connLink){return igmp?_.findKey(igmp.Downstreams,function(elem){return elem.Interface==connLink}):void 0}function getUdpxyInst(udpxy,connLink){return udpxy?udpxy.IfaceWan==connLink:void 0}function isShorewallZone(fw,connLink){if(fw){var zones=_.values(funcs.newConfig.normalize(fw.IPv4.Zones));return fw.IPv6&&(zones=zones.concat(_.values(funcs.newConfig.normalize(fw.IPv6.Zones)))),!!_.find(zones,function(zone){var interfaces=_.values(funcs.newConfig.normalize(zone.Interfaces));return _.find(interfaces,function(i){return i.Path==connLink})})||void 0}}function isShorewallMasq(fw,connLink){if(fw){var masq=_.values(funcs.newConfig.normalize(fw.IPv4.Masquerade));return fw.IPv6&&(masq=masq.concat(_.values(funcs.newConfig.normalize(fw.IPv6.Masquerade)))),!!_.find(masq,function(e){return e.Dest.Interface==connLink||e.Source.Interface==connLink})||void 0}}function getIPsecInst(ipsec,connLink){return ipsec?_.findKey(ipsec,function(conn){return!!_.isObject(conn)&&conn.L2TP===connLink}):void 0}function getZoneInst(fw,connLink,version){if(fw){var zones=funcs.newConfig.normalize(funcs.fetchBranch(fw,version+".Zones.")),zoneInst=null;for(var key in zones){var zone=zones[key];for(var inst in funcs.newConfig.normalize(zone.Interfaces)){var elem=zone.Interfaces[inst];elem.Path==connLink&&(zoneInst=inst)}}return zoneInst}}var output=[],input=prepareConns(conns,nativeType,config);return _.each(input,function(elem,type){_.each(funcs.newConfig.normalize(elem),function(data,inst){var conn=isBridge(type)?makeBridgeConn(data,inst,type,config):makeConn(data,inst,type,config),isSubConn=isSubConnection(conn,usbConns);(onlySubConn&&isSubConn||!onlySubConn&&!isSubConn)&&output.push(conn)})}),output}function getZoneInx(fw,version,type){if(fw){var zones=funcs.newConfig.normalize(funcs.fetchBranch(fw,version+".Zones.")),zoneInx=void 0;for(var key in zones){var zone=zones[key];"IPsec"==type&&"IPsec"==zone.Type&&(zoneInx=key),"USB"==type&&"USB"==zone.Name&&(zoneInx=key)}return zoneInx}}function getStaticIP(ips,conn,type){var result=[],iface=conn.data.Interface,prefix="ipv4"==type?"IPv4Address":"IPv6Address";return _.each(ips,function(elem,inst){elem.LowerLayer==iface&&_.each(elem[prefix],function(_elem,_inst){_.isObject(_elem)&&conn.link==_elem.Origin&&result.push({data:_elem,link:"Device.Network.IP."+inst+"."+prefix+"."+_inst+"."})})}),result}function getSupportedUsbConn(usbConn,type,config){function findLink(obj){for(var i in types)if(obj.Link&&-1!=obj.Link.indexOf(types[i]+"."))return!0;return!1}var types="ipv4"==type?["PPPoE","DHCP"]:["DHCPv6"],connLinks=usbConn.data.Connections,objLink=_.find(connLinks,findLink);return objLink?{data:funcs.fetchBranch(config,objLink.Link)}:void 0}function getConnStatus(conn,addConn,ipsec,isInternal){if(!ipsec&&_.has(conn,"Enable")&&!conn.Enable)return"Disabled";if(_.has(conn,"StopOnFail")&&conn.StopOnFail)return/\.WiFi\./.test(conn.Interface)?"WiFiDisconnect":/\.Cellular\./.test(conn.BaseInterface)||conn.Binding&&_.has(conn.Binding,"Modem")?isInternal?"SIMDisconnected":"USBDisconnected":/\.USB\./.test(conn.BaseInterface)?"USBNotActive":"CableDisconnected";if(ipsec){if(addConn&&"Connected"==ipsec.ConnectionStatus)return addConn.ConnectionStatus;if("Connected"==conn.ConnectionStatus)return ipsec.ConnectionStatus}else if(addConn&&"Connected"==conn.ConnectionStatus)return addConn.ConnectionStatus;return conn.ConnectionStatus}function getBridgeStatus(stats,enabled,media,mediaType,config){return enabled?"Ethernet"==mediaType&&"Enabled"!=getPortParam(config,media.Ethernet.VlanLink).Status?"CableDisconnected":"Ethernet"==mediaType||stats&&stats.TrainingState?"Connected":"CableDisconnected":"Disabled"}function getPPPStatusExt(statusExt,connSettings,isInternal){return connSettings&&connSettings.Kabinet&&connSettings.Kabinet.Enable?getKabinetConnStatus(connSettings.Kabinet.ConnectionStatus):statusExt&&"Unknown"!=statusExt?"Disconnected"!=statusExt||_.isUndefined(isInternal)?"PPP"+statusExt:isInternal?"SIMDisconnected":"USBDisconnected":statusExt}function getIPIP6Status(status){switch(status){case"Enabled":return"Connected";case"Enabling":return"Connecting";case"Aborted":return"Disconnected";default:return status}}function getUsbNumbers(usb){return usb?usb.max_instance:0}function getIPAddress(ip){return ip?ip.split("/")[0]:""}function getPrefix(ip){return ip?ip.split("/")[1]:""}function getSubnetMask(ip){return ip?funcs.ipv4.mask["long"](ip.split("/")[1]):""}function getDynDNS(dns,link){function findCurDNS(dns,link){var output=_.find(dns.Current,function(obj){return _.isObject(obj)?obj.Origin==link:void 0});return output?output.Address:null}var output=[],curDns=findCurDNS(dns,link);if(!curDns)return output;var orders=curDns.order;return _.each(orders,function(inst){output.push(curDns[inst].IPAddress)}),output}function getStatDNS(conn){return _.chain(conn.DNS).filter(function(e){return _.isObject(e)&&!_.isArray(e)}).map(function(e){return e.IPAddress}).value()}function getDnsOrder(conn){return conn&&conn.DNS?conn.DNS.order:[]}function getDNSValue(isAuto,dynDns,statDns,inst){var curDns=isAuto?dynDns:statDns;return curDns&&curDns[inst]?curDns[inst]:""}function getServerName(data){return _.has(data,"ServiceName")?data.ServiceName:_.has(data,"ServerAddress")?data.ServerAddress:_.has(data,"LNS")?data.LNS:void 0}function authProto(auth){function getType(auth){var activeType="",allActive=!0;return _.each(auth,function(value,name){!activeType&&value&&(activeType=name),value||(allActive=!1)}),allActive?"AUTO":activeType}var type=getType(auth);switch(type){case"AUTO":return"AUTO";case"PAP":return"PAP";case"EAP":return"EAP";case"CHAP":return"CHAP";case"MSCHAP":return"MS-CHAP";case"MSCHAPv2":return"MS-CHAP-V2"}}function encrProto(encr){switch(encr){case"None":return"None";case"MPPE-40/128":return"MPPE";case"MPPE-40":return"MPPE40";case"MPPE-128":return"MPPE128"}}function connTriger(ondemand){return ondemand?"OnDemand":"AlwaysOn"}function identifyDefaultGateway(wan,version){function checkDefaultGateway(conn,version){return"v4"==version?1==conn.DefaultGateway:"v6"==version&&1==conn.DefaultGatewayv6}var path="";return _.some(wan,function(elem,type){return!(!_.isObject(elem)||!elem.Connection)&&_.some(elem.Connection,function(conn,instance){return!!checkDefaultGateway(conn,version)&&(path="Device.WAN."+type+".Connection."+instance+".",!0)})}),path}function getDeviceMode(config){var devinfo=funcs.fetchBranch(config,"Device.DeviceInfo.");return devinfo?devinfo.DeviceMode:void 0}function getOrigin(mode){switch(mode){case"Autoconf":return"AutoConfiguredBySlaac";case"DHCP":return"AutoConfiguredByDHCPv6";case"Auto":return"AutoConfigured";default:return"Static"}}function getOrder(group){return group&&group.order&&_.isArray(group.order)?group.order.join(","):""}function getIgmpDownstreamsInst(igmp){if(igmp&&igmp.Downstreams){var keys=_.keys(funcs.newConfig.normalize(igmp.Downstreams));return keys&&keys.length?keys[0]:void 0}}function getMLDDownstreamsInst(mld){if(mld&&mld.Downstream){var keys=_.keys(funcs.newConfig.normalize(mld.Downstream));return keys&&keys.length?keys[0]:void 0}}function linkType(lt){switch(lt){case"IPOE_PPPOE":return"EoA";case"IPOA":return"IPoA";case"PPPOA":return"PPPoA";case"BRIDGE":return"BRIDGE";default:return"Unknown"}}function getPVCSettings(xdsl,link){var output={link:null,data:null};return _.each(xdsl,function(elem,dslInst){if(_.isObject(elem)){var pvc=funcs.fetchBranch(elem,"ATM.PVC.");_.each(pvc,function(obj,atmInst){_.isObject(obj)&&obj.Interface==link&&(output.link="Device.xDSL."+dslInst+".ATM.PVC."+atmInst+".",output.data=obj)})}}),output}function qosClass(qos){switch(qos){case"ubr":return"UBR";case"ubr_pcr":return"UBR+";case"cbr":return"CBR";case"nrtvbr":return"VBR-nrt";case"rtvbr":return"VBR-rt";default:return"Unknown"}}function getSIMName(modems,conn){if(modems&&!_.isEmpty(conn.data.Modem)){var extModems={};funcs.setValue("Device.USB.Modem",modems,extModems);var curModem=funcs.fetchBranch(extModems,conn.data.Modem);if(curModem){var key=conn.data.Modem.match(/\.\d+\.$/g,"");key=Number(key[0].replace(/\./g,""));var name=curModem.Internal?" "+key:curModem.Model+" "+curModem.Vendor,sim=curModem.SIM[conn.data.SIM];return sim&&(name+=" SIM"+sim.Name+" "+sim.IMSI),name}}}function getIfaceName(iface,config){if(iface.Name)return iface.Name;if(/^Device.Switch./.test(iface.LowerLayer)){var vlan=funcs.fetchBranch(config,iface.LowerLayer);if(vlan&&vlan.Name)return vlan.Name}return iface.Ifname}function getDualLAN(config){function findZoneKey(zone,link){return _.findKey(zone,function(elem){return _.some(elem.Interfaces,function(iface){return iface.Path==link})})}function findRuleKey(rules,type,bridgeLink,sourceZoneKey,destZoneKey){var sourceZone="Device.Firewall."+type+".Zones."+sourceZoneKey+".",destZone="Device.Firewall."+type+".Zones."+destZoneKey+".";return _.findKey(rules,function(elem){return"DROP"==elem.Action&&elem.Source.Zone==sourceZone&&elem.Dest.Zone==destZone&&_.size(funcs.newConfig.normalize(elem.Dest.IPLinks))>0&&elem.Dest.IPLinks[1]&&elem.Dest.IPLinks[1].Link==bridgeLink})}var bridges=funcs.newConfig.normalize(funcs.fetchBranch(config,"Device.Network.Interface.Bridge.")),dualLanKey=_.findKey(bridges,{Name:"DualLAN"});if(dualLanKey&&-1!=dualLanKey){var bridgeLink="Device.Network.Interface.Bridge."+dualLanKey+".",bridgeIfname=bridges[dualLanKey].Ifname,groups=funcs.newConfig.normalize(funcs.fetchBranch(config,"Device.Network.Group.")),dualLANGroup=_.findKey(groups,{LAN:bridgeLink}),groupSettings=groups[dualLANGroup],conn=groupSettings.WAN.order[0]?groupSettings.WAN[groupSettings.WAN.order[0]].Link:void 0,zonesv4=funcs.newConfig.normalize(funcs.fetchBranch(config,"Device.Firewall.IPv4.Zones.")),zonesv6=_.has(config.Device.Firewall,"IPv6")?funcs.newConfig.normalize(funcs.fetchBranch(config,"Device.Firewall.IPv6.Zones.")):{},dlZonev4=findZoneKey(zonesv4,bridgeLink),dlZonev6=findZoneKey(zonesv6,bridgeLink),rulesv4=funcs.newConfig.normalize(funcs.fetchBranch(config,"Device.Firewall.IPv4.Rules.")),rulesv6=_.has(config.Device.Firewall,"IPv6")?funcs.newConfig.normalize(funcs.fetchBranch(config,"Device.Firewall.IPv6.Rules.")):{},dlRulesv4={dlToFw:dlZonev4?findRuleKey(rulesv4,"IPv4","Device.Network.Interface.Bridge.1.",dlZonev4,"1"):void 0,lanToFw:dlZonev4?findRuleKey(rulesv4,"IPv4",bridgeLink,"3","1"):void 0
},dlRulesv6={dlToFw:dlZonev6?findRuleKey(rulesv6,"IPv6","Device.Network.Interface.Bridge.1.",dlZonev6,"1"):void 0,lanToFw:dlZonev6?findRuleKey(rulesv6,"IPv6",bridgeLink,"3","1"):void 0};return{bridgeIfname:bridgeIfname,bridgeID:dualLanKey,groupID:dualLANGroup,group:groupSettings,conn:conn,zones:{v4:dlZonev4,v6:dlZonev6},fwRules:{v4:dlRulesv4,v6:dlRulesv6}}}}function getKabinetStatus(status){switch(status){case"Connected":case"Kabinet networks only":return"on";default:return"off"}}function getKabinetConnStatus(status){switch(status){case"Connected":return"KabinetFull";case"Disconnected":return"Disconnected";case"Error":return"Unknown";case"Kabinet networks only":return"KabinetNetworksOnly";case"Kabinet not started":return"KabinetNotStarted"}}function getKabinetStatusInfo(status){return"Disconnected"==status?"disconnected":"wan_status_"+status.replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase()}function getPBRRule(firewall){if(firewall){var rules=funcs.newConfig.normalize(firewall.IPv4.Rules);if(rules){var pbrRule=void 0;return _.each(rules,function(elem,key){var destLinks=funcs.newConfig.normalize(elem.Dest.IPLinks);!("DROP"==elem.Action&&"Device.Firewall.IPv4.Zones.3."==elem.Source.Zone&&"Device.Firewall.IPv4.Zones.1."==elem.Dest.Zone&&_.size(destLinks)>0)||elem.URLLists&&elem.URLLists.Links&&0!=_.size(funcs.newConfig.normalize(elem.URLLists.Links))||0!=_.size(funcs.newConfig.normalize(elem.Source.Address))||0!=_.size(funcs.newConfig.normalize(elem.Dest.Address))||(pbrRule=key)}),pbrRule}}}function hasWanPorts(config,media){if(media.Ethernet&&_.size(media.Ethernet.Interface)||media.WiFi&&_.size(media.WiFi.Network)||media.DSL)return!0;var ports=funcs.newConfig.normalize(funcs.fetchBranch(config,"Device.Switch.Ports."));return _.some(ports,function(p){return p.Upstream})}function mask(str){if(!str)return"";for(var tmp="",i=0;i<str.length;i++)tmp+="*";return tmp}var _keys=__webpack_require__(78),_keys2=_interopRequireDefault(_keys),_values=__webpack_require__(197),_values2=_interopRequireDefault(_values),_assign=__webpack_require__(201),_assign2=_interopRequireDefault(_assign),T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),__autoconf="undefined"==typeof autoconf?{}:autoconf;module.exports=function(config,attrs){var pattern=T({"->":["$input","$attrs","$conns","$usbConns","$ifaces","$ip","$xdsl","$xdslStats","$dns","$vpn","$group","$groupv6","$rip","$ripv6","$igmp","$mld","$udpxy","$tr","$voip","$deviceMode","$modems","Modems","DualLAN","Media","IPv4oE","IPoA","IPv6oE","PPPoE","PPPoA","PPPoEv6","PPPoEDual","PPTP","USB","Bridge","IPIP6","IPv4DefaultGateway","IPv6DefaultGateway","__DeviceMode","__Groupv4Order","__Groupv6Order","__IgmpDownstreamsInst","__MLDDownstreamInst","__SubConnections","TR069","VoIP"],$config:":external",$attrs:":external",$input:["$config",function(c){return c}],$conns:["$input",function(i){return i.Device.Network.Connection}],$usbConns:["$input",function(i){return i.Device.USB?i.Device.USB.Connection:void 0}],$ifaces:["$input",function(i){return i.Device.Network.Interface}],$firewall:["$input",function(i){return i.Device.Firewall}],$dns:["$input",function(i){return i.Device.Network.DNS}],$ip:["$input",function(i){return i.Device.Network.IP}],$xdsl:["$input",function(i){return i.Device.xDSL}],$xdslStats:["$input",function(i){return funcs.fetchBranch(i,"Device.Statistics.xDSL.")||void 0}],$vpn:["$input",function(i){return funcs.fetchBranch(i,"Device.Network.Group.1.VPN.")||void 0}],$group:["$input",function(i){return funcs.fetchBranch(i,"Device.Network.Group.1.")||void 0}],$groupv6:["$input",function(i){return funcs.fetchBranch(i,"Device.Network.Group.1.WANv6.")||void 0}],$rip:["$input",function(i){return funcs.fetchBranch(i,"Device.Routing.RIP.")}],$ripv6:["$input",function(i){return funcs.fetchBranch(i,"Device.Routing.RIPng.")}],$igmp:["$input",function(i){return funcs.fetchBranch(i,"Device.Services.IGMPX.")}],$mld:["$input",function(i){return funcs.fetchBranch(i,"Device.Services.MLDProxy.")}],$udpxy:["$input",function(i){return funcs.fetchBranch(i,"Device.Services.Udpxy.")}],$tr:["$input",function(i){return funcs.fetchBranch(i,"Device.Services.TR069.")}],$voip:["$input",function(i){return funcs.fetchBranch(i,"Device.Voip.")}],$ipsec:["$input",function(i){return funcs.fetchBranch(i,"Device.Network.Connection.IPsec.")}],$deviceMode:["$input",function(i){return getDeviceMode(i)}],$modems:["$input",function(i){return funcs.fetchBranch(i,"Device.USB.Modem.")||void 0}],$natv6:["$input",function(i){return funcs.fetchBranch(i,"Device.Firewall.IPv6.Masquerade.")}],Modems:{"->":!0,"{$modems, $key}":["$parent",function(p){return funcs.newConfig.normalize(p.$modems)}],":":["$key*",function(k){return k}],ActiveSIM:["$modems*",function(m){return m.ActiveSIM}],SIM:["$modems*",function(m){return funcs.newConfig.normalize(m.SIM)}]},DualLAN:{"->":["?"],"?":["$parent",function(p){return p.$config.hasDualLAN}],$duallan:["$parent",function(p){return getDualLAN(p.$config)}],__has:["$duallan",function(dl){return!!dl}],__GroupInst:["$duallan*",function(dl){return dl.groupID}],__inst:["$duallan*",function(dl){return dl.bridgeID}],Ifname:["$duallan*",function(dl){return dl.bridgeIfname}],Group:["$duallan*",function(dl){return dl.group}],Conn:["$duallan*",function(dl){return dl.conn}],Zonev4:["$duallan*",function(dl){return dl.zones.v4}],Zonev6:["$duallan*",function(dl){return dl.zones.v6}],Rulesv4:["$duallan*",function(dl){return dl.fwRules.v4}],Rulesv6:["$duallan*",function(dl){return dl.fwRules.v6}]},UnnumberedIP:["$ip",function(ips){return _.findKey(ips,{LowerLayer:"Device.Network.Interface.Loopback.1.",Name:"Unnumbered IP"})}],Media:{Ethernet:{"->":!0,"?":["$root",function(r){return _.has(r.$ifaces,"Ethernet")}],InterfaceNumberOfEntries:["Interface",function(o){return _.size(o)}],Interface:{"->":!0,"{$Raw,$i}":["$root",function(o){return getMedia(o.$ifaces,"Ethernet",{},__autoconf.BR2_PACKAGE_ANWEB_REALTEK_MODEM,o.$config.hasDualLAN,o.$config)}],":":["$i*",function(i){return i+1}],__Link:["$Raw*",function(o){return o.link}],__BridgeLink:["$Raw*",function(o){return o.bridgeLink}],__MemberInst:["$Raw*","__Link","$root",function(r,link,root){return getBridgeInst(root.$ifaces,link,r.bridgeLink)}],VlanLink:["$Raw*",function(r){return r.data.LowerLayer}],__VID:["$Raw*","$root",function(r,o){return funcs.fetchBranch(o.$config,r.data.LowerLayer).VID}],Enable:["$Raw*",function(o){return o.data.Enable}],Name:["$Raw*","$root",function(o,r){return getIfaceName(o.data,r.$config)}],MACAddress:["$Raw*",function(o){return o.data.MACAddress.toUpperCase()}],CurrentMACAddress:["$Raw*",function(o){return o.data.CurrentMACAddress?o.data.CurrentMACAddress.toUpperCase():null}],MaxMRUSize:["$Raw*",function(o){return o.data.MTU}],CurrentMaxMRUSize:["$Raw*",function(o){return o.data.MTU}],AutoIncMACAddress:!0,LinkType:["$root","$Raw*","__MemberInst",function(r,raw,mi){return getEthernetLinkType(raw,r.$input,mi)}],ProxyARP:["$Raw*",function(o){return o.data.ProxyARP}]}},Bridging:{"->":!0,"?":["$root",function(r){return _.has(r.$ifaces,"Bridge")}],InterfaceNumberOfEntries:["Interface",function(o){return _.size(o)}],Interface:{"->":!0,"{$Raw,$i}":["$root",function(o){return getMedia(o.$ifaces,"Bridge")}],":":["$i*",function(i){return i+1}],__Link:["$Raw*",function(o){return o.link}],Enable:["$Raw*",function(o){return o.data.Enable}],Name:["$Raw*","$root",function(o){return o.data.Name}],MACAddress:["$Raw*",function(o){return o.data.MACAddress.toUpperCase()}]}},WiFi:{"->":!0,"?":["$root",function(r){return _.has(r.$ifaces,"WiFi")}],NetworkNumberOfEntries:["Network",function(o){return _.size(o)}],Network:{"->":!0,"{$Raw,$i}":["$root",function(o){return getMedia(o.$ifaces,"WiFi",{},!1,!1,o.$config)}],":":["$i*",function(i){return i+1}],__Link:["$Raw*",function(o){return o.link}],__BridgeLink:["$Raw*",function(o){return o.bridgeLink}],__MemberInst:["$Raw*","__Link","$root",function(r,link,root){return getBridgeInst(root.$ifaces,link)}],Enable:["$Raw*",function(o){return o.data.Enable}],Name:["$Raw*",function(o){return o.data.Name||o.data.Ifname}],MACAddress:["$Raw*",function(o){return o.data.MACAddress.toUpperCase()}],CurrentMACAddress:["$Raw*",function(o){return o.data.CurrentMACAddress?o.data.CurrentMACAddress.toUpperCase():null}],MaxMRUSize:["$Raw*",function(o){return o.data.MTU}],ProxyARP:["$Raw*",function(o){return o.data.ProxyARP}]}},DSL:{"->":!0,"?":["$root",function(r){return _.has(r.$ifaces,"ATM")||_.has(r.$ifaces,"PTM")}],ATM:{"->":!0,"?":["$root",function(r){return _.has(r.$ifaces,"ATM")}],LinkNumberOfEntries:["Link",function(o){return _.size(o)}],Link:{"->":!0,"{$Raw,$i}":["$root",function(o){return getMedia(o.$ifaces,"ATM")}],":":["$i*",function(i){return i+1}],$pvc:["$Raw*","$root",function(raw,rt){return getPVCSettings(rt.$xdsl,raw.link)}],__BridgeLink:["$Raw*",function(o){return o.bridgeLink}],__Link:["$Raw*",function(r){return r.link}],__MemberInst:["$Raw*","__Link","$root",function(r,link,root){return getBridgeInst(root.$ifaces,link,r.bridgeLink)}],__PVCLink:["$pvc*",function(p){return p.link}],__VID:["$Raw*",function(o){return o.data.VID}],__VPR:["$Raw*",function(o){return o.data.VPR}],Enable:["$Raw*",function(o){return o.data.Enable}],Name:["$Raw*",function(o){return o.data.Name||o.data.Ifname}],LinkType:["$Raw*",function(o){return linkType(o.data.LinkType)}],DestinationAddress:["$pvc*",function(o){return o.data?o.data.VPI+"/"+o.data.VCI:void 0}],Encapsulation:["$pvc*",function(o){return o.data&&o.data.Encap?o.data.Encap.toUpperCase():void 0}],QoSClass:["$pvc*",function(o){return o.data?qosClass(o.data.QOS):"Unknown"}],PeakCellRate:["$pvc*","QoSClass",function(pvc,qos){return"UBR"!=qos&&pvc.data?pvc.data.PCR:void 0}],MaximumBurstSize:["$pvc*","QoSClass",function(pvc,qos){return"VBR-nrt"==qos||"VBR-rt"==qos?pvc.data.MBS:void 0}],SustainableCellRate:["$pvc*","QoSClass",function(pvc,qos){return"VBR-nrt"==qos||"VBR-rt"==qos?pvc.data.SCR:void 0}],ProxyARP:["$Raw*",function(o){return o.data.ProxyARP}]}},PTM:{"->":!0,"?":["$root",function(r){return _.has(r.$ifaces,"PTM")}],LinkNumberOfEntries:["Link",function(o){return _.size(o)}],Link:{"->":!0,"{$Raw,$i}":["$root",function(o){return getMedia(o.$ifaces,"PTM",{},!1,!1,o.$config)}],":":["$i*",function(i){return i+1}],__Link:["$Raw*",function(r){return r.link}],__BridgeLink:["$Raw*",function(o){return o.bridgeLink}],__VID:["$Raw*",function(o){return o.data.VID}],__VPR:["$Raw*",function(o){return o.data.VPR}],__MemberInst:["$Raw*","__Link","$root",function(r,link,root){return getBridgeInst(root.$ifaces,link,r.bridgeLink)}],Enable:["$Raw*",function(o){return o.data.Enable}],Name:["$Raw*",function(o){return o.data.Name||(0!=o.data.VID?"PTM "+o.data.VID:"PTM untag")}],MACAddress:["$Raw*",function(o){return o.data.MACAddress.toUpperCase()}],CurrentMACAddress:["$Raw*",function(o){return o.data.CurrentMACAddress?o.data.CurrentMACAddress.toUpperCase():null}],LinkType:["$Raw*",function(o){return linkType(o.data.LinkType)}],ProxyARP:["$Raw*",function(o){return o.data.ProxyARP}]}}},Dongle:{"->":!0,"?":["$root",function(r){return _.has(r.$ifaces,"Cellular")}],InterfaceNumberOfEntries:["Interface",function(o){return _.size(o)}],Interface:{"->":!0,"{$Raw, $i}":["$root",function(o){return getMedia(o.$input,"Cellular",o.$usbConns)}],":":["$i*",function(i){return i+1}],__Link:["$Raw*",function(o){return o.link}],Enable:["$Raw*",function(o){return o.data.Enable}],Name:["$Raw*",function(o){return o.data.Name||o.data.Ifname}],Type:["$Raw*",function(o){return o.data.Type}]}},L2TPv3:{"->":!0,"?":["$root",function(r){return _.has(r.$ifaces,"L2TPv3")}],InterfaceNumberOfEntries:["Interface",function(o){return _.size(o)}],Interface:{"->":!0,"{$Raw,$i}":["$root",function(o){return getMedia(o.$ifaces,"L2TPv3",{},__autoconf.BR2_PACKAGE_ANWEB_REALTEK_MODEM,o.$config.hasDualLAN,o.$config)}],":":["$i*",function(i){return i+1}],__Link:["$Raw*",function(o){return o.link}],__BridgeLink:["$Raw*",function(o){return o.bridgeLink}],__MemberInst:["$Raw*","__Link","$root",function(r,link,root){return getBridgeInst(root.$ifaces,link)}],Enable:["$Raw*",function(o){return o.data.Enable}],Name:["$Raw*",function(o){return o.data.Name}],MACAddress:["$Raw*",function(o){return o.data.MACAddress}],MaxMRUSize:["$Raw*",function(o){return o.data.MTU}]}}},NoWanPorts:["$config","Media",function(c,m){return!hasWanPorts(c,m)}],IPv4oE:{"->":["Connection","ConnectionNumberOfEntries"],ConnectionNumberOfEntries:["Connection",function(o){return _.size(o)}],Connection:{"->":["$conn","$extend"],"{$conn,$i}":["$root",function(o){return getConnection(o.$conns,"IPv4oE",o.$input,!1,o.$usbConns)}],":":["$i*",function(i){return i+1}],$extend:["$conn*","$root",function(c,r){return _.extend(this,ipv4Template.build({$conn:c,$parentRoot:r}))}]}},IPoA:{"->":!0,ConnectionNumberOfEntries:["Connection",function(o){return _.size(o)}],Connection:{"->":["$conn","$extend"],"{$conn,$i}":["$root",function(o){return getConnection(o.$conns,"IPoA",o.$input)}],":":["$i*",function(i){return i+1}],$extend:["$conn*","$root",function(c,r){return _.extend(this,ipv4Template.build({$conn:c,$parentRoot:r}))}]}},IPv6oE:{"->":["Connection","ConnectionNumberOfEntries"],ConnectionNumberOfEntries:["Connection",function(o){return _.size(o)}],Connection:{"->":["$conn","$media","$isStatic","$dynDns","$statDns","$isAutoDns","StaticIP"],"{$conn,$i}":["$root",function(o){return getConnection(o.$conns,"IPv6oE",o.$input)}],":":["$i*",function(i){return i+1}],$media:["$root","$conn*",function(r,c){return getMediaByConnection(r.Media,c)}],$isStatic:["$conn*",function(c){return"Staticv6"==c.type}],$dynDns:["$root","$conn*",function(r,o){return r.$dns?getDynDNS(r.$dns,o.link):void 0}],$statDns:["$conn*",function(o){return getStatDNS(o.data)}],$isAutoDns:["$statDns*",function(sdns){return!(sdns&&sdns.length)}],__Link:["$conn*",function(o){return o.link}],__LinkGroupv6:["$conn*",function(c){return c.groupLinkv6}],__LinkIface:["$conn*",function(o){return o.ifaceLink}],__NATBridgeLink:["$conn*",function(o){return o.NATBridgeLink}],__NATZoneInst:["$conn*",function(o){return o.NATZoneInst}],__NATMasqInst:["$conn*",function(o){return o.NATMasqInst}],__PingRuleInst:["$conn*",function(o){return o.PingRuleInst}],__FWRuleInst:["$conn*",function(o){return o.FWRuleInst}],__RIPNetworkInst:["$conn*",function(o){return o.RIPNetworkInst}],__IGMPInst:["$conn*",function(o){return o.IGMPInst}],__IGMPDownInst:["$conn*",function(o){return o.IGMPDownInst}],__isShorewallZone:["$conn*",function(o){return o.isShorewallZone}],__isShorewallMasq:["$conn*",function(o){return o.isShorewallMasq}],Enable:["$conn*",function(o){return o.data.Enable}],Name:["$conn*",function(o){return o.data.Name}],Status:["$conn*",function(o){return getConnStatus(o.data)}],StatusExt:["$conn*",function(o){return getPPPStatusExt(o.data.ConnectionStatusExt)}],AddressingType:["$isStatic*",function(isSt){return isSt?"Static":"DHCP"}],Origin:["$conn*",function(o){return getOrigin(o.data.IPv6Mode)}],DHCPv6EnablePD:["$conn*","$isStatic",function(c,isSt){return isSt?void 0:c.data.DHCPv6EnablePD}],StaticIPNumberOfEntries:["StaticIP*",function(o){return _.size(o)}],StaticIP:{"->":!0,"?":["$root",function(r){return!!r.$ip}],$conn:["$parent",function(o){return o.$conn}],"{$ip,$i}":["$root","$conn*",function(r,o){return getStaticIP(r.$ip,o,"ipv6")}],":":["$i*",function(i){return i+1}],Address:["$ip*",function(o){return getIPAddress(o.data.IPAddress)}],Prefix:["$ip*",function(o){return getPrefix(o.data.IPAddress)}]},IPAddress:["StaticIPNumberOfEntries*","StaticIP*",function(n,o){return n>0?o[1].Address:""}],Prefix:["StaticIPNumberOfEntries*","StaticIP*",function(n,o){return n>0?o[1].Prefix:""}],GatewayIPAddress:["$conn*",function(o){return o.data.Gateway}],StaticIPAddress0:["StaticIPNumberOfEntries*","StaticIP*","$conn*",function(n,o,c){return n>0?o[1].Address:getIPAddress(c.data.IPAddress)}],StaticIPPrefix0:["StaticIPNumberOfEntries*","StaticIP*","$conn*",function(n,o,c){return n>0?o[1].Prefix:getPrefix(c.data.IPAddress)}],DNSIPv6Automatical:["$isStatic*","$isAutoDns*",function(isSt,a){return isSt?void 0:a}],DNSIPv6Server1:["$isAutoDns*","$dynDns*","$statDns*",function(a,d,s){return getDNSValue(a,d,s,0)}],DNSIPv6Server2:["$isAutoDns*","$dynDns*","$statDns*",function(a,d,s){return getDNSValue(a,d,s,1)}],DNSIPv6Order:["$conn*",function(o){return getDnsOrder(o.data)}],DefaultGatewayv6:["$conn*",function(c){return c.gwv6}],MediaType:["$media*",function(o){return o.type}],Media:["$media*",function(o){return expandMedia(o)}],MediaPath:["$media*",function(o){return getMediaPath(o)}],Flags:["$root","$conn","$media*",function(rt,o,m){return flagsTemplate.build({$conn:o,$deviceMode:rt.$deviceMode,$igmp:rt.$igmp,$mld:rt.$mld,$media:m})}],VLAN:["$media*","$root",function(m,r){return vlanTemplate.build({$media:m,$root:r})}]}},PPPoE:{"->":["Connection","ConnectionNumberOfEntries"],ConnectionNumberOfEntries:["Connection",function(o){return _.size(o)}],Connection:{"->":["$conn","$extend"],"{$conn,$i}":["$root",function(o){return getConnection(o.$conns,"PPPoE",o.$input,!1,o.$usbConns)}],":":["$i*",function(i){return i+1}],$extend:["$conn*","$root",function(c,r){return _.extend(this,pppTemplate.build({$conn:c,$parentRoot:r}))}]}},PPPoA:{"->":["Connection","ConnectionNumberOfEntries"],ConnectionNumberOfEntries:["Connection",function(o){return _.size(o)}],Connection:{"->":["$conn","$extend"],"{$conn,$i}":["$root",function(o){return getConnection(o.$conns,"PPPoA",o.$input)}],":":["$i*",function(i){return i+1}],$extend:["$conn*","$root",function(c,r){return _.extend(this,pppTemplate.build({$conn:c,$parentRoot:r}))}]}},PPPoEv6:{"->":["Connection","ConnectionNumberOfEntries"],ConnectionNumberOfEntries:["Connection",function(o){return _.size(o)}],Connection:{"->":["$conn","$extend"],"{$conn,$i}":["$root",function(o){return getConnection(o.$conns,"PPPoEv6",o.$input)}],":":["$i*",function(i){return i+1}],$extend:["$conn*","$root",function(c,r){return _.extend(this,pppTemplate.build({$conn:c,$parentRoot:r}))}]}},PPPoEDual:{"->":["Connection","ConnectionNumberOfEntries"],ConnectionNumberOfEntries:["Connection",function(o){return _.size(o)}],Connection:{"->":["$conn","$extend"],"{$conn,$i}":["$root",function(o){return getConnection(o.$conns,"PPPoEDual",o.$input)}],":":["$i*",function(i){return i+1}],$extend:["$conn*","$root",function(c,r){return _.extend(this,pppTemplate.build({$conn:c,$parentRoot:r}))}]}},PPTP:{"->":["Connection","ConnectionNumberOfEntries"],ConnectionNumberOfEntries:["Connection",function(o){return _.size(o)}],Connection:{"->":["$conn","$extend"],"{$conn,$i}":["$root",function(o){return getConnection(o.$conns,"PPTP",o.$input)}],":":["$i*",function(i){return i+1}],__LowerConnection:["$conn*",function(c){return c.data.BaseInterface}],ActualType:["$conn*",function(c){return c.isL2TPv6?"L2TPDUAL":c.type}],$extend:["$conn*","$root",function(c,r){return _.extend(this,pppTemplate.build({$conn:c,$parentRoot:r}))}]}},USB:{"->":["?","Connection","ConnectionNumberOfEntries"],"?":["$root",function(r){return!!r.$usbConns}],ConnectionNumberOfEntries:["$root",function(r){return getUsbNumbers(r.$usbConns)}],Connection:{"->":["$conn","$ifaces","?"],$usbAttrs:["$root",function(r){return r.$attrs?funcs.fetchBranch(r.$attrs,"Device.USB.Connection.#template."):null}],"{$conn, $i}":["$root",function(o){return getConnection(o.$usbConns,"USB",o.$input)}],":":["$i*",function(i){return i+1}],"?":["$conn*",function(c){return!!c}],$media:["$root","$conn*",function(r,c){return getMediaByConnection(r.Media,c)}],$additional:["$conn*",function(c){return c.additionalConn}],APN:["$conn*",function(c){return c.data.APN}],DialNumber:["$conn*","$usbAttrs",function(c,a){return c.data.DialNumber}],AuthenticationProtocol:["$conn*","$usbAttrs",function(c,a){return c.data.AuthType?c.data.AuthType:a?a.AuthType["default"]:void 0}],Enable:["$conn*",function(c){return c.data.Enable}],Mode:["$conn*",function(c){return c.data.Mode}],Name:["$conn*",function(c){return c.data.Name}],WithoutAuth:["$conn*",function(c){return c.data.NoAuth}],Username:["$conn*",function(c){return c.data.Username}],Password:["$conn*",function(c){return c.data.Password}],Interface:["$conn*",function(c){return c.data.Interface}],Ifname:["$conn*",function(c){return c.data.Ifname}],IPv6:["$conn*",function(c){return c.data.IPv6}],IPv6Only:["$conn*",function(c){return c.data.IPv6Only}],Version:["$conn*",function(c){return c.data.IPv6?c.data.IPv6Only?"IPv6":"Dual":"IPv4"}],InterfaceOnly:["$conn*",function(c){return c.data.InterfaceOnly}],IsBridged:["$conn*",function(c){return c.data.IsBridged}],UseAsRoute:["$conn*",function(c){return c.data.UseAsRoute}],$pppOptions:["$conn*",function(c){return c.data.PPPOptions}],KeepAlive:["$pppOptions*","$usbAttrs",function(ppp,a){return ppp.KeepAlive?ppp.KeepAlive.Enable:a?a.PPPOptions.KeepAlive.Enable["default"]:void 0}],LCPEcho:["$pppOptions*","$usbAttrs",function(ppp,a){return ppp.KeepAlive?ppp.KeepAlive.Interval:a?a.PPPOptions.KeepAlive.Interval["default"]:void 0}],LCPEchoRetry:["$pppOptions*","$usbAttrs",function(ppp,a){return ppp.KeepAlive?ppp.KeepAlive.Fails:a?a.PPPOptions.KeepAlive.Fails["default"]:void 0}],PPPDebug:["$pppOptions*","$usbAttrs",function(ppp,a){return _.has(ppp,"PPPDebug")?ppp.PPPDebug:a?a.PPPOptions.PPPDebug["default"]:void 0}],ConnectionTrigger:["$pppOptions*","$usbAttrs",function(ppp,a){return _.has(ppp,"Ondemand")?connTriger(ppp.Ondemand):a?connTriger(a.PPPOptions.Ondemand["default"]):void 0}],MaxMRUSize:["$pppOptions*","$usbAttrs",function(ppp,a){return _.has(ppp,"MTU")?ppp.MTU:a?a.PPPOptions.MTU:void 0}],IdleDisconnectTime:["$pppOptions*","$usbAttrs",function(ppp,a){return _.has(ppp,"OndemandTimeout")?ppp.OndemandTimeout:a?a.PPPOptions.OndemandTimeout:void 0}],__Link:["$conn*",function(o){return o.link}],__LinkSub:["$additional",function(addl){return addl?addl:void 0}],__GroupInst:["$conn*",function(c){return c.groupInst}],__LinkGroupv4:["$conn*",function(c){return c.groupLink}],__NATBridgeLink:["$conn*",function(o){return o.NATBridgeLink}],__LinkGroupv6:["$conn*",function(c){return c.groupLinkv6}],__NATZoneInst:["$conn*",function(o){return o.NATZoneInst}],__NATZonev6Inst:["$conn*",function(o){return o.NATZoneInstv6}],__NATMasqInst:["$conn*",function(o){return o.NATMasqInst}],__NATMasqInstv6:["$conn*",function(o){return o.NATMasqInstv6}],__LinkIface:["$conn*",function(o){return o.ifaceLink}],__PingRuleInst:["$conn*",function(o){return o.PingRuleInst}],__PingRulev6Inst:["$conn*",function(o){return o.PingRulev6Inst}],__FWRuleInst:["$conn*",function(o){return o.FWRuleInst}],__LinkInterface:["$conn*",function(o){return o.data.BaseInterface}],__UsbZoneInst:["$conn*",function(o){return o.usbZoneInst}],__UsbZonev6Inst:["$conn*",function(o){return o.usbZonev6Inst}],Status:["$conn*","$root",function(o,r){return getConnStatus(o.data,null,null,r.$input.OnlyInternalModems)}],StatusExt:["$conn*","$root",function(o,r){return getPPPStatusExt(o.data.ConnectionStatusExt,o.data,r.$input.OnlyInternalModems)}],IsFailover:["$conn*",function(c){return c.isFailover}],IsLoadBalancing:["$conn*",function(c){return c.isLoadBalancing}],DefaultGateway:["$conn*",function(c){return c.gw}],DefaultGatewayv6:["$conn*",function(c){return c.gwv6}],DisabledGateway:["$conn*",function(c){return c.disabledGateway}],MediaType:["$media*",function(o){return o.type}],Media:["$media*",function(o){return expandMedia(o)}],MediaPath:["$media*",function(o){return getMediaPath(o)}],Flags:["$root","$conn*","$media*",function(rt,o,m){return flagsTemplate.build({$conn:o,$deviceMode:rt.$deviceMode,$igmp:rt.$igmp,$mld:rt.$mld,$media:m})}],VLAN:["$media","$root",function(m,r){return vlanTemplate.build({$media:m,$root:r})}],Modem:["$conn*",function(c){return c.data.Modem}],ActiveSIM:["$conn*",function(c){return c.data.SIM}],IntModem:["$conn*",function(c){return c.data.IntModem}],SIM:["$conn*",function(c){return c.data.Modem&&c.data.SIM?c.data.Modem+" "+c.data.SIM:""}],SIMName:["$conn*","$root",function(c,r){return getSIMName(r.$modems,c)}],HealthCheck:["$conn*",function(c){return healthCheck.build({$data:c.data.HealthCheck})}],Connections:["$conn*",function(c){return funcs.newConfig.normalize(c.data.Connections)}],IPChangeDetection:["$conn*",function(c){return c.data.IPChangeDetection}],IsBased:["$conn*",function(c){return c.isBased}],isUseInMirror:["$conn*",function(c){return c.isUseInMirror}],$ip:["$root",function(r){return r.$ip}],$ipv4Conn:["$conn*","$root",function(c,r){return getSupportedUsbConn(c,"ipv4",r.$config)}],$ipv6Conn:["$conn*","$root",function(c,r){return getSupportedUsbConn(c,"ipv6",r.$config)}],$ipv4:["$ip*","$ipv4Conn*",function(ip,conn){return getStaticIP(ip,conn,"ipv4")}],$ipv6:["$ip*","$ipv6Conn*",function(ip,conn){return getStaticIP(ip,conn,"ipv6")}],IPAddress:["$ipv4*",function(ip){return ip.length?getIPAddress(ip[0].data.IPAddress):void 0}],SubnetMask:["$ipv4*",function(ip){return ip.length?getSubnetMask(ip[0].data.IPAddress):void 0}],GatewayIPAddress:["$ipv4Conn*",function(o){return o.data.Gateway||o.data.ServerIdentifier}],IPv6Address:["$ipv6*",function(ip){return ip.length?getIPAddress(ip[0].data.IPAddress):void 0}],StaticIPPrefix0:["$ipv6*",function(ip){return ip.length?getPrefix(ip[0].data.IPAddress):void 0}]}},Bridge:{"->":["Connection","ConnectionNumberOfEntries"],ConnectionNumberOfEntries:["Connection",function(o){return _.size(o)}],Connection:{"->":!0,"{$conn, $i}":["$root",function(o){return getConnection(o.$ifaces,"Bridge",o.$input)}],":":["$i*",function(i){return i+1}],__Link:["$conn*",function(c){return c.link}],Name:["$conn*",function(c){return c.name}],$media:["$root","$conn*",function(r,c){return getMediaByConnection(r.Media,c)}],$xdslStats:["$root",function(r){return r.$xdslStats}],MediaType:["$media*",function(m){return m.type}],Media:["$media*",function(m){return expandMedia(m)}],MediaPath:["$media*",function(o){return getMediaPath(o)}],Enable:["$conn*",function(c){return c.data.Enable}],Status:["$xdslStats","Enable","Media","MediaType","$root",function(dsl,en,media,mt,r){return getBridgeStatus(dsl,en,media,mt,r.$input)}],VLAN:["$media","$root",function(m,r){return vlanTemplate.build({$media:m,$root:r})}]}},IPIP6:{"->":["Connection","ConnectionNumberOfEntries"],ConnectionNumberOfEntries:["Connection",function(o){return _.size(o)}],Connection:{"->":!0,"{$conn, $i}":["$root",function(o){return getConnection(o.$conns,"IPIP6",o.$input)}],":":["$i*",function(i){return i+1}],__Link:["$conn*",function(c){return c.link}],Name:["$conn*",function(c){return c.data.Name}],$media:["$root","$conn*",function(r,c){return getMediaByConnection(r.Media,c)}],MediaType:["$media*",function(o){return o.type}],Media:["$media*",function(o){return expandMedia(o)}],MediaPath:["$media*",function(o){return getMediaPath(o)}],Enable:["$conn*",function(c){return c.data.Enable}],Status:["$conn*",function(o){return getIPIP6Status(o.data.Status)}],StatusExt:["$conn*",function(o){return getPPPStatusExt(o.data.ConnectionStatusExt)}],Mode:["$conn*",function(c){return c.data.Mode}],MRUAuto:["$conn*",function(c){return 0==c.data.MTU}],MaxMRUSize:["$conn*",function(c){return c.data.MTU}],PeerIPv6Auto:["$conn*",function(c){return c.data.AFTRNameOption}],PeerIPv6:["$conn*",function(c){return c.data.PeerIPv6}],AutomaticalConnection:["$conn*",function(c){return void 0!=c.vpnLink}],DefaultGateway:["$conn*",function(c){return c.gw}],__LinkGroupv4:["$conn*",function(c){return c.groupLink}],__LinkVPN:["$conn*",function(c){return c.vpnLink?c.vpnLink:void 0}],__LinkInterface:["$conn*",function(c){return c.data.IPv6}],__NATMasqInst:["$conn*",function(c){return c.NATMasqInst}],__NATZoneInst:["$conn*",function(o){return o.NATZoneInst}],__PingRuleInst:["$conn*",function(o){return o.PingRuleInst}],__FWRuleInst:["$conn*",function(o){return o.FWRuleInst}],__RIPNetworkInst:["$conn*",function(o){return o.RIPNetworkInst}],__LowerConnection:["$conn*",function(o){return o.data.IPv6}],Flags:["$root","$conn*","$media",function(rt,o,m){return flagsTemplate.build({$conn:o,$deviceMode:rt.$deviceMode,$igmp:rt.$igmp,$mld:rt.$mld,$media:m})}]}},IPv4DefaultGateway:["$root",function(o){return identifyDefaultGateway(o,"v4")}],IPv6DefaultGateway:["$root",function(o){return identifyDefaultGateway(o,"v6")}],UseAutomaticalPPTP:["$conns*",function(c){return getUseAutomatical(c)}],__DeviceMode:["$input",function(i){return getDeviceMode(i)}],__Groupv4Order:["$group*",function(g){return getOrder(g.WAN)}],__Groupv6Order:["$groupv6*",function(g){return getOrder(g)}],__IgmpDownstreamsInst:["$igmp*",function(i){return getIgmpDownstreamsInst(i)}],__MLDDownstreamInst:["$mld*",function(i){return getMLDDownstreamsInst(i)}],__inxZoneUSB:["$firewall",function(f){return getZoneInx(f,"IPv4","USB")}],__inxZoneUSBv6:["$firewall",function(f){return getZoneInx(f,"IPv6","USB")}],__Dsysinit:!0,__DSL:["$xdsl",function(xdsl){return!!xdsl}],__NATv6:["$natv6",function(f){return!!f}],PBREnable:["$group*",function(g){return g.PBREnable}],PBRRule:["$firewall*",function(f){return getPBRRule(f)}],__SubConnections:{"->":!0,$typesConn:["IPv4oE","IPv6oE","PPPoE"],"{$conn, $i}":["$parent","$typesConn",function(p,types){return getSubConnection(p.$conns,types,p.$input)}],":":["$i*",function(i){return i}],__Link:["$conn*",function(c){return c.link}],Name:["$conn*",function(c){return c.data.Name}],Type:["$conn*",function(c){return c.type}]},TR069:{"->":!0,Iface:["$root",function(r){return r.$tr?r.$tr.Iface:void 0}]},VoIP:{"->":["$voip","XDLinkNetworkConnection"],$voip:["$root",function(r){return r.$voip}],XDLinkNetworkConnection:["$voip*",function(v){return v?v.XDLinkNetworkConnection:void 0}]}}),ipv4Template=T({"->":["$conn","$parentRoot","$media","$dynDns","$statDns","$isAutoDns","$isStatic","StaticIP","VLAN","Kabinet"],$conn:":external",$parentRoot:":external",$media:["$parentRoot","$conn",function(r,c){return getMediaByConnection(r.Media,c)}],$dynDns:["$parentRoot","$conn",function(r,o){return r.$dns?getDynDNS(r.$dns,o.link):void 0}],$statDns:["$conn",function(o){return getStatDNS(o.data)}],$isAutoDns:["$statDns",function(sdns){return!(sdns&&sdns.length)}],$isStatic:["$conn",function(o){return!!/Static/.test(o.link)}],__Link:["$conn",function(o){return o.link}],__LinkGroupv4:["$conn",function(c){return c.groupLink}],__LinkVPN:["$conn",function(c){return c.vpnLink?c.vpnLink:void 0}],__LinkIface:["$conn",function(o){return o.ifaceLink}],__NATBridgeLink:["$conn",function(o){return o.NATBridgeLink}],__NATMasqInst:["$conn",function(o){return o.NATMasqInst}],__NATZoneInst:["$conn",function(o){return o.NATZoneInst}],__PingRuleInst:["$conn",function(o){return o.PingRuleInst}],__FWRuleInst:["$conn",function(o){return o.FWRuleInst}],__RIPNetworkInst:["$conn",function(o){return o.RIPNetworkInst}],__IGMPInst:["$conn",function(o){return o.IGMPInst}],__IGMPDownInst:["$conn",function(o){return o.IGMPDownInst}],__isShorewallZone:["$conn",function(o){return o.isShorewallZone}],__isShorewallMasq:["$conn",function(o){return o.isShorewallMasq}],AutomaticalConnection:["$conn",function(c){return void 0!=c.vpnLink}],Enable:["$conn",function(o){return o.data.Enable}],Name:["$conn",function(o){return o.data.Name}],Status:["$conn",function(o){return getConnStatus(o.data)}],StatusExt:["$conn",function(o){return getPPPStatusExt(o.data.ConnectionStatusExt,o.data)}],AddressingType:["$isStatic",function(isSt){return isSt?"Static":"DHCP"}],StaticIPNumberOfEntries:["StaticIP",function(o){return _.size(o)}],StaticIP:{"->":!0,$parentRoot:["$parent",function(p){return p.$parentRoot}],"?":["$parentRoot",function(r){return!!r.$ip}],$conn:["$parent",function(o){return o.$conn}],"{$ip,$i}":["$parentRoot","$conn",function(r,o){return getStaticIP(r.$ip,o,"ipv4")}],":":["$i*",function(i){return i+1}],Address:["$ip*",function(o){return getIPAddress(o.data.IPAddress)}],SubnetMask:["$ip*",function(o){return getSubnetMask(o.data.IPAddress)}]},StaticIPAddress0:["StaticIPNumberOfEntries","StaticIP*","$conn",function(n,o,c){return n>0?o[1].Address:getIPAddress(c.data.IPAddress)}],StaticIPSubnetMask0:["StaticIPNumberOfEntries","StaticIP*","$conn",function(n,o,c){
return n>0?o[1].SubnetMask:getSubnetMask(c.data.IPAddress)}],GatewayIPAddress:["$conn",function(o){return o.data.Gateway||o.data.ServerIdentifier}],IsFailover:["$conn",function(c){return c.isFailover}],IsLoadBalancing:["$conn",function(c){return c.isLoadBalancing}],DefaultGateway:["$conn",function(c){return c.gw}],DisabledGateway:["$conn",function(c){return c.disabledGateway}],DNSAutomatical:["$isStatic","$isAutoDns",function(isSt,a){return isSt?void 0:a}],DNSServer1:["$isAutoDns","$dynDns","$statDns",function(a,d,s){return getDNSValue(a,d,s,0)}],DNSServer2:["$isAutoDns","$dynDns","$statDns",function(a,d,s){return getDNSValue(a,d,s,1)}],DNSOrder:["$conn",function(o){return getDnsOrder(o.data)}],VendorID:["$conn",function(o){return o.data.VendorID}],Hostname:["$conn",function(o){return o.data.Hostname}],MediaType:["$media*",function(o){return o.type}],Media:["$media*",function(o){return expandMedia(o)}],MediaPath:["$media*",function(o){return getMediaPath(o)}],Flags:["$parentRoot","$conn","$media",function(rt,o,m){return flagsTemplate.build({$conn:o,$deviceMode:rt.$deviceMode,$igmp:rt.$igmp,$udpxy:rt.$udpxy,$media:m})}],VLAN:["$media","$parentRoot",function(m,r){return vlanTemplate.build({$media:m,$root:r})}],Kabinet:{"->":["?"],"?":["$parent",function(p){return!!p.$conn.data.Kabinet}],$kabinet:["$parent",function(p){return p.$conn.data.Kabinet}],Enable:["$kabinet*",function(k){return k.Enable}],Password:["$kabinet*",function(k){return k.Password}],ConnectionStatus:["$kabinet*",function(k){return getKabinetStatusInfo(getKabinetConnStatus(k.ConnectionStatus))}],Status:["$kabinet*",function(k){return getKabinetStatus(k.ConnectionStatus)}]}}),pppTemplate=T({"->":["$conn","$duallan","$additional","$ipsec","$unnumberedIP","IPsec","UnnumberedIP","DualLAN","StaticIPAddress0","$dynDns","$dynDnsv6","$statDns","$statDnsv6","$isAutoDns","$isAutoDnsv6","$isStatic","StaticIP","Auth"],$conn:":external",$parentRoot:":external",$media:["$parentRoot","$conn",function(pr,c){return getMediaByConnection(pr.Media,c)}],$duallan:["$parentRoot",function(pr){return pr.DualLAN}],$config:["$parentRoot","$conn",function(pr,c){return funcs.fetchBranch(pr.$input,c.data.PPPConfiguration)}],$additional:["$conn",function(c){return c.additionalConn}],$ipsec:["$conn",function(c){return c.ipsecConn}],$dynDns:["$parentRoot","$conn*",function(r,c){return r.$dns?getDynDNS(r.$dns,c.link):void 0}],$dynDnsv6:["$parentRoot","$additional*",function(r,addl){return r.$dns?getDynDNS(r.$dns,addl.link):void 0}],$statDns:["$conn*",function(c){return getStatDNS(c.data)}],$statDnsv6:["$additional*",function(addl){return getStatDNS(addl.data)}],$isStatic:["$conn",function(o){return!!/Static/.test(o.link)}],$isAutoDns:["$statDns*",function(sdns){return!(sdns&&sdns.length)}],$isAutoDnsv6:["$statDnsv6*",function(sdns){return!(sdns&&sdns.length)}],$isAutoConn:["$conn",function(c){return"Device.Network.Group.1."==c.data.BaseInterface}],__Link:["$conn",function(o){return o.link}],__LinkIface:["$conn",function(o){return o.ifaceLink}],__LinkSub:["$additional","$ipsec",function(addl,ipsec){return addl?addl.link:ipsec?ipsec.link:void 0}],__LinkGroupv4:["$conn*",function(c){return c.groupLink}],__LinkGroupv6:["$additional*",function(a){return a.groupLinkv6}],__LinkVPN:["$conn*","$isAutoConn*",function(c,i){return i?c.vpnLink:void 0}],__LinkConfiguration:["$conn",function(o){return o.data.PPPConfiguration}],__LinkInterface:["$conn",function(o){return o.data.BaseInterface}],__LinkTunnelInterface:["$conn",function(o){return o.data.Interface}],__NATBridgeLink:["$conn",function(o){return o.NATBridgeLink}],__NATMasqInst:["$conn",function(o){return o.NATMasqInst}],__NATZoneInst:["$conn",function(o){return o.NATZoneInst}],__NATZoneInstSub:["$additional*",function(o){return o.NATZoneInst}],__PingRuleInst:["$conn",function(o){return o.PingRuleInst}],__PingRuleInstSub:["$additional*",function(o){return o.PingRuleInst}],__FWRuleInst:["$conn",function(o){return o.FWRuleInst}],__FWRuleInstSub:["$additional*",function(o){return o.FWRuleInst}],__RIPNetworkInst:["$conn",function(o){return o.RIPNetworkInst}],__RIPNetworkInstSub:["$additional*",function(o){return o.RIPNetworkInst}],__IGMPInst:["$conn",function(o){return o.IGMPInst}],__IGMPDownInst:["$conn",function(o){return o.IGMPDownInst}],__isShorewallZone:["$conn",function(o){return o.isShorewallZone}],__isShorewallMasq:["$conn",function(o){return o.isShorewallMasq}],__IPsecInst:["$conn",function(o){return o.IPsecInst}],__IPsecZoneInst:["$ipsec*",function(o){return o.IPsecZoneInst}],Enable:["$conn","$ipsec",function(o,ipsec){return ipsec?ipsec.data.Enable:o.data.Enable}],Status:["$conn","$additional","$ipsec",function(o,a,i){return getConnStatus(o.data,a?a.data:null,i?i.data:null)}],StatusExt:["$conn",function(o){return getPPPStatusExt(o.data.ConnectionStatusExt)}],Name:["$conn",function(o){return o.data.Name}],Username:["$config",function(o){return __autoconf.BR2_PACKAGE_ANWEB_CUSTOM_ROSTELECOM_35980?mask(o.Username):o.Username}],Password:["$config",function(o){return __autoconf.BR2_PACKAGE_ANWEB_CUSTOM_ROSTELECOM_35980?mask(o.Password):o.Password}],ServiceName:["$conn",function(o){return getServerName(o.data)}],KeepAlive:["$config",function(o){return o.KeepAlive?o.KeepAlive.Enable:void 0}],LCPEcho:["$config",function(o){return o.KeepAlive?o.KeepAlive.Interval:void 0}],LCPEchoRetry:["$config",function(o){return o.KeepAlive?o.KeepAlive.Fails:void 0}],MaxMRUSize:["$config",function(o){return o.MTU}],PPPDebug:["$config",function(o){return o.PPPDebug}],IsFailover:["$conn","$additional",function(c,a){return c.isFailover||a&&a.isFailover}],IsLoadBalancing:["$conn","$additional",function(c,a){return c.isLoadBalancing||a&&a.isLoadBalancing}],DefaultGateway:["$conn","$additional",function(c,a){return c.gw||a&&a.gw}],DisabledGateway:["$conn","$additional",function(c,a){return c.disabledGateway||a&&a.disabledGateway}],DefaultGatewayv6:["$conn","$additional",function(c,a){return c.gwv6||a&&a.gwv6}],DNSAutomatical:["$conn","$isStatic","$isAutoDns",function(c,isSt,a){return isSt?void 0:a}],DNSServer1:["$conn","$isAutoDns","$dynDns","$statDns",function(c,a,d,s){return"IPv4"===c.version?getDNSValue(a,d,s,0):void 0}],DNSServer2:["$conn","$isAutoDns","$dynDns","$statDns",function(c,a,d,s){return"IPv4"===c.version?getDNSValue(a,d,s,1):void 0}],DNSOrder:["$conn",function(c){return"IPv4"===c.version?getDnsOrder(c.data):void 0}],AuthenticationProtocol:["$config",function(o){return authProto(o.Auth)}],EncryptionProtocol:["$config",function(o){return encrProto(o.Encryption)}],ConnectionTrigger:["$config",function(o){return connTriger(o.Ondemand)}],IdleDisconnectTime:["$config",function(o){return o.OndemandTimeout}],WithoutAuth:["$config*",function(o){return""==o.Password}],AutomaticalConnection:["$isAutoConn",function(i){return i}],Auth:{"->":["?"],"?":["$parent",function(p){return"undefined"!=typeof p.$conn.data.LocalHostname||"undefined"!=typeof p.$conn.data.RemoteHostname||"undefined"!=typeof p.$conn.data.Secret}],LocalHostname:["$parent",function(p){return p.$conn.data.LocalHostname}],RemoteHostname:["$parent",function(p){return p.$conn.data.RemoteHostname}],Secret:["$parent",function(p){return p.$conn.data.Secret}]},Origin:["$additional*",function(addl){return"IPv6"===addl.version?getOrigin(addl.data.IPv6Mode):void 0}],DHCPv6EnablePD:["$additional*",function(addl){return addl.data.DHCPv6EnablePD}],DNSIPv6Automatical:["$additional*","$isAutoDnsv6",function(addl,a){return"IPv6"===addl.version?a:void 0}],DNSIPv6Server1:["$additional*","$isAutoDnsv6*","$dynDnsv6*","$statDnsv6*",function(addl,a,d,s){return"IPv6"===addl.version?getDNSValue(a,d,s,0):void 0}],DNSIPv6Server2:["$additional*","$isAutoDnsv6*","$dynDnsv6*","$statDnsv6*",function(addl,a,d,s){return"IPv6"===addl.version?getDNSValue(a,d,s,1):void 0}],DNSIPv6Order:["$additional*",function(addl){return getDnsOrder(addl.data)}],MediaType:["$media*",function(o){return o.type}],Media:["$media*",function(o){return expandMedia(o)}],MediaPath:["$media*",function(o){return getMediaPath(o)}],Flags:["$parentRoot","$conn","$additional","$media",function(rt,o,add,m){return flagsTemplate.build({$conn:o,$additional:add,$deviceMode:rt.$deviceMode,$igmp:rt.$igmp,$media:m})}],VLAN:["$media","$parentRoot",function(m,r){return vlanTemplate.build({$media:m,$root:r})}],IPsec:{"->":["?"],$ipsec:["$parent",function(p){return p.$ipsec}],"?":["$ipsec",function(ipsec){return!!ipsec}],Key:["$ipsec*",function(ipsec){return ipsec.data.Key||""}],PFS:["$ipsec*",function(ipsec){return ipsec.data.PFS}],PortEnabled:["$ipsec*",function(ipsec){return 0!=ipsec.data.RightPort}],Port:["$ipsec*",function(ipsec){return 0!=ipsec.data.RightPort?ipsec.data.RightPort:1701}],Type:["$ipsec*",function(ipsec){return ipsec.data.Type}]},$ip:["$parentRoot",function(p){return p.$ip}],$ipv4:["$ip*","$conn",function(ip,conn){return getStaticIP(ip,conn,"ipv4")}],$ipv6:["$ip*","$conn",function(ip,conn){return getStaticIP(ip,conn,"ipv6")}],IPAddress:["$ipv4*",function(ip){return ip.length?getIPAddress(ip[0].data.IPAddress):void 0}],SubnetMask:["$ipv4*",function(ip){return ip.length?getSubnetMask(ip[0].data.IPAddress):void 0}],IPv6Address:["$ipv6*",function(ip){return ip.length?getIPAddress(ip[0].data.IPAddress):void 0}],StaticIPPrefix0:["$ipv6*",function(ip){return ip.length?getPrefix(ip[0].data.IPAddress):void 0}],$unnumberedIP:["$conn*","$parentRoot",function(c,pr){return _.isEmpty(c.data.UnnumberedIP)?void 0:funcs.fetchBranch(pr.$config,c.data.UnnumberedIP)}],UnnumberedIP:{"->":!0,$ip:["$parent",function(p){return p.$unnumberedIP}],$addr:["$ip",function(ip){return ip?ip.IPAddress.split("/"):""}],$conn:["$parent",function(p){return p.$conn}],IPAddress:["$addr",function(addr){return _.isEmpty(addr)?"":addr[0]}],Mask:["$addr",function(addr){return _.isEmpty(addr)?"":funcs.ipv4.mask["long"](addr[1])}],__Link:["$conn*",function(c){return c.data.UnnumberedIP}],__IPKey:["$conn*",function(c){return _.isEmpty(c.data.UnnumberedIP)?void 0:c.data.UnnumberedIP.match(/\.\d+\.$/g,"")[0].replace(/\./g,"")}]},DualLAN:{"->":["?"],$conn:["$parent",function(p){return p.$conn}],$additional:["$parent",function(p){return p.$additional}],$duallan:["$parent",function(p){return p.$duallan}],"?":["$duallan",function(dl){return dl&&dl.__has}],$groupInst:["$duallan*","$conn*",function(dl,c){return dl.Group?_.findKey(dl.Group.WAN,{Link:c.link}):void 0}],$groupv6Inst:["$duallan*","$additional*",function(dl,ad){return dl.Group?_.findKey(dl.Group.WANv6,{Link:ad.link}):void 0}],Enable:["$groupInst",function(gr){return!!gr}],__GroupInst:["$groupInst",function(gr){return gr}],__Groupv6Inst:["$groupv6Inst",function(gr){return gr}]},StaticIP:{"->":!0,"?":["$parent",function(o){return!!o.StaticIPAddress0}],":":1,Address:["$parent","?",function(o){return o.StaticIPAddress0}]},StaticIPAddress0:["$config",function(c){return c.LocalIP}]}),flagsTemplate=T({"->":["?"],$conn:":external",$additional:":external",$igmp:":external",$mld:":external",$udpxy:":external",$deviceMode:":external",$media:":external","?":["$deviceMode",function(dm){return!!dm&&"Firewall"!=dm}],NAT:["$conn",function(c){return!_.isUndefined(c.NATMasqInst)}],NATv6:["$conn",function(c){return!_.isUndefined(c.NATMasqInstv6)}],NATHide:["$conn",function(c){return"USB"==c.type&&(c.data.IPv6&&c.data.IPv6Only&&!__autoconf.BR2_PACKAGE_ANWEB_CUSTOM_WW_39630||c.data.InterfaceOnly)}],NATv6Hide:["$conn",function(c){return"USB"!=c.type||!c.data.IPv6||c.data.InterfaceOnly}],Ping:["$conn","$additional",function(c,add){return add?!_.isUndefined(add.PingRuleInst):!_.isUndefined(c.PingRuleInst)}],PingHide:["$conn",function(c){return"USB"==c.type&&c.data.InterfaceOnly}],RIP:["$conn",function(c){return!_.isUndefined(c.RIPNetworkInst)&&"IPv4"==c.version}],RIPng:["$conn","$additional",function(c,add){return(add?!_.isUndefined(add.RIPNetworkInst):!_.isUndefined(c.RIPNetworkInst))&&(add?"IPv6"==add.version:"IPv6"==c.version)}],IGMP:["$conn","$igmp",function(c,igmp){return _.isUndefined(igmp)?void 0:!_.isUndefined(c.IGMPInst)}],MLDProxy:["$conn","$mld",function(c,mld){return _.isUndefined(mld)?void 0:c.MLDProxyInst}],Udpxy:["$conn","$udpxy",function(c,udpxy){return _.isUndefined(udpxy)?void 0:c.UdpxyInst}],ProxyARP:["$media",function(m){return m&&_.has(m.data,"ProxyARP")?m.data.ProxyARP:void 0}],Firewall:["$conn","$additional",function(c,add){return add?!add.FWRuleInst:!c.FWRuleInst}]}),vlanTemplate=T({"->":["?","$iface"],$root:":external",$media:":external","?":["$media",function(m){return!!m&&("DSL.ATM"==m.type||"DSL.PTM"==m.type||"Ethernet"===m.type)}],$iface:["$root","$media",function(r,m){return"Ethernet"===m.type&&funcs.fetchBranch(r.$config,m.data.VlanLink)||funcs.fetchBranch(r.$config,m.data.__Link)||void 0}],Enable:["$iface*",function(i){return i.VID>0}],ID:["$iface*",function(i){return i.VID}],Priority:["$iface*",function(i){return i.VPR}]}),healthCheck=T({"->":["$data","PingAddress"],$data:":external",Enable:["$data",function(d){return d.Enable}],Timeout:["$data",function(d){return d.Timeout}],MaxPing:["$data",function(d){return d.MaxAttempts}],PingAddress:{"->":!0,$pingData:["$parent",function(p){return p.$data.Ping}],"{$ping, $i}":["$pingData",function(p){return p}],"?":["$ping",function(p){return p&&!!p.Address}],Address:["$ping*",function(p){return p.Address}],__inst:["$i*",function(i){return i}]}}),nativeModel=config?pattern.build({$config:config,$attrs:attrs}):{};return setBaseConnection(nativeModel),nativeModel}},function(module,exports,__webpack_require__){module.exports={"default":__webpack_require__(198),__esModule:!0}},function(module,exports,__webpack_require__){__webpack_require__(199),module.exports=__webpack_require__(18).Object.values},function(module,exports,__webpack_require__){var $export=__webpack_require__(16),$values=__webpack_require__(200)(!1);$export($export.S,"Object",{values:function(it){return $values(it)}})},function(module,exports,__webpack_require__){var getKeys=__webpack_require__(37),toIObject=__webpack_require__(39),isEnum=__webpack_require__(93).f;module.exports=function(isEntries){return function(it){for(var key,O=toIObject(it),keys=getKeys(O),length=keys.length,i=0,result=[];length>i;)isEnum.call(O,key=keys[i++])&&result.push(isEntries?[key,O[key]]:O[key]);return result}}},function(module,exports,__webpack_require__){module.exports={"default":__webpack_require__(202),__esModule:!0}},function(module,exports,__webpack_require__){__webpack_require__(203),module.exports=__webpack_require__(18).Object.assign},function(module,exports,__webpack_require__){var $export=__webpack_require__(16);$export($export.S+$export.F,"Object",{assign:__webpack_require__(204)})},function(module,exports,__webpack_require__){"use strict";var getKeys=__webpack_require__(37),gOPS=__webpack_require__(92),pIE=__webpack_require__(93),toObject=__webpack_require__(53),IObject=__webpack_require__(40),$assign=Object.assign;module.exports=!$assign||__webpack_require__(27)(function(){var A={},B={},S=Symbol(),K="abcdefghijklmnopqrst";return A[S]=7,K.split("").forEach(function(k){B[k]=k}),7!=$assign({},A)[S]||Object.keys($assign({},B)).join("")!=K})?function(target,source){for(var T=toObject(target),aLen=arguments.length,index=1,getSymbols=gOPS.f,isEnum=pIE.f;aLen>index;)for(var key,S=IObject(arguments[index++]),keys=getSymbols?getKeys(S).concat(getSymbols(S)):getKeys(S),length=keys.length,j=0;length>j;)isEnum.call(S,key=keys[j++])&&(T[key]=S[key]);return T}:$assign},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";var funcs=__webpack_require__(5),_=__webpack_require__(4),dms=__webpack_require__(163).get().lan,ipv4=__webpack_require__(207),ipv6=__webpack_require__(214);module.exports=function(){function pull(cb,constants){return dms.pull(cb,constants)}function push(cb,constants){return dms.push(cb,constants)}function remove(inx,cb){return dms.remove(inx,cb)}function data(){return _.isNull(dms.data)?{}:dms.data.Device.LAN}function deviceMode(){return _.isNull(dms.data)||!_.has(dms.data.Device,"DeviceMode")?"":dms.data.Device.DeviceMode}function supported(){return dms.supported?dms.supported():function(){}}function constraints(){return dms.constraints?dms.constraints():{}}function isChange(){return!_.isEmpty(dms.status())}function cleanData(){dms.data=null}function getInterface(){function init(){var interfaces=list();initInterfaces=funcs.deepClone(interfaces);var inst=_.keys(interfaces)[0];change(inst)}function clean(){current=null,initInterfaces=null}function list(){return lan.data()}function listNew(){var interfaces=funcs.deepClone(lan.data());return _.each(interfaces,function(iface,key){iface.__isNewInterface||delete interfaces[key]}),interfaces}function getData(inst){var interfaces=list();return interfaces?interfaces[inst]:null}function setData(data,inst){var interfaces=list();interfaces[inst]=funcs.deepClone(data)}function getCurrent(){return current}function getNotices(){var notices=[];return _.each(current,function(elem){if(elem&&elem.notification){var list=elem.notification.list();_.each(list,function(name){var notice=elem.notification.get(name);notice.check()&&notices.push({name:name,notice:notice})})}}),notices}function change(inst,isSetCurrentData){if(isSetCurrentData){var oldIface=funcs.deepClone(_.omit(current.data,"__l2Key","__vlanName")),newIface=getData(inst),iface=funcs.deepExtend(newIface,oldIface);resetInstanceToInit(current.instance)}else var iface=getData(inst);current={data:iface,instance:inst,ipv4:"undefined"!=typeof ipv4&&_.has(iface,"IPv4")?ipv4(iface):dummy(),ipv6:"undefined"!=typeof ipv6&&_.has(iface,"IPv6")?ipv6(iface):dummy()}}function has(inst){var interfaces=list();return interfaces&&_.has(interfaces,inst)}function resetInstanceToInit(inst){setData(funcs.deepClone(initInterfaces[inst]),inst)}function dummy(){return{}}var current=null,initInterfaces=null;return{init:init,clean:clean,list:list,listNew:listNew,getCurrent:getCurrent,getNotices:getNotices,change:change,has:has}}function getIfaceConnections(iface){var lan=dms.data.Device.LAN,names=[];return _.each(lan,function(connection){connection.__l3Key===iface&&names.push(connection.Name)}),names}function checkDeviceLoss(currentAddr){var result={loss:!1,reason:[],params:{}},init=dms.getInitData(),data=dms.data,changes=dms.status(),checkLoss=isCheckDeviceLoss(init,data,currentAddr);if(!checkLoss.check)return result;var addrPath=checkLoss.addrPath,changeParameterList=funcs.splitTree(changes);return _.each(changeParameterList,function(obj){var reAddr=[new RegExp(addrPath),new RegExp(checkLoss.modePath)],name=obj.Name;obj.Value,_.some(reAddr,function(re){return re.test(name)})&&(result.loss=!0,result.reason.push("addr"))}),result.loss&&(result.params=_.extend(result.params,getAddrs(init,data,addrPath))),result}function getAddrs(init,data,path){var result={};return result.oldIP=funcs.fetchBranch(init,path),result.newIP=funcs.fetchBranch(data,path),result}function isCheckDeviceLoss(init,data,currentClientIP){var addrPath,modePath,checkPath=_.some(init.Device.LAN,function(elem,inx){return _.some(elem.IPv4.StaticIP,function(ip,id){var checkParam=funcs.is.ipv4(currentClientIP)?ip.Address:ip.AddnHostname;return checkParam==currentClientIP&&(addrPath="Device.LAN."+inx+".IPv4.StaticIP."+id+".Address",modePath="Device.LAN."+inx+".IPv4.AddressingMode",!0)})});if(!checkPath)return!1;var newClientIP=funcs.fetchBranch(data,addrPath),newClientMode=funcs.fetchBranch(data,modePath),currentMode=funcs.fetchBranch(init,modePath);return{check:newClientIP!=currentClientIP||newClientMode!=currentMode&&"Static"==newClientMode,addrPath:addrPath,modePath:modePath}}var lan={pull:pull,push:push,remove:remove,data:data,deviceMode:deviceMode,supported:supported,constraints:constraints,isChange:isChange,clean:cleanData,"interface":getInterface(),getIfaceConnections:getIfaceConnections,checkDeviceLoss:checkDeviceLoss};return lan}()},function(module,exports,__webpack_require__){"use strict";var Notification=(__webpack_require__(5),__webpack_require__(4),__webpack_require__(208)),ipv4StaticIP=__webpack_require__(209),ipv4DHCP=__webpack_require__(210),ipv4DnsHosts=__webpack_require__(213);module.exports=function(iface){function data(){return ipv4}var ipv4=iface.IPv4,staticIP=ipv4StaticIP(ipv4),dhcp=ipv4DHCP(ipv4),dns=ipv4DnsHosts(ipv4),notification=new Notification;return notification.add({name:"dhcp_is_incorrect_pool",check:{fn:dhcp.isIncorrectPool,context:dhcp},correct:{fn:dhcp.changePool,context:dhcp},params:{fn:function(){return{ranges:staticIP.getRanges()}}}}),{data:data,staticIP:staticIP,dhcp:dhcp,dns:dns,notification:notification}}},function(module,exports,__webpack_require__){"use strict";var _=__webpack_require__(4);module.exports=function(){function Notification(){function list(){return _.keys(listeners)}function add(options){options.name&&(listeners[options.name]=new Notice(options))}function get(name){return listeners[name]?listeners[name]:null}function remove(name){delete listeners[name]}function cleanAll(name){_.each(listeners,function(elem,name){remove(name)})}var listeners={};return{list:list,add:add,get:get,remove:remove,cleanAll:cleanAll}}function Notice(options){function check(){return callOption("check",arguments)}function correct(){return callOption("correct",arguments)}function params(){return callOption("params",arguments)}function callOption(name,args){var option=options[name];if(option){var fn=option.fn,args=Array.prototype.slice.call(args,0),context=option.context||null;return fn.apply(context,args)}}return{check:check,correct:correct,params:params}}return Notification}()},function(module,exports,__webpack_require__){"use strict";var funcs=__webpack_require__(5);funcs.ipv4=__webpack_require__(104),funcs.is=__webpack_require__(103);var _=__webpack_require__(4);module.exports=function(ipv4){function get(inx){return curLanIp=_.has(staticIP,inx)?staticIP[inx].Address:null,_.has(staticIP,inx)?staticIP[inx]:null}function set(elem,inx){staticIP[inx]=elem}function list(){return _.isUndefined(staticIP)?null:staticIP}function conflicts(inx){function isIncorrectSubnet(address,mask){return!funcs.is.ipv4(address)||!funcs.is.mask(mask)}if(!inx)return[];var addresses=list(),current=get(inx),result=[];return isIncorrectSubnet(current.Address,current.SubnetMask)?result:(_.each(addresses,function(elem,index){if(index!=inx&&!isIncorrectSubnet(elem.Address,elem.SubnetMask)){var network=funcs.ipv4.subnet.getNetworkRange(elem.Address,elem.SubnetMask);funcs.ipv4.subnet.belongNetworkRange(network,current.Address)&&result.push(index)}}),result)}function validation(elem,dhcpOffFlag,minHosts){function isInvalidGW(gw){return!gw||!funcs.is.ipv4(gw)}function isInvalidIP(addr){return addr&&!funcs.is.ipv4(addr)}function isInvalidMask(msk){return msk&&!funcs.is.mask(msk)}function isReserved(addr,msk){return funcs.ipv4.subnet.checkReserved(addr,msk)}function isHostsLessMin(hosts,minHosts){var minHostsCount=minHosts?minHosts:options.minHosts;return!_.isNull(minHostsCount)&&minHostsCount>hosts}function isHostsLessMinDhcpOff(hosts){return!_.isNull(options.minHostsDhcpOff)&&hosts<options.minHostsDhcpOff}function isHostsMoreMax(hosts){return!_.isNull(options.maxHosts)&&hosts>options.maxHosts}var errors={Address:[],SubnetMask:[],GatewayAddress:[]},addr=elem.Address,msk=elem.SubnetMask,gw=elem.GatewayAddress;if(isInvalidIP(addr)&&errors.Address.push("msg_invalid_ipv4"),isInvalidMask(msk)&&errors.SubnetMask.push("msg_invalid_mask"),__autoconf.BR2_PACKAGE_ANWEB_CUSTOM_CANALPLUS_38587&&funcs.ipv4.subnet.belongNetwork("192.168.100.0",addr,msk)&&errors.Address.push("lan_error_ip_addr_unavalable"),!isInvalidIP(addr)&&!isInvalidMask(msk)){var hosts=funcs.ipv4.mask.hosts(msk);if(isReserved(addr,msk)&&errors.Address.push("lan_error_ip_is_reserved"),(dhcpOffFlag?isHostsLessMinDhcpOff(hosts):isHostsLessMin(hosts,minHosts))&&errors.SubnetMask.push("lan_error_subnet_hosts_less_min"),isHostsMoreMax(hosts)&&errors.SubnetMask.push("lan_error_subnet_hosts_more_max"),!isInvalidGW(gw)){var network=funcs.ipv4.subnet.getNetworkRange(elem.Address,elem.SubnetMask);funcs.ipv4.subnet.belongNetworkRange(network,gw)||errors.GatewayAddress.push("lan_error_gateway_not_belong_subnets"),0==funcs.ipv4.address.compare(addr,gw)&&(errors.Address.push("msg_ip_address_is_used"),errors.GatewayAddress.push("msg_ip_address_is_used"))}}return errors}function getRanges(){function correctResultRanges(result,currentDHCPPool,curLanIp){return funcs.ipv4.subnet.replaceNetworkRange(result,currentDHCPPool,curLanIp)}function isValidList(addressesList){return _.every(addressesList,function(elem){var errors=validation(elem);return 0==errors.Address.length&&0==errors.SubnetMask.length})}function filterRanges(network,addr1,addr2){var compareAddresses=funcs.ipv4.address.compare(addr1,addr2);switch(compareAddresses){case 1:var ranges1=funcs.ipv4.subnet.splitNetworkRange(network,addr2),ranges2=funcs.ipv4.subnet.splitNetworkRange(network,addr1);if(_.isUndefined(ranges1[1])){var range={start:ranges1[0].start,end:ranges2[0].end};result=result.concat(range)}else{result=result.concat(ranges1[0]);var range={start:ranges1[1].start,end:ranges2[0].end};result=result.concat(range)}_.isUndefined(ranges2[1])||(result=result.concat(ranges2[1]));break;case-1:var ranges1=funcs.ipv4.subnet.splitNetworkRange(network,addr1),ranges2=funcs.ipv4.subnet.splitNetworkRange(network,addr2);if(_.isUndefined(ranges1[1])){var range={start:ranges1[0].start,end:ranges2[0].end};result=result.concat(range)}else{result=result.concat(ranges1[0]);var range={start:ranges1[1].start,end:ranges2[0].end};result=result.concat(range)}_.isUndefined(ranges2[1])||(result=result.concat(ranges2[1]))}}var result=[],addressesList=list();return isValidList(addressesList)?(_.each(addressesList,function(elem){var network=funcs.ipv4.subnet.getNetworkRange(elem.Address,elem.SubnetMask),currentDHCPPool={start:dhcp?dhcp.MinAddress:null,end:dhcp?dhcp.MaxAddress:null};if(!_.isUndefined(elem.GatewayAddress)&&elem.GatewayAddress)filterRanges(network,elem.Address,elem.GatewayAddress);else{var ranges=funcs.ipv4.subnet.splitNetworkRange(network,elem.Address);result=result.concat(ranges),1==result.length&&funcs.is.ipv4(currentDHCPPool.start)&&funcs.is.ipv4(currentDHCPPool.end)&&(result=correctResultRanges(result[0],currentDHCPPool,curLanIp))}}),_.filter(result,function(elem){return-1==funcs.ipv4.address.compare(elem.start,elem.end)})):result}function outOfRanges(addr){var ranges=getRanges();return!!ranges.length&&!_.some(ranges,function(range){return funcs.ipv4.subnet.belongNetworkRange(range,addr)})}function getSubnet(){function isValidList(addressesList){return _.every(addressesList,function(elem){var errors=validation(elem);return 0==errors.Address.length&&0==errors.SubnetMask.length})}var result=[],addressesList=list();return isValidList(addressesList)?(_.each(addressesList,function(elem){var network=funcs.ipv4.subnet.getNetwork(elem.Address,elem.SubnetMask);result.push(network)}),result):result}function isBelongDifferentRanges(addrs,startIp,endIp){function isBelong(net,addrs){return _.every(addrs,function(addr){return funcs.ipv4.subnet.belongNetwork(net.net,addr,net.mask)})}var subnet=getSubnet();return!!subnet.length&&!_.some(subnet,function(net){if(startIp&&endIp){var startNet=funcs.ipv4.subnet.getNetworkAddress(startIp,net.mask),endNet=funcs.ipv4.subnet.getNetworkAddress(endIp,net.mask);return startNet==endNet}return isBelong(net,addrs)})}function isAddressBelongNetworkRange(range){var addressesList=list();return _.some(addressesList,function(elem){return funcs.ipv4.subnet.belongNetworkRange(range,elem.Address)})}function isGatewayBelongNetworkRange(range){var addressesList=list();return _.some(addressesList,function(elem){return!_.isUndefined(elem.GatewayAddress)&&elem.GatewayAddress?funcs.ipv4.subnet.belongNetworkRange(range,elem.GatewayAddress):void 0})}function isReserved(addr){var addressesList=list();return _.some(addressesList,function(elem){return funcs.ipv4.subnet.checkReserved(addr,elem.SubnetMask)})}function getOptions(){return options}function setOptions(data){options=_.extend(options,data)}var curLanIp,staticIP=ipv4.StaticIP,dhcp=ipv4.DHCP?ipv4.DHCP.Server:null,__autoconf="undefined"!=typeof autoconf?autoconf:{},options={minHosts:4,maxHosts:16777214,minHostsDhcpOff:2};return{get:get,set:set,list:list,conflicts:conflicts,validation:validation,getRanges:getRanges,outOfRanges:outOfRanges,isBelongDifferentRanges:isBelongDifferentRanges,getOptions:getOptions,setOptions:setOptions,isAddressBelongNetworkRange:isAddressBelongNetworkRange,isGatewayBelongNetworkRange:isGatewayBelongNetworkRange,isReserved:isReserved}}},function(module,exports,__webpack_require__){"use strict";var funcs=__webpack_require__(5);funcs.ipv4=__webpack_require__(104),funcs.is=__webpack_require__(103),_=__webpack_require__(4);var moduleStatipIP=__webpack_require__(209),moduleDhcpStaticAddress=__webpack_require__(211),moduleDHCPOption=__webpack_require__(212);module.exports=function(ipv4){function data(){return dhcp}function validation(data,minHostsCount,isAPMode){var errors={MinAddress:[],MaxAddress:[],LeaseTime:[]},minAddress=dhcp.Server.MinAddress,maxAddress=dhcp.Server.MaxAddress,leaseTime=_.has(dhcp.Server,"LeaseTime")&&dhcp.Server.LeaseTime?dhcp.Server.LeaseTime.toString():void 0;if(leaseTime&&leaseTime.length>8&&errors.LeaseTime.push("msg_input_lenght_more_max"),minAddress||errors.MinAddress.push("msg_input_is_empty"),maxAddress||errors.MaxAddress.push("msg_input_is_empty"),minAddress&&!funcs.is.ipv4(minAddress)&&errors.MinAddress.push("msg_invalid_ipv4"),maxAddress&&!funcs.is.ipv4(maxAddress)&&errors.MaxAddress.push("msg_invalid_ipv4"),minAddress&&funcs.is.ipv4(minAddress)&&maxAddress&&funcs.is.ipv4(maxAddress)){staticIP.isBelongDifferentRanges([minAddress])&&errors.MinAddress.push("lan_error_ip_address_and_lan_ip_are_in_different_subnets"),staticIP.isBelongDifferentRanges([maxAddress])&&errors.MaxAddress.push("lan_error_ip_address_and_lan_ip_are_in_different_subnets"),staticIP.isBelongDifferentRanges([],minAddress,maxAddress)&&(errors.MinAddress.push("lan_error_dhcp_start_ip_and_stop_ip_belong_different_ip_ranges"),errors.MaxAddress.push("lan_error_dhcp_start_ip_and_stop_ip_belong_different_ip_ranges"));var compareAddresses=funcs.ipv4.address.compare(minAddress,maxAddress);switch(compareAddresses){case 1:errors.MinAddress.push("lan_error_dhcp_start_ip_more_stop_ip"),errors.MaxAddress.push("lan_error_dhcp_stop_ip_less_start_ip");break;case 0:minHostsCount>2&&(errors.MinAddress.push("lan_error_dhcp_start_ip_equal_stop_ip"),errors.MaxAddress.push("lan_error_dhcp_start_ip_equal_stop_ip"))}staticIP.isReserved(minAddress)&&errors.MinAddress.push("lan_error_ip_is_reserved"),staticIP.isReserved(maxAddress)&&errors.MaxAddress.push("lan_error_ip_is_reserved"),staticIP.isAddressBelongNetworkRange({start:minAddress,end:maxAddress})&&(errors.MinAddress.push("lan_error_lan_ip_address_is_in_dhcp_range"),errors.MaxAddress.push("lan_error_lan_ip_address_is_in_dhcp_range")),isAPMode&&staticIP.isGatewayBelongNetworkRange({start:minAddress,end:maxAddress})&&(errors.MinAddress.push("lan_error_gw_ip_address_is_in_dhcp_range"),errors.MaxAddress.push("lan_error_gw_ip_address_is_in_dhcp_range")),staticIP.outOfRanges(minAddress)&&errors.MinAddress.push("lan_error_dhcp_start_ip_out_of_ranges"),staticIP.outOfRanges(maxAddress)&&errors.MaxAddress.push("lan_error_dhcp_stop_ip_out_of_ranges")}return errors}function changePool(obj){obj.start&&funcs.is.ipv4(obj.start)&&obj.end&&funcs.is.ipv4(obj.end)&&(dhcp.Server.MinAddress=obj.start,dhcp.Server.MaxAddress=obj.end)}function isIncorrectPool(){if("Server"!=data().Mode)return!1;var error=validation();return error.MinAddress.length||error.MaxAddress.length}var dhcp=ipv4.DHCP||{},staticIP=_.isUndefined(ipv4.staticIP)?moduleStatipIP(ipv4):ipv4.staticIP,dhcpStaticAddress=moduleDhcpStaticAddress(dhcp,"ipv4"),DHCPOption=moduleDHCPOption(dhcp,"ipv4");return{data:data,validation:validation,changePool:changePool,isIncorrectPool:isIncorrectPool,staticAddress:dhcpStaticAddress,
DHCPOption:DHCPOption}}},function(module,exports,__webpack_require__){"use strict";function StaticAddress(dhcp,ipVersion){function list(){return dhcpServer.StaticAddress}function mode(){return dhcp.Mode}function add(elem){var path=funcs.addInstance(dhcpServer,"StaticAddress",elem);return path.replace("StaticAddress.","")}function set(elem,inx){var path=funcs.setInstance(dhcpServer,"StaticAddress."+inx,elem);return path.replace("StaticAddress.","")}function cut(inx){return funcs.cutInstance(dhcpServer,"StaticAddress."+inx)}function remove(inx){var elem=_.clone(dhcpServer.StaticAddress[inx]);delete dhcpServer.StaticAddress[inx];var toAdd=dhcpServer.__toAdd.split(","),toAddIndex=_.indexOf(toAdd,"StaticAddress."+inx);return-1!=toAddIndex&&toAdd.splice(toAddIndex,1),toAdd.length?dhcpServer.__toAdd=toAdd.join(","):delete dhcpServer.__toAdd,elem}function validation(elem){var errors={IPAddress:[],MACAddress:[],Hostname:[],LeaseTime:[]},ipAddress=elem.IPAddress,macAddress=elem.MACAddress,hostname=elem.Hostname;return ipAddress&&("ipv4"!=ipversion||funcs.is.ipv4(ipAddress)||errors.IPAddress.push("msg_invalid_ipv4"),"ipv6"!=ipversion||funcs.is.ipv6(ipAddress)||errors.IPAddress.push("msg_invalid_ipv6")),macAddress&&!funcs.is.mac(macAddress)&&errors.MACAddress.push("msg_invalid_mac"),hostname&&!funcs.is.hostname(hostname)&&errors.Hostname.push("msg_invalid_hostname"),errors}function checkForEntryInSubnet(ipaddr,server){if(!ipaddr)return!0;if("ipv4"==ipversion&&!funcs.is.ipv4(ipaddr))return!0;if("ipv6"==ipversion&&!funcs.is.ipv6(ipaddr))return!0;var mask="ipv4"==ipversion?server.SubnetMask:server.Prefix,network=funcs[ipversion].subnet.getNetworkRange(server.Address,mask);return!!funcs[ipversion].subnet.belongNetworkRange(network,ipaddr)}function isUseRule(rule){return _.some(list(),function(elem,inx){return rule.IPAddress==elem.IPAddress||rule.MACAddress==elem.MACAddress||rule.Hostname==elem.Hostname})}function usedValues(withoutInx){var rules=_.filter(list(),function(elem,inx){return"cut"!=getInstanceState(inx)&&(!withoutInx||withoutInx!=inx)});return{IPAddress:_.compact(_.pluck(rules,"IPAddress")),MACAddress:"ipv4"==ipversion?_.compact(_.pluck(rules,"MACAddress")):[],Hostname:_.compact(_.pluck(rules,"Hostname")),Mode:_.compact(_.pluck(rules,"Mode")),LeaseTime:_.compact(_.pluck(rules,"LeaseTime"))}}function getInstanceState(instance){var regCut=/\-$/,regAdd=/\+$/;return regCut.test(instance)?"cut":regAdd.test(instance)?"add":""}if(!(this instanceof StaticAddress))return new StaticAddress(dhcp,ipVersion);var dhcpServer=dhcp.Server||{},ipversion=ipVersion;return{list:list,mode:mode,add:add,set:set,cut:cut,remove:remove,validation:validation,checkForEntryInSubnet:checkForEntryInSubnet,isUseRule:isUseRule,usedValues:usedValues,getInstanceState:getInstanceState}}var funcs=__webpack_require__(5);funcs.is=__webpack_require__(103),funcs.ipv4=__webpack_require__(104),funcs.ipv6=__webpack_require__(105);var _=__webpack_require__(4);module.exports=StaticAddress},function(module,exports,__webpack_require__){"use strict";function DHCPOption(dhcp,ipVersion){function list(){return dhcp.DHCPCustomOpts}function mode(){return dhcp.Mode}function add(elem){return dhcp.DHCPCustomOpts.push(elem),dhcp.DHCPCustomOpts}function set(elem,inx){return dhcp.DHCPCustomOpts[inx]=elem,dhcp.DHCPCustomOpts}function remove(inx){return _.each(inx,function(num){delete dhcp.DHCPCustomOpts[num]}),dhcp.DHCPCustomOpts=_.compact(dhcp.DHCPCustomOpts),dhcp.DHCPCustomOpts}function usedValues(withoutInx){var rules=_.filter(list(),function(elem,inx){return"cut"!=getInstanceState(inx)&&(!withoutInx&&0!=withoutInx||withoutInx!=inx)});return{Option:_.compact(_.pluck(rules,"Option")),Tag:_.compact(_.pluck(rules,"Tag")),Value:_.compact(_.pluck(rules,"Value"))}}function getInstanceState(instance){var regCut=/\-$/,regAdd=/\+$/;return regCut.test(instance)?"cut":regAdd.test(instance)?"add":""}return this instanceof DHCPOption?(dhcp.DHCPCustomOpts=dhcp.DHCPCustomOpts||[],{list:list,mode:mode,add:add,set:set,remove:remove,usedValues:usedValues,getInstanceState:getInstanceState}):new DHCPOption(dhcp,ipVersion)}var funcs=__webpack_require__(5);funcs.is=__webpack_require__(103),funcs.ipv4=__webpack_require__(104),funcs.ipv6=__webpack_require__(105);var _=__webpack_require__(4);module.exports=DHCPOption},function(module,exports,__webpack_require__){"use strict";function Hosts(input){function list(){return dns.Hosts}function add(elem){var path=funcs.addInstance(dns,"Hosts",elem);return path.replace("Hosts.","")}function set(elem,inx){var path=funcs.setInstance(dns,"Hosts."+inx,elem);return path.replace("Hosts.","")}function cut(inx){return funcs.cutInstance(dns,"Hosts."+inx)}function remove(inx){var elem=_.clone(dns.Hosts[inx]);delete dns.Hosts[inx];var toAdd=dns.__toAdd.split(","),toAddIndex=_.indexOf(toAdd,"Hosts."+inx);return-1!=toAddIndex&&toAdd.splice(toAddIndex,1),toAdd.length?dns.__toAdd=toAdd.join(","):delete dns.__toAdd,elem}function getInstanceState(instance){var regCut=/\-$/,regAdd=/\+$/;return regCut.test(instance)?"cut":regAdd.test(instance)?"add":""}if(!(this instanceof Hosts))return new Hosts(input);var dns=input.DNS||{};return{list:list,add:add,set:set,cut:cut,remove:remove,getInstanceState:getInstanceState}}var funcs=__webpack_require__(5),_=__webpack_require__(4);module.exports=Hosts},function(module,exports,__webpack_require__){"use strict";var Notification=(__webpack_require__(5),__webpack_require__(4),__webpack_require__(208)),ipv6StaticIP=__webpack_require__(215),ipv6DHCP=__webpack_require__(216),ipv6DnsHosts=__webpack_require__(213);module.exports=function(iface){function data(){return ipv6}var ipv6=iface.IPv6,staticIP=ipv6StaticIP(ipv6),dhcp=ipv6DHCP(ipv6),dns=ipv6DnsHosts(ipv6),notification=new Notification;if(ipv6.StaticIP[1]&&ipv6.StaticIP[1].Address==ipv6.DHCP.Server.MinAddress&&"Statefull"==ipv6.DHCP.Server.AutoconfigurationMode){var staticIPRange=staticIP.getRanges();!staticIPRange[1]&&staticIPRange[0]&&(ipv6.DHCP.Server.MinAddress=staticIPRange[0].start)}return notification.add({name:"dhcp_is_incorrect_pool",check:{fn:dhcp.isIncorrectPool,context:dhcp},correct:{fn:dhcp.changePool,context:dhcp},params:{fn:function(){var ranges=staticIP.getRanges();return{ranges:ranges}}}}),{data:data,staticIP:staticIP,dhcp:dhcp,dns:dns,notification:notification}}},function(module,exports,__webpack_require__){"use strict";var funcs=__webpack_require__(5);funcs.is=__webpack_require__(103),funcs.ipv6=__webpack_require__(105);var _=__webpack_require__(4);module.exports=function(ipv6){function get(inx){return _.has(staticIP,inx)?staticIP[inx]:null}function set(obj,inx){if(!inx){var keys=_.keys(staticIP);inx=keys.length>0?Number(_.last(keys))+1:"1"}staticIP[inx]=_.clone(obj)}function remove(inx){_.each(inx,function(elem){delete staticIP[elem]})}function list(){return _.isUndefined(staticIP)?null:staticIP}function getDefaultInst(){return{Enable:!0,Address:"",Prefix:"",AddressingType:"Static"}}function validation(elem){function isInvalidIP(addr){return addr&&!funcs.is.ipv6(addr)}function isInvalidPrefix(prefix){return prefix&&!funcs.is.ipv6Prefix(prefix)}function isReserved(addr,prefix){return funcs.ipv6.subnet.checkReserved(addr,prefix)}function isOutOfRangePrefix(prefix){var value=parseInt(prefix);return!_.isNull(options.minPrefix)&&value<options.minPrefix||!_.isNull(options.maxPrefix)&&value>options.maxPrefix}function isOutOfSubnetRange(subnetGateway,subnetStaticIp){return subnetGateway!=subnetLinkLocal&&subnetGateway!=subnetStaticIp?subnetGateway&&subnetStaticIp:void 0}var errors={Address:[],Prefix:[],GatewayAddress:[]},addr=elem.Address,prefix=elem.Prefix,gw=elem.GatewayAddress;if(gw)var subnetGateway=funcs.ipv6.subnet.getNetworkAddress(funcs.ipv6.address.full(gw),prefix),subnetStaticIp=funcs.ipv6.subnet.getNetworkAddress(funcs.ipv6.address.full(addr),prefix),subnetLinkLocal=funcs.ipv6.subnet.getNetworkAddress(funcs.ipv6.address.full("fe80::"),prefix);return isInvalidIP(addr)&&errors.Address.push("msg_invalid_ipv6"),isInvalidIP(gw)&&errors.GatewayAddress.push("msg_invalid_ipv6"),isInvalidPrefix(prefix)&&errors.Prefix.push("msg_invalid_ipv6_prefix"),isInvalidIP(addr)||isInvalidPrefix(prefix)||isReserved(addr,prefix)&&errors.Address.push("lan_error_ip_is_reserved"),isInvalidIP(gw)||isInvalidPrefix(prefix)||isReserved(gw,prefix)&&errors.GatewayAddress.push("lan_error_ip_is_reserved"),isInvalidIP(addr)||isInvalidIP(gw)||isInvalidPrefix(prefix)||isOutOfRangePrefix(prefix)&&errors.Prefix.push("lan_error_subnet_ipv6_prefix_out_of_range"),isInvalidIP(gw)||isInvalidPrefix(prefix)||isInvalidIP(addr)||isOutOfSubnetRange(subnetGateway,subnetStaticIp)&&errors.GatewayAddress.push("msg_error_gateway_ip_address_out_of_range"),!gw||isInvalidIP(addr)||isInvalidIP(gw)||isInvalidPrefix(prefix)||funcs.ipv6.address.full(addr).toUpperCase()==funcs.ipv6.address.full(gw).toUpperCase()&&errors.GatewayAddress.push("msg_ip_address_is_used"),errors}function getRanges(){function isValidList(addressesList){return _.every(addressesList,function(elem){var errors=validation(elem);return 0==errors.Address.length&&0==errors.Prefix.length})}function list(){return _.isUndefined(staticIP)?null:_.omit(staticIP,2)}var result=[],addressesList=list();return isValidList(addressesList)?(_.each(addressesList,function(elem){var network=funcs.ipv6.subnet.getNetworkRange(elem.Address,elem.Prefix),ranges=funcs.ipv6.subnet.splitNetworkRange(network,elem.Address);_.each(ranges,function(range){funcs.ipv6.subnet.belongNetworkRange(network,range.start)&&funcs.ipv6.subnet.belongNetworkRange(network,range.end)&&range.start!=range.end&&(result=result.concat(range))})}),result):result}function outOfRanges(addr){var ranges=getRanges();return!!ranges.length&&!_.some(ranges,function(range){return funcs.ipv6.subnet.belongNetworkRange(range,addr)})}function getSubnet(){function isValidList(addressesList){return _.every(addressesList,function(elem){var errors=validation(elem);return 0==errors.Address.length&&0==errors.Prefix.length})}var result=[],addressesList=list();return isValidList(addressesList)?(_.each(addressesList,function(elem){var network=funcs.ipv6.subnet.getNetwork(elem.Address,elem.Prefix);result.push(network)}),result):result}function isBelongDifferentRanges(addrs){function isBelong(net,addrs){return _.every(addrs,function(addr){return funcs.ipv6.subnet.belongNetwork(net.net,addr,net.prefix)})}var subnet=getSubnet();return!!subnet.length&&!_.some(subnet,function(net){return isBelong(net,addrs)})}function isAddressBelongNetworkRange(range){var addressesList=list();return _.some(addressesList,function(elem){return funcs.ipv6.subnet.belongNetworkRange(range,elem.Address)})}function getOptions(){return options}function setOptions(data){options=_.extend(options,data)}function checkUnique(elem,inx){if(!elem.Address||!elem.Prefix)return!0;var curSubnet={ip:elem.Address,prefix:elem.Prefix},overIPs=inx?_.omit(staticIP,inx):staticIP,check=_.every(overIPs,function(ip){var ipSubnet={ip:ip.Address,prefix:ip.Prefix};return!funcs.ipv6.subnet.containsNetwork(ipSubnet,curSubnet)&&!funcs.ipv6.subnet.containsNetwork(curSubnet,ipSubnet)});return check}var staticIP=ipv6.StaticIP,options={minPrefix:1,maxPrefix:128};return{get:get,set:set,remove:remove,list:list,getDefaultInst:getDefaultInst,validation:validation,getRanges:getRanges,outOfRanges:outOfRanges,isBelongDifferentRanges:isBelongDifferentRanges,getOptions:getOptions,setOptions:setOptions,isAddressBelongNetworkRange:isAddressBelongNetworkRange,checkUnique:checkUnique}}},function(module,exports,__webpack_require__){"use strict";var funcs=__webpack_require__(5);funcs.ipv6=__webpack_require__(105),funcs.is=__webpack_require__(103),_=__webpack_require__(4);var moduleStatipIP=__webpack_require__(215),moduleDhcpStaticAddress=__webpack_require__(211);module.exports=function(ipv6){function data(){return dhcp}function validation(){var errors={MinAddress:[],MaxAddress:[],LeaseTime:[]},minAddress=dhcp.Server.DHCPAddressShort?"::"+dhcp.Server.MinAddress:dhcp.Server.MinAddress,maxAddress=dhcp.Server.DHCPAddressShort?"::"+dhcp.Server.MaxAddress:dhcp.Server.MaxAddress,leaseTime=_.has(dhcp.Server,"LeaseTime")&&dhcp.Server.LeaseTime?dhcp.Server.LeaseTime.toString():void 0;if(leaseTime&&leaseTime.length>8&&errors.LeaseTime.push("msg_input_lenght_more_max"),minAddress||errors.MinAddress.push("msg_input_is_empty"),maxAddress||errors.MaxAddress.push("msg_input_is_empty"),minAddress&&!funcs.is.ipv6(minAddress)&&errors.MinAddress.push("msg_invalid_ipv6"),maxAddress&&!funcs.is.ipv6(maxAddress)&&errors.MaxAddress.push("msg_invalid_ipv6"),minAddress&&funcs.is.ipv6(minAddress)&&maxAddress&&funcs.is.ipv6(maxAddress)){var compareAddresses=funcs.ipv6.address.compare(minAddress,maxAddress);switch(compareAddresses){case 1:errors.MinAddress.push("lan_error_dhcp_start_ip_more_stop_ip"),errors.MaxAddress.push("lan_error_dhcp_stop_ip_less_start_ip");break;case 0:errors.MinAddress.push("lan_error_dhcp_start_ip_equal_stop_ip"),errors.MaxAddress.push("lan_error_dhcp_start_ip_equal_stop_ip")}if(dhcp.Server.DHCPAddressShort){var patt=/^::[0-9A-Fa-f]{1,4}$/,nullPatt=/^::[0]{1,4}$/;!nullPatt.test(minAddress)&&patt.test(minAddress)||errors.MinAddress.push("msg_not_allowed_addr"),!nullPatt.test(maxAddress)&&patt.test(maxAddress)||errors.MaxAddress.push("msg_not_allowed_addr")}else staticIP.isBelongDifferentRanges([minAddress,maxAddress])&&(errors.MinAddress.push("lan_error_dhcp_start_ip_and_stop_ip_belong_different_ip_ranges"),errors.MaxAddress.push("lan_error_dhcp_start_ip_and_stop_ip_belong_different_ip_ranges")),staticIP.isAddressBelongNetworkRange({start:minAddress,end:maxAddress})&&(errors.MinAddress.push("lan_error_lan_ip_address_is_in_dhcp_range_ipv6"),errors.MaxAddress.push("lan_error_lan_ip_address_is_in_dhcp_range_ipv6")),staticIP.outOfRanges(minAddress)&&errors.MinAddress.push("lan_error_dhcp_start_ip_out_of_ranges"),staticIP.outOfRanges(maxAddress)&&errors.MaxAddress.push("lan_error_dhcp_stop_ip_out_of_ranges")}return errors}function changePool(obj){obj.start&&funcs.is.ipv6(obj.start)&&obj.end&&funcs.is.ipv6(obj.end)&&(dhcp.Server.MinAddress=obj.start,dhcp.Server.MaxAddress=obj.end)}function isIncorrectPool(){var autoMode=(data().Mode,data().Server.AutoconfigurationMode);if("Statefull"!=autoMode||ipv6.StaticIP&&ipv6.StaticIP[1]&&""==ipv6.StaticIP[1].Address)return!1;var error=validation();return error.MinAddress.length||error.MaxAddress.length}var dhcp=ipv6.DHCP,staticIP=_.isUndefined(ipv6.staticIP)?moduleStatipIP(ipv6):ipv6.staticIP,dhcpStaticAddress=moduleDhcpStaticAddress(dhcp,"ipv6");return{data:data,validation:validation,isIncorrectPool:isIncorrectPool,changePool:changePool,staticAddress:dhcpStaticAddress}}},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}var _keys=__webpack_require__(78),_keys2=_interopRequireDefault(_keys),dms=__webpack_require__(163).get().wifi,funcs=__webpack_require__(5),WiFiAccessPoint=__webpack_require__(218),WiFiEndPoint=__webpack_require__(222),WiFiWPS=__webpack_require__(223),WiFiWMM=__webpack_require__(224),helper=__webpack_require__(106);module.exports=function(){function isChange(){function isOnlyRegulatoryDomain(status){var indexRadio;return status&&status.Device&&status.Device.WiFi&&status.Device.WiFi.Radio&&(indexRadio=_.keys(status.Device.WiFi.Radio)[0]),isHasOneProperty(status.Device)&&isHasOneProperty(status.Device.WiFi)&&isHasOneProperty(status.Device.WiFi.Radio)&&isHasOneProperty(status.Device.WiFi.Radio[indexRadio])&&_.has(status.Device.WiFi.Radio[indexRadio],"RegulatoryDomain")}function isHasOneProperty(obj){return!!obj&&1==_.keys(obj).length}function isOnlyClientInfoFields(status){var indexRadio;status&&status.Device&&status.Device.WiFi&&status.Device.WiFi.Radio&&(indexRadio=_.keys(status.Device.WiFi.Radio)[0]);var indexEndPoint;status&&status.Device&&status.Device.WiFi&&status.Device.WiFi.Radio&&status.Device.WiFi.Radio[indexRadio]&&status.Device.WiFi.Radio[indexRadio].EndPoint&&(indexEndPoint=_.keys(status.Device.WiFi.Radio[indexRadio].EndPoint)[0]);var pathEndPoint="Device.WiFi.Radio."+indexRadio+".EndPoint."+indexEndPoint+".";return indexEndPoint&&_.has(status.Device.WiFi.Radio[indexRadio].EndPoint[indexEndPoint],"RSSI")&&funcs.cutBranch(status,pathEndPoint+"RSSI"),indexEndPoint&&_.has(status.Device.WiFi.Radio[indexRadio].EndPoint[indexEndPoint],"Connect")&&funcs.cutBranch(status,pathEndPoint+"Connect"),indexEndPoint&&_.has(status.Device.WiFi.Radio[indexRadio].EndPoint[indexEndPoint],"Channel")&&funcs.cutBranch(status,pathEndPoint+"Channel"),isHasOneProperty(status.Device)&&isHasOneProperty(status.Device.WiFi)&&isHasOneProperty(status.Device.WiFi.Radio[indexRadio])&&isHasOneProperty(status.Device.WiFi.Radio[indexRadio].EndPoint)&&0==_keys2["default"](status.Device.WiFi.Radio[indexRadio].EndPoint[indexEndPoint]).length}var status=dms.status();return status&&!_.isEmpty(status)&&!isOnlyRegulatoryDomain(status)&&!isOnlyClientInfoFields(status)}function setClientInfo(value){clientInfo=value}function getBand(index,freq){var radio=dms.data.Device.WiFi.Radio,found=[];freq&&(bandFreq=freq);for(var i in radio)if(radio[i].OperatingFrequencyBand==bandFreq){var obj={radio:radio[i],ap:new WiFiAccessPoint(dms.data,dms.attrs,i,freq),wps:new WiFiWPS(dms.data,i)};obj.wmm=new WiFiWMM(dms.data,dms.attrs,i),found.push(obj)}return _.isUndefined(index)?found:found[index]}function hasBand(freq){var radio=dms.data.Device.WiFi.Radio;return _.some(radio,function(elem){return elem.OperatingFrequencyBand==freq})}function setBandFreq(freq){bandFreq=freq}function getBandFreq(){return bandFreq}function setRegulatoryDomain(freq,domain){var radioFreq=_.findKey(dms.data.Device.WiFi.Radio,{OperatingFrequencyBand:freq});radioFreq&&(dms.data.Device.WiFi.Radio[radioFreq].RegulatoryDomain=domain)}function getClient(band){var index=band&&"2.4GHz"!=band?2:1;return new WiFiEndPoint(dms.data,index)}function getClientBands(){var ap=dms.data.Device.WiFi.Radio;return _.map(ap,function(elem){return elem.OperatingFrequencyBand})}function isSeparateClient(){var radio=dms.data.Device.WiFi.Radio[1],radio5G=dms.data.Device.WiFi.Radio[2];return radio&&radio5G&&radio.EndPointNumberOfEntries>0&&radio5G.EndPointNumberOfEntries>0}function isRadioEnable(freq){var radio=dms.data.Device.WiFi.Radio;return _.some(radio,function(elem){return elem.OperatingFrequencyBand==freq&&elem.Enable})}function enableRadio(freq,cb){var radio=getRadioData(freq);radio.Enable=!0,wifi.push(cb)}function enableRadioBroadcast(freq,inx,cb){var radio=getRadioData(freq);radio.AccessPoint[inx||"1"].Broadcast=!0,wifi.push(cb)}function countries(){var CountriesList=dms.data.Device.WiFi.CountriesList;return CountriesList}function scanList(band){if(!dms.scanData||!dms.scanData.Device.WiFi.ScanList)return[];var result=_.toArray(dms.scanData.Device.WiFi.ScanList);return band&&(result=_.filter(result,function(elem){return elem.Band==band})),result}function supportedParam(param){var band=getBand(0);if(band&&band.radio){var radio=band.radio;return _.has(radio,param)}}function writeSupported(param){var result=funcs.fetchBranch(dms.attrs,"Device.WiFi.Radio.");return!result[param]||-1!=result[param].access.indexOf("Write")}function getRadioAttrs(){var result=funcs.fetchBranch(dms.attrs,"Device.WiFi.Radio.");return result}function getRadioData(freq){var radio=dms.data.Device.WiFi.Radio;return _.find(radio,function(elem){return elem.OperatingFrequencyBand==freq})}function getWDSData(){return dms.data.Device.WiFi.WDS}function isCheckDeviceLoss(){return clientInfo&&"WLAN"==clientInfo.name}function checkDeviceLoss(){function getCurrentRadioPath(init,client){var radioInst,radio=funcs.fetchBranch(init,"Device.WiFi.Radio.");return _.each(radio,function(elem,inst1){isCurrentBand(elem.OperatingFrequencyBand,client.band)&&(radioInst=inst1)}),radioInst?"Device.WiFi.Radio."+radioInst+".":""}function getCurrentAPPath(init,client){var radioInst,apInst,radio=funcs.fetchBranch(init,"Device.WiFi.Radio.");return _.each(radio,function(elem,inst1){isCurrentBand(elem.OperatingFrequencyBand,client.band)&&(radioInst=inst1,_.each(elem.AccessPoint,function(ap,inst2){ap.SSID==client.SSID&&(apInst=inst2)}))}),radioInst&&apInst?"Device.WiFi.Radio."+radioInst+".AccessPoint."+apInst+".":""}function getAPParams(rPath,apPath,data){var result={},radio=funcs.fetchBranch(init,rPath),ap=funcs.fetchBranch(data,apPath),pathFrequency=apPath.replace(/AccessPoint.+$/,"OperatingFrequencyBand"),frequency=funcs.fetchBranch(data,pathFrequency);switch(result.SSID=ap.SSID,result.ModeEnabled=wifi.helper.getModeName(ap.Security.ModeEnabled,radio.OperatingStandards,radio.ModeAvailable),result.Frequency=frequency,result.ProfileId=getIndexFromPath(apPath),ap.Security.ModeEnabled){case"WPA-Personal":case"WPA2-Personal":case"WPA-WPA2-Personal":result.PreSharedKey=ap.Security.PreSharedKey;break;case"WEP":_.each([1,2,3,4],function(value){result["WEPKey"+value]=ap.Security["WEPKey"+value]});break;case"WPA-Enterprise":case"WPA2-Enterprise":case"WPA-WPA2-Enterprise":result.RadiusSecret=ap.Security.RadiusSecret}return result}function getIndexFromPath(path){var endIndex=path.lastIndexOf("."),beginIndex=path.lastIndexOf(".",endIndex-1)+1;return parseInt(path.substring(beginIndex,endIndex))}function isCurrentBand(band1,band2){return parseFloat(band1)==parseFloat(band2)}var result={loss:!1,reason:[],params:{}};if(!isCheckDeviceLoss())return result;var init=dms.getInitData(),data=dms.data,changes=dms.status(),apPath=getCurrentAPPath(init,clientInfo),rPath=getCurrentRadioPath(init,clientInfo);if(!apPath)return result;var changeParamsList=funcs.splitTree(changes);return _.each(changeParamsList,function(obj){var reAP=new RegExp(apPath),reParams=[{name:"ssid",value:[/SSID/]},{name:"security_mode",value:[/ModeEnabled/]},{name:"security_encryption",value:[/PreSharedKey/,/WEPKey*/,/RadiusSecret/]}],name=obj.Name;obj.Value,_.last(name.split(".")),reAP.test(name)&&(_.each(reParams,function(elem){_.each(elem.value,function(reParam){reParam.test(name)&&(result.loss=!0,result.reason.push(elem.name))})}),result.loss&&(result.params=_.extend(result.params,getAPParams(rPath,apPath,data))))}),result}function isClientMode(){var result=!1,band=getBand();if(band&&band[0]){var freq=getBandFreq(),endPoint=_.findWhere(band[0].radio.EndPoint,{Band:freq});result=endPoint&&endPoint.Enable&&endPoint.Profile}return!!result}function getBasicClientInfo(){return dms.data.Device.WiFi.ClientBasic}var bandFreq=null,clientInfo=null,wifi={data:dms.data,scanData:dms.scanData,pull:dms.pull,pullCommon:dms.pullCommon,pullAdv:dms.pullAdv,pullWMM:dms.pullWMM,pullWDS:dms.pullWDS,pullClient:dms.pullClient,getChannels:dms.getChannels,setClientInfo:setClientInfo,updateScan:dms.updateScan,push:dms.push,isChange:isChange,hasBand:hasBand,getBand:getBand,getBandFreq:getBandFreq,setBandFreq:setBandFreq,getClient:getClient,getClientBands:getClientBands,getWDSData:getWDSData,getRadioAttrs:getRadioAttrs,isSeparateClient:isSeparateClient,isRadioEnable:isRadioEnable,enableRadio:enableRadio,enableRadioBroadcast:enableRadioBroadcast,countries:countries,scanList:scanList,supportedParam:supportedParam,checkDeviceLoss:checkDeviceLoss,isWirelessClient:isCheckDeviceLoss,helper:helper,isClientMode:isClientMode,writeSupported:writeSupported,setRegulatoryDomain:setRegulatoryDomain,getStatus:dms.status,getBasicClientInfo:getBasicClientInfo};return wifi}()},function(module,exports,__webpack_require__){"use strict";var _=__webpack_require__(4),somovd=__webpack_require__(219),dsysinit=__webpack_require__(220);module.exports=_.size(somovd)?somovd:dsysinit},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";var funcs=__webpack_require__(5),_=__webpack_require__(4),WiFiAccessPoint=__webpack_require__(221);module.exports=function(data,attrs,radioInx,freq){function getDefault(data,attrs){var baseAP=this.getBase(),attrsAP=funcs.fetchBranch(attrs,"Device.WiFi.Radio.AccessPoint."),aps=funcs.fetchBranch(data,"Device.WiFi.Radio."+radioInx+".AccessPoint."),ifaces=funcs.fetchBranch(data,"Device.Network.Interface.WiFi."),obj=funcs.newConfig.makeDefaultModel(attrsAP);return obj.SSID=this.getSSID(data.Device.WiFi.Radio[radioInx]),obj.Interface=getInterface(ifaces,aps,freq),obj.Security.ModesSupported=baseAP.Security.ModesSupported,obj.Security.PreSharedKey=funcs.randomString(8),obj.Security.ProtectedManagementFrames=getProtectedFrame(obj.Security.ProtectedManagementFrames),delete obj.AC,delete obj.BSSID,obj}function getProtectedFrame(param){switch(param){case"Disabled":return"NoMgmtFrameProtection";case"Required":return"MgmtFrameProtectionRequired";case"Optional":return"MgmtFrameProtectionOptional";default:return}}function getInterface(ifaces,aps,freq){function getIfacesPath(ifaces,band,freq){var result=[];return _.each(ifaces,function(iface,inx){("2.4GHz"!=freq||iface.Support24GHz)&&("5GHz"!=freq||iface.SSupport5GHz)&&result.push("Device.Network.Interface.WiFi."+inx+".")}),result}var allIfaces=getIfacesPath(ifaces,freq),useIfaces=_.map(aps,function(e){return e.Interface}),freeIfaces=_.difference(allIfaces,useIfaces);return freeIfaces.length?freeIfaces[0]:""}var wifiAP=new WiFiAccessPoint(data,attrs,radioInx);return wifiAP.getDefault=function(){return getDefault.call(this,data,attrs)},wifiAP}},function(module,exports,__webpack_require__){"use strict";function WiFiAccessPoint(data,attrs,radioInx){function getSSID(radio){var res,ssid=radio.AccessPoint[1].SSID,inx=_.size(radio.AccessPoint);do{inx++;var resFind=_.find(radio.AccessPoint,function(elem){return elem.SSID==ssid+"."+inx});res=!resFind}while(0==res);return ssid=ssid+"."+inx}return{get:function(inx){return data.Device.WiFi.Radio[radioInx].AccessPoint[inx]},getBase:function(){return data.Device.WiFi.Radio[radioInx].AccessPoint[1]},getSSID:getSSID,set:function(obj,inx){var path=funcs.setInstance(data.Device.WiFi.Radio[radioInx],"AccessPoint."+inx,obj);return path.replace("AccessPoint.","")},cut:function(inx){return funcs.cutInstance(data.Device.WiFi.Radio[radioInx],"AccessPoint."+inx)},list:function(){return data.Device.WiFi.Radio[radioInx].AccessPoint},add:function(obj){var path=funcs.addInstance(data.Device.WiFi.Radio[radioInx],"AccessPoint",obj);return path.replace("AccessPoint.","")},conflicts:function(obj){var list=this.list();return _.filter(_.keys(list),function(key){var elem=list[key];return elem.SSID==obj.SSID?!0:void 0})},supportedParam:function(param,root){var base=this.getBase(),obj=root?funcs.fetchBranch(base,root):base;return _.has(obj,param)}}}var funcs=__webpack_require__(5),_=__webpack_require__(4);module.exports=WiFiAccessPoint},function(module,exports,__webpack_require__){"use strict";function WiFiEndPoint(data,radioInx){return{getBase:function(){var arr=_.values(data.Device.WiFi.Radio[radioInx].EndPoint);return arr[0]},list:function(){return data.Device.WiFi.Radio[radioInx].EndPoint},conflicts:function(obj){var list=this.list();return _.filter(_.keys(list),function(key){var elem=list[key];return elem.SSID==obj.SSID?!0:void 0})}}}var _=(__webpack_require__(5),__webpack_require__(4));module.exports=WiFiEndPoint},function(module,exports,__webpack_require__){"use strict";function WiFiWPS(data,radioInx){function info(inx){var info={},currentAP=ap[inx],wps=currentAP.WPS,sec=currentAP.Security;return info.enabled=wps.Enable,info.configured=wps.Configured,_.has(wps,"Configured")&&(info.state=wps.Configured?"wifi_wps_configured":"wifi_wps_not_configured"),_.has(wps,"DefaultPIN")&&(info.defpin=wps.DefaultPIN),_.has(wps,"DevicePIN")&&(info.devpin=wps.DevicePIN),_.has(wps,"ClientPIN")&&(info.clipin=wps.ClientPIN),_.has(currentAP,"SSID")&&(info.ssid=currentAP.SSID),_.has(sec,"ModeEnabled")&&(info.mode=helper.getModeName(sec.ModeEnabled,radio.OperatingStandards,radio.ModeAvailable)),_.has(sec,"EncryptionType")&&(info.encr=sec.EncryptionType),_.has(sec,"PreSharedKey")&&"None"!=sec.ModeEnabled&&(info.psk=sec.PreSharedKey),info}var radio=data.Device.WiFi.Radio[radioInx],ap=data.Device.WiFi.Radio[radioInx].AccessPoint;return{data:function(inx){return ap[inx].WPS},getConnectMethod:function(inx){return ap[inx].WPS.PIN?"PIN":"PBC"},getInfo:function(inx){return info(inx)},connect:function(inx){"PIN"!=ap[inx].WPS.Method&&delete ap[inx].WPS.PIN},reset:function(cb,inx){ap[inx].WPS.Configured=!1,cb&&cb()},warnings:function(inx){var result=[];return radio.Enable||result.push("radioDisable"),_.has(ap[inx],"Broadcast")&&!ap[inx].Broadcast&&result.push("broadcastDisable"),ap[inx].WPS.Check||result.push("unallowableMode"),result},apInfo:function(){return ap}}}var _=(__webpack_require__(5),__webpack_require__(4)),helper=__webpack_require__(106);module.exports=WiFiWPS},function(module,exports,__webpack_require__){"use strict";function WiFiWMM(data,attrs,radioInx){function getRestriction(type,ac){function getRestrict(cwmin,cwmax){return{ECWMin:cwmin,ECWMax:cwmax}}function getAIFSRangeAttrs(wmmAttrs){var range=getAIFSRangeDefault(),minMax=funcs.newConfig.makeMinMaxModel(wmmAttrs);return _.has(minMax.AIFSN,"min")&&(range.min=minMax.AIFSN.min),_.has(minMax.AIFSN,"max")&&(range.max=minMax.AIFSN.max+1),prepareAIFSRange(range)}function getAIFSRangeDefault(){return{min:1,max:16}}function prepareAIFSRange(range){return _.range(range.min,range.max)}function getTxOpMaxMinMaxAttrs(wmmAttrs){var range=getTxOpMaxMinMaxDefault(),minMax=funcs.newConfig.makeMinMaxModel(wmmAttrs);return _.has(minMax.TxOpMax,"min")&&(range.min=minMax.TxOpMax.min),_.has(minMax.TxOpMax,"max")&&(range.max=minMax.TxOpMax.max),range}function getTxOpMaxMinMaxDefault(){return{min:0,max:9999}}function getWMMAttrs(type,ac){function getWMMAPAttrs(){return funcs.fetchBranch(attrs,"Device.WiFi.Radio.WMM.AP.AC.")}function getWMMEPAttrs(){return funcs.fetchBranch(attrs,"Device.WiFi.Radio.WMM.EP.AC.")}if(!attrs)return null;var wmmAttrs="ap"==type?getWMMAPAttrs():getWMMEPAttrs();return wmmAttrs&&wmmAttrs[ac]?wmmAttrs[ac]:null}var wmmAttrs=getWMMAttrs(type,ac);return{ap:{BK:getRestrict(5,10),BE:getRestrict(4,6),VI:getRestrict(3,4),VO:getRestrict(2,3)},ep:{BK:getRestrict(4,10),BE:getRestrict(4,10),VI:getRestrict(3,4),VO:getRestrict(2,3)},AIFSN:wmmAttrs?getAIFSRangeAttrs(wmmAttrs):prepareAIFSRange(getAIFSRangeDefault()),TxOpMax:wmmAttrs?getTxOpMaxMinMaxAttrs(wmmAttrs):getTxOpMaxMinMaxDefault()}}function hasSupportMode(){return _.has(data.settings,"Mode")}var radio=data.Device.WiFi.Radio[radioInx];if(!radio.WMM)return{};var wmm=radio.WMM,ap=wmm.AP[1].AC,ep=wmm.EP[1].AC,data={settings:wmm,ap:ap,ep:ep};return{data:data,get:function(type,inst){return data[type][inst]},getRestriction:getRestriction,hasSupportMode:hasSupportMode}}var funcs=__webpack_require__(5),_=__webpack_require__(4);module.exports=WiFiWMM},function(module,exports,__webpack_require__){"use strict";module.exports={constructor:__webpack_require__(226)}},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function Helper(config,attrs){function list(){return converter.dsysinitToNative.list({config:config,attrs:attrs})}function nativeRule(vlanId){return converter.dsysinitToNative.rule({config:config,attrs:attrs,switchId:vlanId&&vlanId["switch"],vlanId:vlanId&&vlanId.inst})}function dsysinitRule(rule){return converter.nativeToDsysinit.rule({rule:rule,attrs:attrs})}function constraints(){return converter.dsysinitToNative.constraints({attrs:attrs})}function dualLAN(){return converter.dsysinitToNative.dualLAN({config:config,attrs:attrs})}function getRemoveDiff(items){var newConfig=funcs.deepClone(config),errDelete={};_.each(items,function(item){var check=checkLinks(item);if(check.check)return errDelete.conns=check.conns,void(errDelete.pos=check.pos);var vlansPath=paths.switches+item.__switchId+".Vlan.";if(__autoconf.BR2_PACKAGE_ANWEB_REALTEK_MODEM){var vlans=funcs.newConfig.normalize(funcs.fetchBranch(config,vlansPath)),nameVlan=vlans[item.__inst].Name;_.mapObject(vlans,function(vlan,inx){if(vlan.Name==nameVlan){
var vlanPath=""+vlansPath+inx+".";funcs.cutBranch(newConfig,vlanPath);var ethernetsPath=paths["interface"]+"Ethernet.",bridgesPath=paths["interface"]+"Bridge.",ethernets=funcs.newConfig.normalize(funcs.fetchBranch(config,ethernetsPath)),bridges=funcs.newConfig.normalize(funcs.fetchBranch(config,bridgesPath)),inxEthernet=_.findKey(ethernets,{LowerLayer:vlanPath});if(inxEthernet){var ethernetPath=""+ethernetsPath+inxEthernet+".";funcs.cutBranch(newConfig,ethernetPath),_.mapObject(bridges,function(bridge,inxBridge){var members=funcs.newConfig.normalize(bridge.Members);_.mapObject(members,function(member,inxMember){member.Link==ethernetPath&&funcs.cutBranch(newConfig,""+bridgesPath+inxBridge+".Members."+inxMember+".")})})}}})}else if(funcs.cutBranch(newConfig,vlansPath+item.__inst),_.has(item,"__ifaceInst")&&funcs.cutBranch(newConfig,paths["interface"]+"Ethernet."+item.__ifaceInst),_.has(item,"__bridgeInst")&&funcs.cutBranch(newConfig,paths["interface"]+"Bridge."+item.__bridgeInst),"Router"==item.Mode&&check.pos.length&&_.each(check.pos,function(elem){if(funcs.setValue(elem.Position,"",newConfig),~elem.Position.indexOf("Routing")){var position=elem.Position.match(/([a-zA-Z]+\d*\.)+\d+/g,"")[0];funcs.setValue(position+".Enable",!1,newConfig)}if(~elem.Position.indexOf("Zones")){var position=elem.Position.match(/([a-zA-Z]+\d*\.)+\d+\.([a-zA-Z]+\.)+\d+\./g,"")[0];funcs.cutBranch(newConfig,position)}}),item.DualLAN){var dl=dualLAN(),dlDiff=delDualLAN(dl,item,newConfig);dlDiff.errDelete?errDelete.conns=dlDiff.errDelete:newConfig=dlDiff}});var diffConfig=funcs.newConfig.makeDiff(config,newConfig,attrs);if(diffConfig.Device&&diffConfig.Device.Switch&&diffConfig.Device.Switch.Switches&&_.each(diffConfig.Device.Switch.Switches,function(sw){_.each(sw.Vlan,function(vlan){vlan.CreateIface=!1})}),diffConfig.Device&&diffConfig.Device.Firewall&&(diffConfig.Device.Firewall.IPv4.Rules&&_.each(diffConfig.Device.Firewall.IPv4.Rules,function(rule){rule.Source={Zone:""},rule.Dest={IPLinks:{1:{Link:""}}}}),diffConfig.Device.Firewall.IPv6&&diffConfig.Device.Firewall.IPv6.Rules&&_.each(diffConfig.Device.Firewall.IPv6.Rules,function(rule){rule.Source={Zone:""},rule.Dest={IPLinks:{1:{Link:""}}}})),diffConfig.Device&&diffConfig.Device.Network&&diffConfig.Device.Network.Interface&&diffConfig.Device.Network.Interface.Bridge){var bridge=funcs.deepClone(diffConfig.Device.Network.Interface.Bridge);for(var key in bridge)/-/.test(key)&&funcs.setValue(paths["interface"]+"Bridge."+key,{},diffConfig)}return{diffConfig:diffConfig,errDelete:errDelete}}function checkConnections(ifaces){var connections=[];return _.each(ifaces,function(iface){var path=iface.Position.split(".");path.length=path.length-1,path=path.join(".")+".";var conn=funcs.fetchBranch(config,path);conn&&connections.push(conn.Name)}),connections}function checkLinks(item){var vlan=paths.switches+item.__switchId+".Vlan."+item.__inst+".",iface=paths["interface"]+"Ethernet."+item.__ifaceInst+".",bridge=paths["interface"]+"Bridge."+item.__bridgeInst+".",regIface=new RegExp(iface),reList=[new RegExp(vlan),regIface,new RegExp(bridge)],reConn=/Device\.Network\.Connection\./,links=_.filter(config.Links,function(il){return _.some(reList,function(re){return re.test(il.Link)})}),positions=_.filter(links,function(il){return!reConn.test(il.Position)&&!_.some(reList,function(re){return re.test(il.Position)})}),conns=_.filter(links,function(il){return reConn.test(il.Position)}),ifaces=_.filter(config.Links,function(il){return regIface.test(il.Link)});return conns.length?{check:!0,conns:conns,pos:positions,ifaces:ifaces}:{check:!1,pos:positions,ifaces:ifaces}}function getVlanDiff(rule,id){function getNamePort(linkPort){return funcs.fetchBranch(config,linkPort).Alias}function getFilteredVlans(config,vlansPath,vlanId,vlanName){var vlans=funcs.newConfig.normalize(funcs.fetchBranch(config,vlansPath));return _.pick(vlans,function(vlan){return vlanId&&vlanId==vlan.VID||vlanName&&vlanName==vlan.Name})}function getInxVlan(vlans,portLink){return _.findKey(vlans,function(vlan){var ports=funcs.newConfig.normalize(vlan.Ports);return _.some(ports,function(port){return port.Link==portLink})})}function getCountVlans(vlans,rulePorts){var arrVlanPorts=_.map(vlans,function(vlan){return _.values(vlan.Ports)[0].Link}),arrRulePorts=_.map(rulePorts,function(port){return port.Link});return _.union(arrVlanPorts,arrRulePorts).length}var newConfig=funcs.deepClone(config),vlansPath=paths.switches+id["switch"]+".Vlan.";if(__autoconf.BR2_PACKAGE_ANWEB_REALTEK_MODEM){var isNewVlan=!id||!id.inst,vlans={};if(!isNewVlan){var allVlans=funcs.newConfig.normalize(funcs.fetchBranch(config,vlansPath)),vlan=allVlans[id.inst],vlanId=vlan.VID>0?vlan.VID:null,vlanName=_.isNull(vlanId)?vlan.Name:null,portsRule=_.values(rule.Ports),portCurrentVlan=_.values(vlan.Ports)[0],hasPort=_.findWhere(portsRule,{Link:portCurrentVlan.Link});if(!hasPort){var pathVlan=vlansPath+id.inst+".";funcs.cutBranch(newConfig,pathVlan);var ifacesPath=paths["interface"]+"Ethernet.",ifaces=funcs.fetchBranch(config,ifacesPath),inxIface=_.findKey(ifaces,{LowerLayer:pathVlan}),ifacePath=ifacesPath+inxIface+".";funcs.cutBranch(newConfig,ifacePath);var bridgesPath=paths["interface"]+"Bridge.",bridges=funcs.fetchBranch(config,bridgesPath);_.mapObject(bridges,function(bringe,inxBridge){_.mapObject(bringe.Members,function(member,inxMember){member.Link==ifacePath&&funcs.cutBranch(newConfig,""+bridgesPath+inxBridge+".Members."+inxMember+".")})})}vlans=getFilteredVlans(newConfig,vlansPath,vlanId,vlanName)}var countVlans=getCountVlans(vlans,rule.Ports),ruleName=1==countVlans||isNewVlan?rule.Name:getCommonName(rule.Name),hasTagged=!!_.find(rule.Ports,function(port){return port.Tag}),VID=hasTagged?rule.VID:-1;_.each(rule.Ports,function(port,key){var inxVlan=getInxVlan(vlans,port.Link);if(inxVlan){var pathVlan=vlansPath+inxVlan+".",name=1==countVlans?ruleName:ruleName+"_"+getNamePort(port.Link);if(funcs.setValue(pathVlan+"Name",name,newConfig),funcs.setValue(pathVlan+"VID",VID,newConfig),funcs.setValue(pathVlan+"VPR",rule.VPR,newConfig),funcs.setValue(pathVlan+"Ports.1.Tag.",port.Tag,newConfig),support("VIDEnd")){var VIDEnd=hasTagged?rule.VIDEnd:-1;funcs.setValue(pathVlan+"VIDEnd",VIDEnd,newConfig)}}else{var copyRule=angular.copy(rule);copyRule.Ports={new_inst:port},copyRule.VID=VID,countVlans>1&&(copyRule.Name=ruleName+"_"+getNamePort(port.Link)),funcs.setValue(vlansPath+"new_inst"+key,copyRule,newConfig)}})}else{var vlanInst=id&&id.inst?id.inst:"new_inst";funcs.setValue(vlansPath+vlanInst,rule,newConfig)}var diffConfig=funcs.newConfig.makeDiff(config,newConfig,attrs);if(diffConfig.Device&&diffConfig.Device.Switch&&diffConfig.Device.Switch.Switches&&_.each(diffConfig.Device.Switch.Switches,function(sw){_.each(sw.Vlan,function(vlan,inx){0>+inx&&(vlan.CreateIface=!1)})}),autoconf.BR2_PACKAGE_ANWEB_SWITCH)return funcs.newConfig.replaceDiff(diffConfig,function(value,path){return/^Device\.Switch\.Switches\.(\d+)\.Vlan\.([+-\d]+)\.Ports\.([+-\d]+)\.Link/.test(path)&&""==value||/^Device\.Switch\.Switches\.(\d+)\.Vlan\.([+-\d]+)\.VID/.test(path)&&-1==value?void 0:value});var resultDiff=[],diffVlanID={};return diffConfig.Device&&diffConfig.Device.Switch&&diffConfig.Device.Switch.Switches&&_.each(diffConfig.Device.Switch.Switches,function(sw,key){_.each(sw.Vlan,function(vlan,inx){-1==vlan.VID&&(funcs.setValue(paths.switches+key+".Vlan."+inx+".VID",-1,diffVlanID),funcs.cutBranch(diffConfig,paths.switches+key+".Vlan."+inx+".VID"))})}),_.size(diffVlanID)?(resultDiff.push(diffConfig),resultDiff.push(diffVlanID)):resultDiff=diffConfig,resultDiff}function getIfaceDiff(rule,vlanIndexes,ports,backupPorts){function getIfaces(nameVlan){var allIfaces=funcs.newConfig.normalize(funcs.fetchBranch(config,paths["interface"]+"Ethernet."));return _.pick(allIfaces,function(iface){var vlan=funcs.fetchBranch(config,iface.LowerLayer);return getCommonName(vlan.Name)==nameVlan})}function splitDiff(diff){if(!_keys2["default"](diff).length)return diff;if(!diff.Device.Network.Interface.Bridge)return diff;var bridge=funcs.deepClone(diff.Device.Network.Interface.Bridge);for(var key in bridge)if(/-/.test(key))funcs.setValue(paths["interface"]+"Bridge."+key,{},diff);else for(var inst in bridge[key].Members)/-/.test(inst)&&funcs.setValue(paths["interface"]+"Bridge."+key+".Members."+inst,{},diff);return diff}var wanPort=_.find(ports,function(port){return port.IsWan}),linkWanPort=wanPort?wanPort.Link:null,ifacePaths=getInterfacePaths(vlanIndexes,linkWanPort);if(!ifacePaths.length)return{};var iface=rule.Iface,newConfig=funcs.deepClone(config),ifacesPorts=_.filter(ports,function(e){return/wifi|eogre|eoip|usb|l2tpv3/.test(e.Type)&&"excluded"!=e.Vlan.Tag}),taggedPorts=_.filter(ports,function(e){return"port"==e.Type&&"tagged"==e.Vlan.Tag});if(__autoconf.BR2_PACKAGE_ANWEB_REALTEK_MODEM){var ifaces=getIfaces(getCommonName(rule.Vlan.Name));if(_.each(ifaces,function(iface,inxIface){var link=paths["interface"]+"Ethernet."+inxIface+".",vlan=funcs.fetchBranch(config,iface.LowerLayer);funcs.setValue(link,{Enable:!0,Name:vlan.Name},newConfig)}),_.has(iface,"__bridgeId")){var bridgeMemberPath=paths["interface"]+"Bridge."+iface.__bridgeId+".Members.",members=funcs.newConfig.normalize(funcs.fetchBranch(newConfig,bridgeMemberPath));_.each(ifacePaths,function(iface,key){var path=iface.link;iface.isWan||_.findKey(members,{Link:path})||funcs.setValue(bridgeMemberPath+"new_inst_"+key,{Link:path},newConfig)})}else _.each(ifacePaths,function(iface,key){var path=iface.link;iface.isWan||funcs.setValue(paths["interface"]+"Bridge.1.Members.new_inst_"+key,{Link:path},newConfig)});taggedPorts.length&&ifacesPorts.length||!_.has(iface,"__zoneId")||funcs.cutBranch(newConfig,paths.zone+iface.__zoneId)}else{var ifacePath=ifacePaths[0].link;if(funcs.setValue(ifacePath,{Enable:!0,Name:iface.Name},newConfig),ifacesPorts.length||"1"===iface.__bridgeId||rule.DualLAN&&rule.DualLAN.Enable){var bridgeInst=_.has(iface,"__bridgeId")?iface.__bridgeId:"new_inst_1",bridgePath=paths["interface"]+"Bridge."+bridgeInst+".",bridge=getBridge(ifacesPorts,ifacePath);funcs.setValue(bridgePath+"Members",bridge.data,newConfig),funcs.setValue(bridgePath+"Enable",!0,newConfig);var curAllPorts=_.filter(ports,function(e){return"port"==e.Type&&"excluded"!=e.Vlan.Tag}),backupAllPorts=_.filter(backupPorts,function(e){return"port"==e.Type&&"excluded"!=e.Vlan.Tag});_.filter(backupAllPorts,function(e){return!e.IsWan}),(0==curAllPorts.length&&backupAllPorts.length>0||0==backupAllPorts.length&&curAllPorts.length>0)&&funcs.setValue(bridgePath+"Status","Enabling",newConfig);var wanPorts=_.filter(ports,function(e){return"port"==e.Type&&"excluded"!=e.Vlan.Tag&&e.IsWan});if(wanPorts.length>0){var iface=funcs.fetchBranch(config,ifacePath);iface&&funcs.setValue(bridgePath+"MACAddress",iface.MACAddress,newConfig)}else{var backupWanPorts=_.filter(backupAllPorts,function(e){return e.IsWan});backupWanPorts.length>0&&funcs.setValue(bridgePath+"MACAddress","",newConfig)}bridge.links.length&&_.each(bridge.links,function(link){funcs.setValue(link.Position,bridgePath,newConfig)})}if(!(!_.has(iface,"__bridgeId")||ifacesPorts.length||"1"===iface.__bridgeId||rule.DualLAN&&rule.DualLAN.Enable)){var bridgePath=paths["interface"]+"Bridge."+iface.__bridgeId+".",links=getLinks(bridgePath);_.each(links,function(link){funcs.setValue(link.Position,ifacePath,newConfig)}),funcs.cutBranch(newConfig,bridgePath)}}var diff=funcs.newConfig.makeDiff(config,newConfig,attrs);return diff=splitDiff(diff)}function getCommonName(name){var result=name,ports=["LAN1","LAN2","LAN3","LAN4","WAN"];return _.each(ports,function(port){return result=result.replace("_"+port,"")}),result}function getBridge(ifacesPorts,ifacePath){var data={1:{Link:ifacePath}},links=getLinks(ifacePath);return _.each(ifacesPorts,function(port,key){var inst=port.Vlan.Inst?port.Vlan.Inst:"new_inst_"+key,reList=[/Device\.WiFi\./,/Device\.xDSL\./,/Device\.System\.Scheduler\./,/Device\.Network\.Interface\.Bridge\./];if(data[inst]={Link:port.Link},!/USB/.test(port.Link)){var ifaceLinks=_.filter(config.Links,function(link){return link.Link==port.Link&&!_.some(reList,function(re){return re.test(link.Position)})});links=links.concat(ifaceLinks)}}),{data:data,links:links}}function getDualLANDiff(dl,vlanId,lans){function createDualLAN(dl,rule,newConfig){var bridgeId="",bridgeLink="";if(_.has(rule.Iface,"__bridgeId"))bridgeId=rule.Iface.__bridgeId,bridgeLink=paths["interface"]+"Bridge."+bridgeId+".";else{bridgeId="new_bridge";var ifacePath=paths["interface"]+"Ethernet."+rule.Iface.__id+".",bridge=getBridge([],[],ifacePath,bridgeId);bridgeLink=paths["interface"]+"Bridge."+bridgeId+".",funcs.setValue(bridgeLink+"Members",bridge.data,newConfig),funcs.setValue(bridgeLink+"Enable",!0,newConfig),bridge.links.length&&_.each(bridge.links,function(link){funcs.setValue(link.Position,bridgeLink,newConfig)})}funcs.setValue(bridgeLink+"Name","DualLAN",newConfig),funcs.setValue(paths.fw+"Zones.new_zone",getDLZone(bridgeLink,"ipv4"),newConfig),funcs.setValue(paths.fwv6+"Zones.new_zone",getDLZone(bridgeLink,"ipv6"),newConfig);var policy=getPolicy("ipv4");funcs.setValue(paths.fw+"Policy.dl_fw",policy.dl_fw,newConfig),funcs.setValue(paths.fw+"Policy.dl_wan",policy.dl_wan,newConfig),funcs.setValue(paths.fw+"Policy.lan_dl",policy.lan_dl,newConfig),funcs.setValue(paths.fw+"Policy.wan_dl",policy.wan_dl,newConfig),policy.fw_dl&&funcs.setValue(paths.fw+"Policy.fw_dl",policy.fw_dl,newConfig);var policyv6=getPolicy("ipv6");funcs.setValue(paths.fwv6+"Policy.dl_fw",policyv6.dl_fw,newConfig),funcs.setValue(paths.fwv6+"Policy.dl_wan",policyv6.dl_wan,newConfig),funcs.setValue(paths.fwv6+"Policy.lan_dl",policyv6.lan_dl,newConfig),funcs.setValue(paths.fwv6+"Policy.wan_dl",policyv6.wan_dl,newConfig),policyv6.fw_dl&&funcs.setValue(paths.fwv6+"Policy.fw_dl",policyv6.fw_dl,newConfig),funcs.setValue(paths.network+"Group.new_group",getGroup(bridgeLink),newConfig);var net=getNetwork(lans);funcs.setValue(paths.network+"Server.DHCP.new_server",getDHCPServ(bridgeLink,net),newConfig),funcs.setValue(paths.network+"IP.new_ip",getIP(bridgeLink,net),newConfig),config.Device.Network.Group[1]&&config.Device.Network.Group[1].PBREnable&&(funcs.setValue(paths.fw+"Rules.dl_fw",getDLRule("IPv4","Device.Network.Interface.Bridge.1.","new_zone"),newConfig),funcs.setValue(paths.fw+"Rules.lan_fw",getDLRule("IPv4",bridgeLink,"3"),newConfig),funcs.setValue(paths.fwv6+"Rules.dl_fw",getDLRule("IPv6","Device.Network.Interface.Bridge.1.","new_zone"),newConfig),funcs.setValue(paths.fwv6+"Rules.lan_fw",getDLRule("IPv6",bridgeLink,"3"),newConfig))}function getDLZone(bridgeLink,type){return{Type:type,Name:"DualLAN",Interfaces:{1:{Path:bridgeLink}}}}function getDLRule(type,bridgeLink,sourceZoneKey){return{Action:"DROP",Source:{Zone:("IPv4"==type?paths.fw:paths.fwv6)+"Zones."+sourceZoneKey+"."},Dest:{Zone:("IPv4"==type?paths.fw:paths.fwv6)+"Zones.1.",IPLinks:{1:{Link:bridgeLink}}}}}function getPolicy(type){var pathFW="ipv4"==type?paths.fw:paths.fwv6,result={dl_fw:{Policy:"ACCEPT",Source:pathFW+"Zones.new_zone.",Dest:pathFW+"Zones.1."},dl_wan:{Policy:"ACCEPT",Source:pathFW+"Zones.new_zone.",Dest:pathFW+"Zones.2."},lan_dl:{Policy:__autoconf.BR2_PACKAGE_ANWEB_CUSTOM_MTS_29548?"DROP":"ACCEPT",Source:pathFW+"Zones.3.",Dest:pathFW+"Zones.new_zone."},wan_dl:{Policy:"ACCEPT",Source:pathFW+"Zones.2.",Dest:pathFW+"Zones.new_zone."}};return __autoconf.BR2_PACKAGE_ANWEB_CUSTOM_MTS_29548&&(result.fw_dl={Policy:"ACCEPT",Source:pathFW+"Zones.1.",Dest:pathFW+"Zones.new_zone."}),result}function getGroup(bridgeLink){return{LAN:bridgeLink,Name:"DualLAN"}}function getDHCPServ(bridgeLink,net){var result={Enable:!0,IPv6Mode:"Autoconf",Interface:bridgeLink,StartIP:net.replace(/\.0$/,".100"),EndIP:net.replace(/\.0$/,".199")};return __autoconf.BR2_PACKAGE_ANWEB_CUSTOM_MTS_29548&&(result.IPv4Mode="None"),result}function getNetwork(lans){for(var k=1,net="",is_find_net=!1;!is_find_net;)net="192.168."+k++ +".0",_.contains(lans,net)||(is_find_net=!0);return net}function getIP(bridgeLink,net){return{Enable:!0,IPv4Address:{1:{Enable:!0,IPAddress:net.replace(/\.0$/,".1")+"/24"}},LowerLayer:bridgeLink}}var newRule=nativeRule(vlanId),newConfig=funcs.deepClone(config);if(1==dl.Enable&&dl.Enable==newRule.DualLAN.Enable)return{};if(!dl.Enable){var curIface=paths["interface"]+"Ethernet."+newRule.Iface.__id+".";if(dl.vlanIface!=curIface)return{};if(newConfig=delDualLAN(dl,newRule,newConfig),newConfig.errDelete)return newConfig}if(dl.Enable&&!newRule.DualLAN.Enable){if(!_.isEmpty(dl.vlanIface)){var curIface=paths["interface"]+"Ethernet."+newRule.Iface.__id+".";if(dl.vlanIface!=curIface)return{}}createDualLAN(dl,newRule,newConfig)}return funcs.newConfig.makeDiff(config,newConfig,attrs)}function delDualLAN(dl,rule,newConfig){function findDLConns(dl){var dlGroup=funcs.newConfig.normalize(funcs.fetchBranch(config,paths.network+"Group."+dl.group+".WAN."));return _.size(dlGroup)?_.map(dlGroup,function(elem){return{Position:elem.Link+"Interface"}}):[]}var checkConns=findDLConns(dl);if(checkConns.length)return{errDelete:checkConns};var ifacesPorts=_.filter(rule.Ports,function(e){return/wifi|eogre|eoip|usb|l2tpv3/.test(e.Type)&&e.Vlan&&"excluded"!=e.Vlan.Tag});return 0!=ifacesPorts.length&&funcs.setValue(paths["interface"]+"Bridge."+dl.bridgeId+".Name","",newConfig),funcs.cutBranch(newConfig,paths.network+"Group."+dl.group),funcs.cutBranch(newConfig,paths.network+"Server.DHCP."+dl.dhcp),funcs.cutBranch(newConfig,paths.network+"IP."+dl.ip),funcs.cutBranch(newConfig,paths.fw+"Zones."+dl.zone),funcs.cutBranch(newConfig,paths.fwv6+"Zones."+dl.zonev6),_.each(dl.policy,function(elem){funcs.cutBranch(newConfig,paths.fw+"Policy."+elem)}),_.each(dl.policyv6,function(elem){funcs.cutBranch(newConfig,paths.fwv6+"Policy."+elem)}),_.each(dl.fwrules,function(elem){funcs.cutBranch(newConfig,paths.fw+"Rules."+elem)}),_.each(dl.fwrulesv6,function(elem){funcs.cutBranch(newConfig,paths.fwv6+"Rules."+elem)}),newConfig}function getLinks(ifacePath){var reBridge=/Device\.Network\.Interface\.Bridge\./;return _.filter(config.Links,function(link){return link.Link==ifacePath&&!reBridge.test(link.Position)})}function getInterfacePaths(vlanIndexes,linkWanPort){function getVlanPaths(indexes){var result=[];return _.each(indexes,function(index){index&&result.push(paths.switches+index["switch"]+".Vlan."+index.inst+".")}),result}function isWan(iface){var vlan=funcs.fetchBranch(config,iface.LowerLayer);return linkWanPort&&_.some(vlan.Ports,function(port){return port.Link==linkWanPort})}var ethernetPath=paths["interface"]+"Ethernet.",ethernetIfaces=funcs.newConfig.normalize(funcs.fetchBranch(config,ethernetPath)),vlanPaths=getVlanPaths(vlanIndexes),ifaceInsts=[];return _.each(vlanPaths,function(vp,inst){var ifaceKey=_.findKey(ethernetIfaces,function(ei){return ei.LowerLayer==vp});ifaceKey&&ifaceInsts.push(ifaceKey)}),_.map(ifaceInsts,function(inst){return{link:ethernetPath+inst+".",isWan:isWan(ethernetIfaces[inst])}})}function getBusyUntaggedPorts(vlanId,bridgeInst){var result=[],switches=funcs.fetchBranch(config,paths.switches);_.each(switches,function(sw){_.each(sw.Vlan,function(obj,curInst){_.isObject(obj)&&(vlanId&&vlanId===curInst||_.each(obj.Ports,function(port){_.isObject(port)&&(port.Tag||result.push(port.Link))}))})});var bridges=funcs.fetchBranch(config,paths["interface"]+"Bridge."),usbConns=funcs.newConfig.normalize(funcs.fetchBranch(config,paths.usb));return _.each(bridges,function(obj,curInst){_.isObject(obj)&&(bridgeInst&&bridgeInst==curInst||_.each(obj.Members,function(iface){if(_.isObject(iface)){var reList=[/\.WiFi\./,/\.EoGRE\./,/\.EoIP\./,/\.Vconfig\./,/\.USB\./,/\.Cellular\./,/\.L2TPv3\./];_.some(reList,function(re){return re.test(iface.Link)})&&(-1==iface.Link.indexOf("Cellular")?result.push(iface.Link):_.each(usbConns,function(elem,key){elem.Interface==iface.Link&&result.push(paths.usb+key+".")}))}}))}),result.sort()}function checkUnique(value,section,prop,switchId,inst){if("Vlan"==section)var input=funcs.fetchBranch(config,paths.switches+switchId+".Vlan.");if("Iface"==section)var input=funcs.fetchBranch(config,paths["interface"]+"Ethernet.");return inst&&(input=_.omit(input,inst)),_.every(input,function(elem){return!elem[prop]||elem[prop]!==value})}function checkPorts(ports){return _.some(ports,function(elem){var tag=elem.Vlan.Tag;return"tagged"==tag||"untagged"==tag||"included"==tag})}function checkWanPorts(vlanId,ports,backupPorts,iface){function getIfacePath(iface,vlanId){if(_.has(iface,"__bridgeId"))return paths["interface"]+"Bridge."+iface.__bridgeId+".";if(vlanId.inst){var iface=getInterfacePaths([vlanId]);return iface.length?iface[0].link:null}return null}var wans=funcs.newConfig.normalize(funcs.fetchBranch(config,paths.connection)),ifacePath=getIfacePath(iface,vlanId),result={check:!0,errNames:[],wanPort:[]};if(!vlanId||!ifacePath)return result;var wanPorts=_.filter(ports,function(e){return"port"==e.Type&&e.IsWan&&"excluded"!=e.Vlan.Tag}),wanIfaces=[];return _.each(wans,function(wan){wan=funcs.newConfig.normalize(wan),_.each(wan,function(elem){elem.Interface!=ifacePath&&elem.BaseInterface!=ifacePath||wanIfaces.push(elem.Name)})}),!wanPorts.length&&wanIfaces.length&&(result.check=!1,result.errNames=wanIfaces,result.wanPort=_.pluck(_.filter(backupPorts,function(e){return"port"==e.Type&&e.IsWan&&"excluded"!=e.Vlan.Tag}),"Name")),result}function support(param){var vlan=funcs.fetchBranch(attrs,"Device.Switch.Switches.#template.Vlan.#template.");return param in vlan}var paths={network:"Device.Network.","interface":"Device.Network.Interface.",switches:"Device.Switch.Switches.",ports:"Device.Switch.Ports.",connection:"Device.Network.Connection.",zone:"Device.Firewall.IPv4.Zones.2.Interfaces.",fw:"Device.Firewall.IPv4.",fwv6:"Device.Firewall.IPv6.",usb:"Device.USB.Connection."},__autoconf="undefined"!=typeof autoconf?autoconf:{};return{list:list,nativeRule:nativeRule,dsysinitRule:dsysinitRule,constraints:constraints,dualLAN:dualLAN,getRemoveDiff:getRemoveDiff,getVlanDiff:getVlanDiff,getIfaceDiff:getIfaceDiff,getDualLANDiff:getDualLANDiff,getBusyUntaggedPorts:getBusyUntaggedPorts,checkUnique:checkUnique,checkPorts:checkPorts,checkWanPorts:checkWanPorts,checkConnections:checkConnections,support:support}}var _keys=__webpack_require__(78),_keys2=_interopRequireDefault(_keys),_=__webpack_require__(4),funcs=__webpack_require__(5),converter=__webpack_require__(227);module.exports=Helper},function(module,exports,__webpack_require__){"use strict";!function(){function dsysinitToNative(){function list(input){function makePorts(ports,bridge,config,type){var result=[];if(_.each(ports,function(port,inst){_.isObject(port)&&("tagged"!=type||port.Tag)&&("untagged"==type&&port.Tag||result.push(__getPortName(port.Link,config)))}),bridge&&!__autoconf.BR2_PACKAGE_ANWEB_REALTEK_MODEM){var members=funcs.newConfig.normalize(bridge.data.Members);_.each(members,function(iface){if("untagged"==type&&/WiFi|EoGRE|EoIP|USB|Cellular|L2TPv3/.test(iface.Link)){if(/WiFi/.test(iface.Link)){var ifaceConfig=funcs.fetchBranch(config,iface.Link);if("ap"!=ifaceConfig.Type)return}var ifaceType="";/WiFi/.test(iface.Link)&&(ifaceType="wifi"),/EoGRE/.test(iface.Link)&&(ifaceType="eogre"),/EoIP/.test(iface.Link)&&(ifaceType="eoip"),/USB|Cellular/.test(iface.Link)&&(ifaceType="usb"),/L2TPv3/.test(iface.Link)&&(ifaceType="l2tpv3"),result.push(__getIfaceName(iface.Link,config,ifaceType))}/Vconfig/.test(iface.Link)&&"tagged"==type&&result.push(__getIfaceName(iface.Link,config,"eogre"))})}var ordered=_.map(config.Device.Switch.Ports.order,function(i){return funcs.fetchBranch(config,"Device.Switch.Ports."+i+".Alias")});return _.sortBy(result,function(n){return ordered.indexOf(n)}).join(", ")}var pattern=T({"->":["$config","$attrs","$vlanAttrs","$constraints","$raw","$bridge","Ports"],$input:":external",$config:["$input",function(i){return i.config}],$attrs:["$input",function(i){return i.attrs}],$vlanAttrs:["$attrs",function(a){return funcs.fetchBranch(a,"Device.Switch.Switches.#template.Vlan.#template.")}],Mode:["$config",function(c){return funcs.fetchBranch(c,"Device.DeviceInfo.DeviceMode")}],$constraints:["$input",function(i){return constraints(i)}],$switches:["$config",function(c){return funcs.newConfig.normalize(c.Device.Switch.Switches)}],"{$switch, $indexSw}":["$switches",function(s){return s}],$indexSwitch:["$indexSw",function(i){return i}],$vlanPath:["$indexSwitch",function(i){return"Device.Switch.Switches."+i+".Vlan."}],$vlan:["$config","$vlanPath",function(c,vp){return funcs.newConfig.normalize(funcs.fetchBranch(c,vp))}],"{$raw, $i}":["$vlan",function(v){return v}],__inst:["$i",function(i){return i}],Enable:["$raw",function(r){return r.Enable}],Status:["$raw",function(r){return r.Status}],Name:["$raw",function(r){return r.Name}],VID:["$raw","$constraints",function(r,cs){return r.VID==cs.VID.off?"-":r.VID.toString()}],VIDEnd:["$raw","$constraints","$vlanAttrs",function(r,cs,va){return prepareVidEnd(r,va,cs)}],$iface:["$config","$vlanPath","$i",function(c,path,inst){return findIfaceByVID(c,path,inst)}],$bridge:["$config","$iface",function(c,iface){return iface&&iface.data&&iface.data.Bridged?getBridge(c,iface):null}],__ifaceInst:["$iface",function(i){return i?i.id:void 0}],__bridgeInst:["$bridge",function(br){return br?br.id:void 0}],__switchId:["$indexSwitch",function(i){return i}],Ports:{"->":!0,$raw:["$parent",function(p){return p.$raw}],$config:["$parent",function(p){return p.$config}],$bridge:["$parent",function(p){return p.$bridge}],Tagged:["$config","$raw","$bridge",function(c,rw,bridge){return makePorts(rw.Ports,bridge,c,"tagged")}],Untagged:["$config","$raw","$bridge",function(c,rw,bridge){return makePorts(rw.Ports,bridge,c,"untagged")}]},DualLAN:["$bridge",function(b){return b?"DualLAN"==b.data.Name:void 0}]});return pattern.build({$input:input})}function rule(input){function getRule(config,pathVlan,inxVlan){var vlans=funcs.newConfig.normalize(funcs.fetchBranch(config,pathVlan));return vlans[inxVlan]}function getDefaultRule(attrs){var vlan=funcs.fetchBranch(attrs,"Device.Switch.Switches.#template.Vlan.#template.");return{Enable:!0,Name:"",VID:null,VIDEnd:"VIDEnd"in vlan?vlan.VIDEnd["default"]:void 0,CreateIface:!1,Ports:{},VPR:"VPR"in vlan?vlan.VPR["default"]:void 0}}function getSwitchId(link){var match=link?link.match(/\d+/):null;return _.isNull(match)?match:match[0]}function findVlanPortInst(ports,portLink){return _.findKey(ports,function(obj){return!!_.isObject(obj)&&obj.Link==portLink})}function getVlanTag(ports,inst){var obj=ports[inst];return obj?obj.Tag?"tagged":"untagged":"excluded"}function isUseInterface(config,ifaceId){function checkUse(obj,link){return _.some(obj,function(item){return _.isObject(item)?checkUse(item,link):item==link})}if(!ifaceId)return!1;var ifacePath="Device.Network.Interface.Ethernet."+ifaceId+".",conns=funcs.fetchBranch(config,"Device.Network.Connection."),ifases=funcs.fetchBranch(config,"Device.Network.Interface."),isUse=checkUse(conns,ifacePath);return!!isUse||(isUse=checkUse(ifases,ifacePath))}function getAllPorts(config,curPorts,bridge){function getIfaces(type){function hasConn(path){var conns=funcs.newConfig.normalize(funcs.fetchBranch(input.config,connPath));for(var type in conns)for(var inst in funcs.newConfig.normalize(conns[type])){var elem=conns[type][inst];if(elem.BaseInterface==path||elem.Interface==path)return!0}return!1}var ifaceList=funcs.fetchBranch(config,ifacePath);if(!_.has(ifaceList,type))return[];var ifaces=funcs.newConfig.normalize(ifaceList[type]);if("EoGRE"==type||"EoIP"==type)var vconfigIfaces=funcs.newConfig.normalize(ifaceList.Vconfig);var result=[];return _.each(ifaces,function(iface,inst){var name="",band=void 0;if("EoGRE"==type){var vconfigEogre=_.findKey(vconfigIfaces,{LowerLayer:ifacePath+type+"."+inst+"."});name=iface.Name||iface.Ifname}if("EoIP"==type){var vconfigEoip=_.findKey(vconfigIfaces,{LowerLayer:ifacePath+type+"."+inst+"."});name=iface.Name||iface.Ifname}if("WiFi"==type){if("ap"!=iface.Type)return;name=__getIfaceName(ifacePath+"WiFi."+inst+".",config,"wifi"),band=iface.Support24GHz?2.4:5}if("L2TPv3"!=type||(name=iface.Name||iface.Ifname,!hasConn(ifacePath+"L2TPv3."+inst+"."))){var searchPath=ifacePath+("EoGRE"==type&&vconfigEogre?"Vconfig."+vconfigEogre:"EoIP"==type&&vconfigEoip?"Vconfig."+vconfigEoip:type+"."+inst)+".",vlanInst=findVlanInst(bridge,searchPath);result.push({Name:name,Link:searchPath,isTag:"EoGRE"==type?!_.isEmpty(vconfigEogre):"EoIP"==type?!_.isEmpty(vconfigEoip):void 0,TagID:"EoGRE"==type&&vconfigEogre?vconfigIfaces[vconfigEogre].VID:"EoIP"==type&&vconfigEoip?vconfigIfaces[vconfigEoip].VID:void 0,Inst:inst,Type:type.toLowerCase(),Vlan:{Inst:vlanInst,Tag:vlanInst?"EoGRE"==type||"EoIP"==type?"included":"untagged":"excluded"},IsWan:!1,Band:band})}}),result}function getUSB(){var usbConns=funcs.newConfig.normalize(funcs.fetchBranch(config,usbPath));if(!usbConns)return[];var result=[];return _.each(usbConns,function(conn,inst){if(conn.InterfaceOnly){var searchUSBPath=usbPath+inst+".",searchCellPath=conn.Interface,vlanInstUSB=findVlanInst(bridge,searchUSBPath),vlanInstCell=findVlanInst(bridge,searchCellPath);result.push({Name:conn.Name||conn.Ifname,Link:searchUSBPath,Inst:inst,Type:"usb",Vlan:{Inst:vlanInstUSB?vlanInstUSB:vlanInstCell,Tag:vlanInstUSB||vlanInstCell?"untagged":"excluded"},IsWan:!1})}}),result}var portsPath="Device.Switch.Ports.",ports=funcs.fetchBranch(config,portsPath),result=_.map(ports.order,function(port){var vlanInst=findVlanPortInst(curPorts,portsPath+port+".");return{Name:ports[port].Alias||"port"+port,Link:portsPath+port+".",Inst:port,Type:"port",Vlan:{Inst:vlanInst,Tag:getVlanTag(curPorts,vlanInst)},IsWan:ports[port].Upstream,SwitchLink:ports[port].Switch}});return __autoconf.BR2_PACKAGE_ANWEB_REALTEK_MODEM||(result=result.concat(getIfaces("WiFi")),result=result.concat(getIfaces("EoGRE")),result=result.concat(getIfaces("EoIP")),__autoconf.BR2_PACKAGE_ANWEB_USB_MODEM&&(result=result.concat(getUSB())),__autoconf.BR2_PACKAGE_ANWEB_VPN_L2TPV3&&(result=result.concat(getIfaces("L2TPv3")))),result}function findVlanInst(bridge,link){return bridge?_.findKey(bridge.data.Members,function(obj){return obj.Link==link}):null}var pattern=T({"->":["$config","$attrs","$vlanAttrs","$swId","$vlanPath","$vlanInst","$rule","$curIface","$bridge","$zone","Vlan","Iface","Ports","DualLAN"],$input:":external",$config:["$input",function(i){return i.config}],$attrs:["$input",function(i){return i.attrs}],$vlanAttrs:["$attrs",function(a){return funcs.fetchBranch(a,"Device.Switch.Switches.#template.Vlan.#template.")}],$swId:["$input",function(i){return i.switchId||"1"}],$vlanPath:["$swId",function(switchId){return"Device.Switch.Switches."+switchId+".Vlan."}],$vlanInst:["$input",function(i){return i.vlanId}],$curIface:["$config","$vlanPath","$vlanInst",function(c,vp,vi){return findIfaceByVID(c,vp,vi)}],$bridge:["$config","$curIface",function(c,iface){return iface&&iface.data&&iface.data.Bridged?getBridge(c,iface):null}],$zone:["$config","$bridge",function(c,br){return br?getZone(c,br):void 0}],$rule:["$config","$vlanPath","$vlanInst","$attrs",function(c,vp,vi,a){return vi?getRule(c,vp,vi):getDefaultRule(a)}],$constraints:["$input",function(i){return constraints(i)}],Mode:["$config",function(c){return funcs.fetchBranch(c,"Device.DeviceInfo.DeviceMode")}],Vlan:{"->":!0,$rule:["$parent",function(p){return p.$rule}],$constraints:["$parent",function(p){return p.$constraints}],$vlanAttrs:["$parent",function(p){return p.$vlanAttrs}],Enable:["$rule",function(r){return r.Enable}],VID:["$rule","$constraints",function(r,cs){return r.VID==cs.VID.off?null:r.VID}],VIDEnd:["$rule","$constraints","$vlanAttrs",function(r,cs,va){return prepareVidEnd(r,va,cs)}],Name:["$rule",function(r){return r.Name}],VPR:["$rule",function(r){return r.VPR}],__switchId:["$parent",function(p){return p.$swId}]},Iface:{"->":["__id","Use"],$rule:["$parent",function(p){return p.$rule}],$config:["$parent",function(p){return p.$config}],$curIface:["$parent",function(p){return p.$curIface}],
$bridge:["$parent",function(p){return p.$bridge}],$zone:["$parent",function(p){return p.$zone}],__id:["$curIface",function(i){return i?i.id:null}],CreateIface:["$rule",function(r){return r.CreateIface}],Name:["$curIface",function(i){return i&&i.data?i.data.Name:""}],Use:["$config","__id",function(c,i){return isUseInterface(c,i)}],__bridgeId:["$bridge",function(br){return br?br.id:void 0}],__zoneId:["$zone*",function(z){return z.id}]},Ports:{"->":["$inst","Vlan"],$config:["$parent",function(p){return p.$config}],$rule:["$parent",function(p){return p.$rule}],$bridge:["$parent",function(p){return p.$bridge}],"{$portsAll}":["$config","$rule","$bridge",function(c,r,br){return getAllPorts(c,r.Ports,br)}],Name:["$portsAll",function(pa){return pa.Name}],Link:["$portsAll",function(pa){return pa.Link}],isTag:["$portsAll",function(pa){return pa.isTag}],TagID:["$portsAll",function(pa){return pa.TagID}],Inst:["$portsAll",function(pa){return pa.Inst}],Type:["$portsAll",function(pa){return pa.Type}],Vlan:["$portsAll",function(pa){return pa.Vlan}],IsWan:["$portsAll",function(pa){return pa.IsWan}],Band:["$portsAll",function(pa){return pa.Band}],__switchId:["$portsAll",function(pa){return getSwitchId(pa.SwitchLink)}]},DualLAN:{"->":["?"],"?":["$parent",function(p){return p.$attrs.SupportDualLAN}],$dualLAN:["$parent",function(p){return p.$bridge?"DualLAN"==p.$bridge.data.Name:void 0}],Enable:["$dualLAN",function(dl){return!!dl}]}});return pattern.build({$input:input})}function prepareVidEnd(vlan,vlanAttrs,constraints){return vlanAttrs.VIDEnd?"number"!=typeof vlan.VIDEnd||vlan.VIDEnd==constraints.VIDEnd.off?"-":r.VIDEnd.toString():void 0}function findIfaceByVID(config,vlanPath,vlanInst){if(!vlanInst)return null;var interfaces=funcs.fetchBranch(config,"Device.Network.Interface.Ethernet."),ifaceId=_.findKey(interfaces,function(elem){var vlanLink=vlanPath+vlanInst+".";return _.isObject(elem)&&elem.LowerLayer==vlanLink});return{data:interfaces[ifaceId],id:ifaceId}}function constraints(input){var pattern=T({"->":["$vlanAttrs","VID","VIDEnd"],$input:":external",$attrs:["$input",function(i){return i.attrs}],$vlanAttrs:["$attrs",function(a){return funcs.fetchBranch(a,"Device.Switch.Switches.#template.Vlan.#template.")}],VID:{"->":!0,$vlanAttrs:["$parent",function(p){return p.$vlanAttrs}],"default":["$vlanAttrs",function(va){return va.VID["default"]}],off:["$vlanAttrs",function(va){return va.VID.offValue}],min:["$vlanAttrs",function(va){return va.VID.minInclusive}],max:["$vlanAttrs",function(va){return va.VID.maxInclusive}]},VIDEnd:{"->":["$vlanAttrs","?","default","off","min","max"],"?":["$vlanAttrs",function(va){return!!va.VIDEnd}],$vlanAttrs:["$parent",function(p){return p.$vlanAttrs}],"default":["$vlanAttrs",function(va){return va.VIDEnd["default"]}],off:["$vlanAttrs",function(va){return va.VIDEnd.offValue}],min:["$vlanAttrs",function(va){return va.VIDEnd.minInclusive}],max:["$vlanAttrs",function(va){return va.VIDEnd.maxInclusive}]}});return pattern.build({$input:input})}function dualLAN(input){var pattern=T({"->":!0,$input:":external",$config:["$input",function(i){return i.config}],$attrs:["$input",function(i){return i.attrs}],$dualLAN:["$config",function(c){return findDualLAN(c)}],Enable:["$dualLAN",function(dl){return 0!=_.size(dl)}],bridgeId:["$dualLAN",function(dl){return dl.id}],vlanIface:["$dualLAN",function(dl){return dl.vlanIface}],group:["$dualLAN",function(dl){return dl.group}],conn:["$dualLAN",function(dl){return dl.conn}],dhcp:["$dualLAN",function(dl){return dl.dhcp}],ip:["$dualLAN",function(dl){return dl.ip}],zone:["$dualLAN",function(dl){return dl.zone}],policy:["$dualLAN",function(dl){return dl.policy}],zonev6:["$dualLAN",function(dl){return dl.zonev6}],policyv6:["$dualLAN",function(dl){return dl.policyv6}],fwrules:["$dualLAN",function(dl){return dl.fwrules}],fwrulesv6:["$dualLAN",function(dl){return dl.fwrulesv6}]});return pattern.build({$input:input})}function __getPortName(link,config){var result=funcs.fetchBranch(config,link+".Alias");if(!result){var arrLink=link.split("."),portId=arrLink[arrLink.length-2];result="port"+portId}return result}function __getIfaceName(link,config,type){if("wifi"==type){var name="",radio=funcs.fetchBranch(config,wifiPath);return _.each(radio,function(elem){_.each(funcs.newConfig.normalize(elem.AccessPoint),function(ap){if(ap.Interface==link){var profile=funcs.fetchBranch(config,ap.Profile);name=profile.SSID}})}),name}var result=funcs.fetchBranch(config,link);return result.Name||result.Ifname}function getBridge(config,iface){var bridges=funcs.newConfig.normalize(funcs.fetchBranch(config,ifacePath+"Bridge.")),ifaceLink=ifacePath+"Ethernet."+iface.id+".",bridgeId=_.findKey(bridges,function(elem){return _.some(elem.Members,function(member){return member.Link==ifaceLink})});return{data:bridges[bridgeId],id:bridgeId}}function getZone(config,bridge){var IfacesList=funcs.newConfig.normalize(funcs.fetchBranch(config,zonesIfaces)),ifaceLink=ifacePath+"Bridge."+bridge.id+".",zoneId=_.findKey(IfacesList,function(elem){return elem.Path==ifaceLink});return{id:zoneId}}function findDualLAN(config){function getPolicy(type,fw,dualLanZoneKey){var policy={},path="ipv4"==type?fwPath:fwv6Path,dualZonePath=path+"Zones."+dualLanZoneKey+".";return _.each(funcs.newConfig.normalize(fw.Policy),function(elem,key){elem.Source==dualZonePath&&(elem.Dest==path+"Zones.1."&&(policy.DLFW=key),elem.Dest==path+"Zones.2."&&(policy.DLWAN=key)),elem.Dest==dualZonePath&&(elem.Source==path+"Zones.1."&&(policy.FWDL=key),elem.Source==path+"Zones.3."&&(policy.LANDL=key),elem.Source==path+"Zones.2."&&(policy.WANDL=key))}),policy}function getRules(type,fw,dualLanZoneKey,bridgeLink){var rules={},path="ipv4"==type?fwPath:fwv6Path,dualZonePath=path+"Zones."+dualLanZoneKey+".",lanZonePath=path+"Zones.3.",fwZonePath=path+"Zones.1.",lanPath="Device.Network.Interface.Bridge.1.";return _.each(funcs.newConfig.normalize(fw.Rules),function(elem,key){"DROP"==elem.Action&&elem.Dest.Zone==fwZonePath&&_.size(elem.Dest.IPLinks)>1&&elem.Dest.IPLinks[1]&&(elem.Source.Zone==dualZonePath&&elem.Dest.IPLinks[1].Link==lanPath&&(rules.dlToFw=key),elem.Source.Zone==lanZonePath&&elem.Dest.IPLinks[1].Link==bridgeLink&&(rules.lanToFw=key))}),rules}var bridges=funcs.newConfig.normalize(funcs.fetchBranch(config,ifacePath+"Bridge.")),dualLanKey=_.findKey(bridges,{Name:"DualLAN"});if(!dualLanKey||-1==dualLanKey)return{};var dualLANBridge=bridges[dualLanKey],ifaceLink=dualLANBridge.Members[1].Link,bridgeLink=ifacePath+"Bridge."+dualLanKey+".",groups=funcs.newConfig.normalize(funcs.fetchBranch(config,groupPath)),dhcpServ=funcs.newConfig.normalize(funcs.fetchBranch(config,dhcpPath)),ipParam=funcs.newConfig.normalize(funcs.fetchBranch(config,ipPath)),fw=funcs.fetchBranch(config,fwPath),fwv6=funcs.fetchBranch(config,fwv6Path),dualLANGroup=_.findKey(groups,{LAN:bridgeLink}),groupOrder=groups[dualLANGroup].WAN.order,daulLANDhcpKey=_.findKey(dhcpServ,{Interface:bridgeLink}),dualLANIP=_.findKey(ipParam,{LowerLayer:bridgeLink}),dualLanZoneKey=_.findKey(fw.Zones,{Type:"ipv4",Name:"DualLAN"}),dualLanZoneKeyv6=_.findKey(fwv6.Zones,{Type:"ipv6",Name:"DualLAN"}),dualLanPolicy=getPolicy("ipv4",fw,dualLanZoneKey),dualLanPolicyv6=getPolicy("ipv6",fwv6,dualLanZoneKeyv6),dualLanRules=getRules("ipv4",fw,dualLanZoneKey,bridgeLink),dualLanRulesv6=getRules("ipv6",fwv6,dualLanZoneKeyv6,bridgeLink);return{id:dualLanKey,vlanIface:ifaceLink,group:dualLANGroup,dhcp:daulLANDhcpKey,ip:dualLANIP,zone:dualLanZoneKey,zonev6:dualLanZoneKeyv6,policy:dualLanPolicy,policyv6:dualLanPolicyv6,fwrules:dualLanRules,fwrulesv6:dualLanRulesv6,conn:groupOrder[0]?groups[dualLANGroup].WAN[groupOrder[0]].Link:""}}var __autoconf="undefined"!=typeof autoconf?autoconf:{};return{list:list,rule:rule,constraints:constraints,dualLAN:dualLAN}}function nativeToDsysinit(){function rule(input){function prepareVid(rule,vlanAttrs){var vid=rule.Vlan.VID,hasTagged=_.find(rule.Ports,function(e){return"tagged"==e.Vlan.Tag});return hasTagged?vid||vlanAttrs.VID["default"]:vlanAttrs.VID["default"]}function prepareVidEnd(rule,vlanAttrs){if(vlanAttrs.VIDEnd){var vid=rule.Vlan.VIDEnd;return vid||vlanAttrs.VIDEnd["default"]}}function getVPR(rule){return _.isUndefined(rule.Vlan.VPR)?void 0:isTagged(rule)?rule.Vlan.VPR:0}function isTagged(rule){return _.some(rule.Ports,function(elem){var tag=elem.Vlan.Tag;return"tagged"==tag})}var pattern=T({"->":["$rule","Ports"],$input:":external",$rule:["$input",function(i){return i.rule}],$attrs:["$input",function(i){return i.attrs}],$vlanAttrs:["$attrs",function(a){return funcs.fetchBranch(a,"Device.Switch.Switches.#template.Vlan.#template.")}],Enable:["$rule",function(r){return r.Vlan.Enable}],Name:["$rule",function(r){return r.Vlan.Name}],VID:["$rule","$vlanAttrs",function(r,va){return prepareVid(r,va)}],VIDEnd:["$rule","$vlanAttrs",function(r,va){return prepareVidEnd(r,va)}],CreateIface:["$rule",function(r){return r.Iface.CreateIface}],Ports:{"->":!0,$ports:["$parent",function(p){return _.filter(p.$rule.Ports,function(e){return"port"==e.Type})}],"{$raw,$i}":["$ports*",function(ps){return _.filter(ps,function(p){return"excluded"!=p.Vlan.Tag})}],":":["$raw*","$i*",function(r,i){return r.Vlan.Inst||"new_inst_"+i}],Link:["$raw*",function(r){return r.Link}],Tag:["$raw*",function(r){return"tagged"==r.Vlan.Tag}]},VPR:["$rule",function(r){return getVPR(r)}]});return pattern.build({$input:input})}return{rule:rule}}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),ifacePath="Device.Network.Interface.",zonesIfaces="Device.Firewall.IPv4.Zones.2.Interfaces.",groupPath="Device.Network.Group.",dhcpPath="Device.Network.Server.DHCP.",ipPath="Device.Network.IP.",fwPath="Device.Firewall.IPv4.",fwv6Path="Device.Firewall.IPv6.",wifiPath="Device.WiFi.Radio.",usbPath="Device.USB.Connection.",connPath="Device.Network.Connection.";module.exports={dsysinitToNative:dsysinitToNative(),nativeToDsysinit:nativeToDsysinit()}}()},function(module,exports,__webpack_require__){"use strict";module.exports={Helper:__webpack_require__(229),constants:__webpack_require__(230),converter:__webpack_require__(232)}},function(module,exports,__webpack_require__){"use strict";function IPsec(config,attrs,oldConfig){function getTunnels(){function getIfaceName(iface){var result;return _.each(attrs,function(elem){elem.iface==iface&&(result=elem.name)}),result?result:iface}return _.chain(ipsec.tunnels).map(function(tunnel,index){var obj={};return obj.__index=index,obj.peer=""==tunnel.peer?"anonymous":tunnel.peer,obj.alg=tunnel.alg.toUpperCase(),obj.hash=tunnel.hash.toUpperCase(),obj.iface=getIfaceName(tunnel.iface),obj.anonymous=tunnel.anonymous,obj.isL2TP=tunnel.isL2TP,obj.__id=tunnel.__index,obj}).value()}function getSettings(){return{enabled:funcs.deepClone(ipsec.enabled),logLevel:funcs.deepClone(ipsec.logLevel),debug:!!_.has(ipsec,"debug")&&funcs.deepClone(ipsec.debug)}}function getTunnelsStatus(){function formState(obj,state){switch(state){case 1:obj.state="pending",obj.stateText="larval";break;case 2:obj.state="on",obj.stateText="established";break;case 3:obj.state="pending",obj.stateText="dying";break;case 4:obj.state="off",obj.stateText="dead"}}var result=[];return _.each(ipsec.tunnels,function(tunnel){if(tunnel.status)_.each(tunnel.status,function(rule){var obj={};obj.peer=""==tunnel.peer?"anonymous":tunnel.peer,obj.ip={left:rule.left_ip,right:rule.right_ip},obj.packet={"in":rule.packets_in,out:rule.packets_out},obj.rate={rx:funcs.lookSize(rule.bytes_in),tx:funcs.lookSize(rule.bytes_out)},obj.time=rule.time,formState(obj,rule.state),result.push(obj)});else{var obj={};obj.peer=""==tunnel.peer?"anonymous":tunnel.peer,obj.CHILD=tunnel.CHILD,obj.IKE=tunnel.IKE,obj.state=tunnel.state,obj.stateText=tunnel.stateText,result.push(obj)}}),result}function setEnabled(enabled){return ipsec.enabled=enabled,ipsec}function setLogLevel(logLevel){return ipsec.logLevel=logLevel,ipsec}function setDebug(debug){return ipsec.debug=debug,ipsec}function getDefaultTemplate(isCpe){if(isCpe){var defaultTemplate=funcs.fetchBranch(attrs,paths.ipsec.connections+"#template.");return{anonymous:!1,peer:defaultTemplate.Right["default"],enable:!0,auth:defaultTemplate.Auth["default"],leftType:"group",key:defaultTemplate.Key["default"],leftGroup:defaultTemplate.Left["default"],leftIface:defaultTemplate.Left["default"],leftAddr:defaultTemplate.Left["default"],modeIKE:defaultTemplate.IKE.Crypto.Mode["default"],sizeKeyIKE:defaultTemplate.IKE.Crypto.SizeKey["default"],alg:defaultTemplate.IKE.Crypto.Type["default"],ikeHashMode:defaultTemplate.IKE.Hash.Mode["default"],ikeHashSKey:defaultTemplate.IKE.Hash.SizeKey["default"],aggressive:defaultTemplate.Aggressive?defaultTemplate.Aggressive["default"]:void 0,hash:defaultTemplate.IKE.Hash.Type["default"],dhgroup:defaultTemplate.IKE.DHGroup["default"],modeESP:defaultTemplate.ESP.Crypto.Mode["default"],sizeKeyESP:defaultTemplate.ESP.Crypto.SizeKey["default"],alg_ph2:defaultTemplate.ESP.Crypto.Type["default"],espHashMode:defaultTemplate.ESP.Hash.Mode["default"],espHashSKey:defaultTemplate.ESP.Hash.SizeKey["default"],auth_alg:defaultTemplate.ESP.Hash.Type["default"],enable_pfs:!0,dhgroup2:defaultTemplate.ESP.DHGroup["default"],remote_lifetime:defaultTemplate.LifeTimeIKE["default"],sainfo_lifetime:defaultTemplate.LifeTime["default"],nat_t:defaultTemplate.NATTraversal["default"],peer_type:getFilterList("my_ident")[0].value,my_ident_value:defaultTemplate.Name["default"],type:defaultTemplate.Type["default"],version:defaultTemplate.Version["default"],enableDPD:defaultTemplate.DPD["default"],dpd_delay:defaultTemplate.DPDDelay["default"],dpd_timeout:defaultTemplate.DPDTimeOut["default"],tcpmss:2,nets:[],delete_nets:[],devMode:ipsec.devMode,router_ipsec:!0}}return{anonymous:!1,peer:"",my_ident:getFilterList("my_ident")[0].value,my_ident_value:"",key:"",iface:getList("iface")[0].value,nat_t:getList("nat_t")[0].value,exchange_mode:getFilterList("exchange_mode")[0].value,dpd_delay:5,dpd_maxfail:3,tcpmss:getList("tcpmss")[0].value,tcpmss_value:1300,enable_routing:!1,alg:getList("alg")[0].value,alg_ph2:getList("alg_ph2")[0].value,hash:getList("hash")[0].value,auth_alg:getList("auth_alg")[0].value,enable_pfs:!0,dhgroup:getList("dhgroup")[0].value,pfsgroup:getList("pfsgroup")[0].value,remote_lifetime:28800,sainfo_lifetime:3600,nets:[]}}function getList(param,rule,ipVersion){function getInterfaceList(){var result=[];return result.push({name:"wan_auto",value:"auto"}),_.each(attrs,function(elem){elem.is_wan&&elem.name&&elem.iface&&result.push({name:elem.name,value:elem.iface})}),result}function getListFromRpcData(param){var list=[],isGroupsParam="p1_groups"==param||"p2_groups"==param;return ipsec[param]&&_.each(ipsec[param],function(elem,key){var obj={name:isGroupsParam?elem:key,value:elem};list.push(obj)}),list}function createList(arr){return _.map(arr,function(value){return{name:value.toUpperCase(),value:value}})}function getMode(arr,phase,type,rule){function getUseModes(phase,type,rule,arr){var crypto="alg"==type?"IKE"==phase?rule.alg:rule.alg_ph2:"IKE"==phase?rule.hash:rule.auth_alg;switch(crypto){case"3des":case"des":case"blowfish":case"cast128":case"serpent":case"twofish":return["cbc"];case"chacha20poly1305":case"null":return arr;case"camellia":return["cbc","ctr","ccm64","ccm96","ccm128"];case"aes":return"alg"==type?arr:["xcbc","cmac","gmac"];case"sha1":case"md5":case"sha2":return["hmac"]}}var modes=arr,useModes=getUseModes(phase,type,rule,arr);return createList(_.filter(modes,function(e){return _.contains(useModes,e)}))}function getSizeKey(arr,phase,type,rule){function getUseSizeKey(arr,phase,type,rule){var crypto="alg"==type?"IKE"==phase?rule.alg:rule.alg_ph2:"IKE"==phase?rule.hash:rule.auth_alg;switch(crypto){case"3des":case"des":case"blowfish":case"serpent":case"twofish":case"camellia":case"null":return arr;case"cast128":return[128];case"chacha20poly1305":return[256];case"aes":if("alg"==type)return arr;var hashMode="IKE"==phase?rule.ikeHashMode:rule.espHashMode;return"xcbc"==hashMode||"cmac"==hashMode?[96]:[128,192,256];case"sha1":return"2"==ipsec.version?[96,128]:[96];case"md5":return"2"==ipsec.version?[96,160]:[96];case"sha2":return[256,384,512]}}var sizeKey=arr,useSizeKey=getUseSizeKey(arr,phase,type,rule);return _.filter(sizeKey,function(e){return _.contains(useSizeKey,e)})}function getAlgList(arr,type,rule){var algArr=[];algArr="Firewall"!=ipsec.devMode?"crypto"==type?ipsec.shortAlgs?["des","null"]:arr:ipsec.shortAlgs?["md5","sha1"]:arr:arr;var version=rule.version;return"crypto"==type?algArr="1"==version?_.without(algArr,"cast128","chacha20poly1305"):_.without(algArr,"serpent","twofish"):"1"==version&&(algArr=_.without(algArr,"aes")),createList(algArr)}function getLogLevel(maxlogLevel){for(var levels=[{name:"ipsec_log_basic",value:0},{name:"ipsec_log_detailed",value:1},{name:"ipsec_log_high",value:2},{name:"ipsec_log_higher",value:3},{name:"ipsec_log_highest",value:4}],logLevel=[],i=maxlogLevel;i>=0;--i)logLevel.push(i);return _.filter(levels,function(e){return _.contains(logLevel,e.value)})}function createDhgroup(arr){var result=[];return _.each(arr,function(elem){""!=elem&&"modp8192"!=elem&&result.push({name:elem.toUpperCase(),value:elem})}),result}function createNATList(){return[{name:"Enabled",value:!0},{name:"Disabled",value:!1}]}function getGroupList(){var groups=funcs.newConfig.normalize(funcs.fetchBranch(config,paths.group)),keys=_.keys(groups);return _.map(keys,function(elem){return{name:elem,value:paths.group+elem+"."}})}function getInterface(ipVersion){function getWanIfaces(input,wanGroup){var types=["DHCP","Static","DHCPv6","Staticv6","PPPoE","L2TP","PPTP"],result=[];return result=result.concat(getInterfacesByType(types,wanGroup))}function getInterfacesByType(types,wanGroup){var wan_ifaces=[];return _.each(types,function(type){var path=paths.interfaces+type+".",input=funcs.fetchBranch(config,path);input=funcs.newConfig.normalize(input),_.each(input,function(elem,inst){var ifacePath=path+inst+".";elem.Enable&&_.contains(wanGroup,ifacePath)&&wan_ifaces.push({name:elem.Name,value:ifacePath})})}),wan_ifaces}var ifaces=funcs.newConfig.normalize(funcs.fetchBranch(config,paths.interfaces)),groups=funcs.newConfig.normalize(funcs.fetchBranch(config,paths.group)),wanGroup=[];_.each(groups,function(elem){"ipv4"==ipVersion?_.each(funcs.newConfig.normalize(elem.WAN),function(obj){wanGroup.push(obj.Link)}):_.each(funcs.newConfig.normalize(elem.WANv6),function(obj){wanGroup.push(obj.Link)})}),wanGroup=_.unique(wanGroup);var wan_ifaces=getWanIfaces(ifaces,wanGroup);return wan_ifaces}var rootAttrs=funcs.fetchBranch(attrs,paths.ipsec.connections+"#template.");switch(param){case"auth":return rootAttrs?createList(rootAttrs.Auth["enum"]):{};case"ike_crypto_mode":return rootAttrs?getMode(rootAttrs.IKE.Crypto.Mode["enum"],"IKE","alg",rule):{};case"ike_crypto_skey":return rootAttrs?getSizeKey(rootAttrs.IKE.Crypto.SizeKey["enum"],"IKE","alg",rule):{};case"alg":return rootAttrs?getAlgList(rootAttrs.IKE.Crypto.Type["enum"],"crypto",rule):getListFromRpcData("p1_cyphers");case"esp_crypto_mode":return rootAttrs?getMode(rootAttrs.ESP.Crypto.Mode["enum"],"ESP","alg",rule):{};case"esp_crypto_skey":return rootAttrs?getSizeKey(rootAttrs.ESP.Crypto.SizeKey["enum"],"ESP","alg",rule):{};case"alg_ph2":return rootAttrs?getAlgList(rootAttrs.ESP.Crypto.Type["enum"],"crypto",rule):getListFromRpcData("p2_cyphers");case"hash":return rootAttrs?getAlgList(rootAttrs.IKE.Hash.Type["enum"],"hash",rule):getListFromRpcData("p1_digests");case"dhgroup":return rootAttrs?createDhgroup(rootAttrs.IKE.DHGroup["enum"]):getListFromRpcData("p1_groups");case"auth_alg":return rootAttrs?getAlgList(rootAttrs.ESP.Hash.Type["enum"],"hash",rule):getListFromRpcData("p2_digests");case"dhgroup2":return rootAttrs?createDhgroup(rootAttrs.ESP.DHGroup["enum"]):{};case"type":return rootAttrs?createList(rootAttrs.Type["enum"]):{};case"version":return rootAttrs?rootAttrs.Version["enum"]:{};case"ike_hash_mode":return rootAttrs?getMode(rootAttrs.IKE.Hash.Mode["enum"],"IKE","hash",rule):{};case"ike_hash_skey":return rootAttrs?getSizeKey(rootAttrs.IKE.Hash.SizeKey["enum"],"IKE","hash",rule):{};case"esp_hash_mode":return rootAttrs?getMode(rootAttrs.ESP.Hash.Mode["enum"],"ESP","hash",rule):{};case"esp_hash_skey":return rootAttrs?getSizeKey(rootAttrs.ESP.Hash.SizeKey["enum"],"ESP","hash",rule):{};case"nat_t":return rootAttrs?createNATList():[{name:"Disabled",value:1},{name:"Enabled",value:2},{name:"Force",value:3}];case"left_iface":return rootAttrs?getInterface(ipVersion):{};case"left_group":return rootAttrs?getGroupList():{};case"log_level":var commonSettings=funcs.fetchBranch(attrs,paths.services);return commonSettings.LogLevel?getLogLevel(commonSettings.LogLevel.maxInclusive):{};case"iface":return rootAttrs?{}:getInterfaceList();case"tcpmss":return[{name:"ipsec_manual",value:1},{name:"Path MTU discovery",value:2}];case"pfsgroup":return rootAttrs?{}:getListFromRpcData("p2_groups")}}function getFilterList(param,rule){switch(param){case"my_ident":var list=[{name:"Address",value:1}];return rule&&1!=rule.exchange_mode&&list.push({name:"FQDN",value:2}),list;case"exchange_mode":var list=[];return rule&&2!=rule.my_ident&&list.push({name:"Main",value:1}),list.push({name:"Base",value:2}),list.push({name:"Aggressive",value:3}),list}}function getRule(index){var rule=funcs.deepClone(ipsec.tunnels[index]);return rule.devMode=ipsec.devMode,rule}function applyRule(rule,index){return _.isUndefined(index)?ipsec.tunnels.push(rule):ipsec.tunnels[index]=rule,ipsec}function checkUnique(ruleName,index){var input=funcs.deepClone(ipsec.tunnels);return _.isUndefined(index)||(input=_.omit(input,index)),_.every(input,function(elem){return elem.my_ident_value!=ruleName})}function removeRules(indexes){return _.each(indexes.sort().reverse(),function(index){ipsec.tunnels.splice(index,1)}),ipsec}var ipsec=funcs.deepClone(config),attrs=funcs.deepClone(attrs),config=oldConfig;return{getRule:getRule,getSettings:getSettings,getTunnels:getTunnels,getTunnelsStatus:getTunnelsStatus,getList:getList,getFilterList:getFilterList,getDefaultTemplate:getDefaultTemplate,setEnabled:setEnabled,removeRules:removeRules,applyRule:applyRule,checkUnique:checkUnique,setLogLevel:setLogLevel,setDebug:setDebug}}var _=__webpack_require__(4),funcs=(__webpack_require__(3),__webpack_require__(119),__webpack_require__(5));funcs.is=__webpack_require__(103),funcs.ipv4=__webpack_require__(104);var paths=__webpack_require__(230).paths;__webpack_require__(231),module.exports=IPsec},function(module,exports){"use strict";module.exports={paths:{common:"Device.Network.",services:"Device.Services.IPsec.",devMode:"Device.DeviceInfo.DeviceMode",ipsec:{common:"Device.Network.Connection.IPsec.",connections:"Device.Network.Connection.IPsec."},fwRules:"Device.Firewall.IPv4.Rules.",fwRulesIPv6:"Device.Firewall.IPv6.Rules.",fwZones:"Device.Firewall.IPv4.Zones.",fwZonesIPv6:"Device.Firewall.IPv6.Zones.",fwPolicy:"Device.Firewall.IPv4.Policy.",fwPolicyIPv6:"Device.Firewall.IPv6.Policy.",firewall:"Device.Firewall.IPv4.",firewallIPv6:"Device.Firewall.IPv6.",ipAddress:"Device.Network.IP.",group:"Device.Network.Group.",interfaces:"Device.Network.Connection.",somovd:{CONFIG_ID_WAN_IFACES_LIST:120,CONFIG_ID_IPSEC:192},countryCode:"Device.DeviceInfo.CountryCode"}}},function(module,exports,__webpack_require__){"use strict";function IP(config,attrs){function getIPs(){function prepareIP(ips,type,rootPath){function transform(elem,inst){if(!_.isObject(elem))return null;var result={},arrIp=elem.IPAddress.split("/");return result.ip=arrIp[0]||"","ipv4"==type?result.mask=arrIp[1]?funcs.ipv4.mask["long"](arrIp[1]):"":result.prefix=arrIp[1]||"",result.type=type,result.path=getPath(type,rootPath,inst),result.addressingType=elem.AddressingType,result.origin=elem.Origin,result}function getPath(type,rootPath,inst){var result=rootPath;return result+="ipv4"==type?"IPv4Address.":"IPv6Address.",result+=inst+"."}return _.chain(ips).map(transform).compact().value()}var result=[],input=funcs.fetchBranch(config,paths.ip);return _.each(input,function(elem,inst){var rootPath=paths.ip+inst+".";result=result.concat(prepareIP(elem.IPv4Address,"ipv4",rootPath),prepareIP(elem.IPv6Address,"ipv6",rootPath))}),result}var paths={ip:"Device.Network.IP."};return{getIPs:getIPs}}var _=__webpack_require__(4),funcs=__webpack_require__(5);module.exports=IP},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function dsysinitToNative(data){function getStatus(status){switch(status){case"ESTABLISHED":case"INSTALLED":return"wifi_client_connected";case"INSTALLING":return"ipsec_status_connecting";case"Disabled":return"wifi_mac_mode_disabled";default:return"ipsec_status_"+status.toLowerCase()}}function getIface(data,left){return~left.indexOf(paths.interfaces)?getInterfaceNameByLink(data,left):~left.indexOf(paths.ipAddress)?getIPbyLink(data,left):~left.indexOf(paths.group)?getGroupByLink(data,left):"Unknown"}function getLeftType(addr,iface,group,left){return addr==left?"addr":iface==left?"iface":group==left?"group":void 0}function getIPbyLink(config,link){var ip=funcs.deepClone(funcs.fetchBranch(config,link));return ip?ip.IPAddress:""}function getGroupByLink(config,link){var group=funcs.fetchBranch(config,link);if(!group)return"Unknown";if(""!=group.CurrentWAN)return getInterfaceNameByLink(config,group.CurrentWAN);var order=group.WAN.order;return order&&(order.length||_.size(order))?getInterfaceNameByLink(config,group.WAN[order[0]].Link):"NONE"}function getInterfaceNameByLink(config,link){var iface=funcs.fetchBranch(config,link);return iface&&iface.Name?iface.Name:"Unknown"}function getAddrOrigin(config,link){var ip=funcs.fetchBranch(config,link);return ip?ip.Origin:""}function formState(stateText){switch(stateText){case"Enabled":return"on";case"Aborted":return"off";case"Disabled":return"off";case"Enabling":return"pending";case"Disabling":return"pending"}}function getSubnets(rule){rule.LeftSubnet=funcs.newConfig.normalize(rule.LeftSubnet),rule.RightSubnet=funcs.newConfig.normalize(rule.RightSubnet);var output=[];return _.each(rule.LeftSubnet,function(leftNet,index){output.push({source:rule.LeftSubnet[index].Subnet,dest:rule.RightSubnet[index].Subnet,mtu:rule.RightSubnet[index].MTU,index:index})}),output}function getGroups(data){var groups=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.vpn));return groups=_.map(groups,function(gr,inx){return gr.__id=inx,gr}),_.filter(groups,function(gr){return-1!=gr.Link.indexOf("IPsec")})}function getPolicy(zoneId,policy,tunnel){return zoneId?_.chain(policy).map(function(elem,id){return elem.__id=id,elem}).filter(function(elem){return elem.Source==paths.firewall+"Zones."+zoneId+"."||elem.Dest==paths.firewall+"Zones."+zoneId+"."||elem.Source==paths.firewallIPv6+"Zones."+zoneId+"."||elem.Dest==paths.firewallIPv6+"Zones."+zoneId+"."}).value():{}}function isShortAlgs(countryCode){var shortCountries=["AR","BY","BE","BG","GB","HU","DK","IN","KZ","RU"];return _.contains(shortCountries,countryCode)}function isFirewall(mode){return mode&&"Firewall"==mode}function getRouterIpsecPolicy(inst,tunnel,data){function tunnelIPLinks(rule,inst,tunnel){var ipLinks=funcs.newConfig.normalize(rule.Source.IPLinks);if(!_keys2["default"](ipLinks).length)return!1;var subnets=[];for(var i in funcs.newConfig.normalize(tunnel.RightSubnet))subnets.push(paths.interfaces+"IPsec."+inst+".RightSubnet."+i+".Subnet");for(var i in ipLinks)if(!subnets.find(function(e){return e==ipLinks[i].Link}))return!1;return!0}if("transport"!=tunnel.Type){var fwPath=tunnel.IPv6?paths.firewallIPv6:paths.firewall,fwRules=funcs.fetchBranch(data,fwPath+"Rules.");if(fwRules)for(var i in funcs.newConfig.normalize(fwRules)){var rule=fwRules[i];if(rule.Dest.Zone==fwPath+"Zones.1."&&"ACCEPT"==rule.Action&&tunnelIPLinks(rule,inst,tunnel))return{inst:i,rule:rule}}}}function getIPLinks(rule){var ipLinks=funcs.newConfig.normalize(rule.Source.IPLinks);return _keys2["default"](ipLinks)}var pattern=T({"->":["$data","tunnels","groups","firewall"],$data:":external",$commonSettings:["$data",function(d){return funcs.fetchBranch(d,ipsec.services)}],enabled:["$commonSettings*",function(cs){return!!cs&&cs.Enable}],logLevel:["$commonSettings*",function(cs){return cs?cs.LogLevel:void 0}],devMode:["$data",function(d){return funcs.fetchBranch(d,paths.devMode)}],shortAlgs:["$data",function(d){return isShortAlgs(funcs.fetchBranch(d,paths.countryCode))}],maxInstTunnel:["$data",function(d){return funcs.fetchBranch(d,ipsec.connections+"max_instance")}],tunnels:{"->":!0,$fw:["$parent",function(p){return funcs.fetchBranch(p.$data,paths.firewall)}],"{$tunnel, $i}":["$parent",function(p){return funcs.newConfig.normalize(funcs.fetchBranch(p.$data,ipsec.connections))}],__index:["$i*",function(i){return i}],isL2TP:["$tunnel*",function(t){return _.has(t,"L2TP")&&""!==t.L2TP}],l2tp:["$tunnel*",function(t){return t.L2TP}],ipv6:["$tunnel*",function(t){return t.IPv6}],init_ipv6:["$tunnel*",function(t){return t.IPv6}],peer:["$tunnel*",function(t){return t.Right}],anonymous:["$tunnel*",function(t){return""==t.Right}],alg:["$tunnel*",function(t){return t.IKE.Crypto.Type}],hash:["$tunnel*",function(t){return t.IKE.Hash.Type}],iface:["$parent","$tunnel*",function(p,t){return getIface(p.$data,t.Left)}],CHILD:["$tunnel*",function(t){return getStatus(t.Statistic.CHILD)}],IKE:["$tunnel*",function(t){return getStatus(t.Statistic.IKE)}],stateText:["$tunnel*",function(t){return getStatus(t.Status)}],state:["$tunnel*",function(t){return formState(t.Status)}],enable:["$tunnel*",function(t){return t.Enable}],auth:"psk",leftAddr:["$tunnel*",function(t){return~t.Left.indexOf(paths.ipAddress)?t.Left:""}],leftAddrOrigin:["$parent","$tunnel*",function(p,t){return~t.Left.indexOf(paths.ipAddress)?getAddrOrigin(p.$data,t.Left):""}],leftIface:["$tunnel*",function(t){return~t.Left.indexOf(paths.interfaces)?t.Left:""}],leftGroup:["$tunnel*",function(t){return~t.Left.indexOf(paths.group)?t.Left:""}],leftType:["leftAddr*","leftIface*","leftGroup*","$tunnel*",function(addr,iface,group,t){return getLeftType(addr,iface,group,t.Left)}],key:["$tunnel*",function(t){return t.Key}],modeIKE:["$tunnel*",function(t){return t.IKE.Crypto.Mode}],sizeKeyIKE:["$tunnel*",function(t){return t.IKE.Crypto.SizeKey}],dhgroup:["$tunnel*",function(t){return t.IKE.DHGroup}],modeESP:["$tunnel*",function(t){return t.ESP.Crypto.Mode}],sizeKeyESP:["$tunnel*",function(t){return t.ESP.Crypto.SizeKey}],alg_ph2:["$tunnel*",function(t){return t.ESP.Crypto.Type}],ikeHashMode:["$tunnel*",function(t){return t.IKE.Hash.Mode}],ikeHashSKey:["$tunnel*",function(t){return t.IKE.Hash.SizeKey}],espHashMode:["$tunnel*",function(t){return t.ESP.Hash.Mode}],espHashSKey:["$tunnel*",function(t){return t.ESP.Hash.SizeKey}],auth_alg:["$tunnel*",function(t){return t.ESP.Hash.Type}],enable_pfs:["$tunnel*",function(t){return t.PFS}],dhgroup2:["$tunnel*",function(t){return""==t.ESP.DHGroup?"modp1024":t.ESP.DHGroup}],remote_lifetime:["$tunnel*",function(t){return t.LifeTimeIKE}],sainfo_lifetime:["$tunnel*",function(t){return t.LifeTime}],nat_t:["$tunnel*",function(t){return t.NATTraversal}],peer_type:["$tunnel*",function(t){return""==t.Rught||funcs.is.ipv4(t.Right)||funcs.is.ipv6(t.Right)?1:2}],my_ident_value:["$tunnel*",function(t){return t.Name}],type:["$tunnel*",function(t){return t.Type}],version:["$tunnel*",function(t){return t.Version}],enableDPD:["$tunnel*",function(t){return t.DPD}],dpd_delay:["$tunnel*",function(t){return t.DPDDelay}],dpd_timeout:["$tunnel*",function(t){return t.DPDTimeOut}],nets:["$tunnel*",function(t){return getSubnets(t)}],aggressive:["$tunnel*",function(t){return _.has(t,"Aggressive")?t.Aggressive:null}],tcpmss:["$tunnel*",function(t){return t.UsePMTU?2:1}],$router_ipsec:["$i*","$tunnel*","$root",function(i,t,r){return getRouterIpsecPolicy(i,t,r.$data)}],router_ipsec:["$router_ipsec",function(r){return!!r}],router_ipsec_inst:["$router_ipsec*",function(r){return r.inst}],router_ipsec_iplinks:["$router_ipsec*",function(r){
return getIPLinks(r.rule)}],delete_nets:[]},groups:{"->":!0,"{$groups, $i}":["$parent",function(p){return getGroups(p.$data)}],__id:["$groups*",function(gr){return gr.__id}],link:["$groups*",function(gr){return gr.Link}]},firewall:{"->":["?"],$devMode:["$parent",function(p){return funcs.fetchBranch(p.$data,paths.devMode)}],"?":["$devMode*",function(dm){return!isFirewall(dm)}],ipv4:{"->":!0,$fw:["$root",function(r){return funcs.fetchBranch(r.$data,paths.firewall)}],$tunnel:["$root",function(r){return funcs.fetchBranch(r.$data,ipsec.connections)}],$zones:["$fw*",function(fw){return fw?funcs.newConfig.normalize(fw.Zones):void 0}],$policy:["$fw*",function(fw){return fw?funcs.newConfig.normalize(fw.Policy):void 0}],zones:["$zones*",function(z){return z}],zoneId:["$zones*",function(z){return _.findKey(z,{Type:"IPSec"})}],maxInstZone:["$fw*",function(fw){return fw?fw.Zones.max_instance:void 0}],policy:["zoneId*","$policy*","$tunnel*",function(zid,p,t){return getPolicy(zid,p,t)}]},ipv6:{"->":!0,$fw:["$root",function(r){return funcs.fetchBranch(r.$data,paths.firewallIPv6)}],$tunnel:["$root",function(r){return funcs.fetchBranch(r.$data,ipsec.connections)}],$zones:["$fw*",function(fw){return fw?funcs.newConfig.normalize(fw.Zones):void 0}],$policy:["$fw*",function(fw){return fw?funcs.newConfig.normalize(fw.Policy):void 0}],zones:["$zones*",function(z){return z}],zoneId:["$zones*",function(z){return _.findKey(z,{Type:"IPSec"})}],maxInstZone:["$fw*",function(fw){return fw?fw.Zones.max_instance:void 0}],policy:["zoneId*","$policy*","$tunnel*",function(zid,p,t){return getPolicy(zid,p,t)}]}}});return pattern.build({$data:data})}function nativeToDsysinit(data){function getGroups(data){var tunnels=data.tunnels.filter(function(t){return!t.isL2TP}),groups=data.groups,result=[];return _.each(tunnels,function(tunnel,id){var group=_.find(groups,{link:ipsec.connections+tunnel.__index+"."});result.push(group?group:{link:ipsec.connections+"new_inst_"+id+"."})}),result}function getLeft(tunnel,devMode){return"iface"==tunnel.leftType?tunnel.leftIface:"addr"==tunnel.leftType?tunnel.leftAddr:"group"==tunnel.leftType?"Firewall"!=devMode?paths.group+"1.":tunnel.leftGroup:void 0}function getZoneIfaces(zone,tunnels){if(!zone)return tunnels;var ifaces=funcs.newConfig.normalize(zone.Interfaces);return _.map(tunnels,function(tunnel,id){if(!tunnel.__index||!ifaces)return tunnel;var key=_.findKey(ifaces,{Path:ipsec.connections+tunnel.__index+"."});return key&&(tunnel.__zoneId=key),tunnel})}function getZones(data,ipVersion){function getIfaces(firewall,tunnels){var zoneIPsec=firewall.zoneId?firewall.zones[firewall.zoneId]:{},newTunnels=getZoneIfaces(zoneIPsec,tunnels),result={};return _.each(newTunnels,function(elem,id){if("transport"!=elem.type){var index=elem.__index?elem.__index:"new_inst_"+id,resultId=elem.__zoneId?elem.__zoneId:"new_inst_"+id;result[resultId]={Path:ipsec.connections+index+"."}}}),result}var firewall=data.firewall,tunnels=data.tunnels.filter(function(t){return"transport"!=t.type}),isIPv6=!1;if(!data.enabled||!tunnels.length&&!firewall.zoneId)return{};_.each(tunnels,function(elem){isIPv6=elem.ipv6});var result={};if(!isIPv6&&"ipv4"==ipVersion){var id=firewall.ipv4.zoneId?firewall.ipv4.zoneId:"new_inst";result[id]={Type:"IPSec",Interfaces:getIfaces(firewall.ipv4,data.tunnels.filter(function(t){return!t.isL2TP}))}}if(isIPv6&&"ipv6"==ipVersion){var id=firewall.ipv6.zoneId?firewall.ipv6.zoneId:"new_inst";result[id]={Type:"IPSec",Interfaces:getIfaces(firewall.ipv6,data.tunnels.filter(function(t){return!t.isL2TP}))}}return result}function getPolicy(data,ipVersion){var firewall=data.firewall,tunnels=data.tunnels.filter(function(t){return"transport"!=t.type}),isIPv6=!1;if(!data.enabled||!tunnels.length&&!firewall.zoneId)return{};_.each(tunnels,function(elem){isIPv6=elem.ipv6});var zones=firewall.ipv4.zones,zonesIPv6=firewall.ipv6.zones,ipsecZoneLink=paths.firewall+"Zones."+(firewall.ipv4.zoneId?firewall.ipv4.zoneId:"new_inst")+".",ipsecZoneLinkIPv6=paths.firewallIPv6+"Zones."+(firewall.ipv6.zoneId?firewall.ipv6.zoneId:"new_inst")+".",result={},inx=0;return isIPv6||"ipv4"!=ipVersion||(firewall.ipv4.policy&&firewall.ipv4.policy.length?_.each(firewall.ipv4.policy,function(elem,inx){var workElem=_assign2["default"]({},elem),id=workElem.__id;delete workElem.__id,result[id]=workElem}):_.each(zones,function(zone,id){var obj={};"lan"!=zone.Name&&"wan"!=zone.Name&&"fw"!=zone.Name||(obj.Source=ipsecZoneLink,obj.Dest=paths.firewall+"Zones."+id+".",obj.Policy="fw"==zone.Name?"DROP":"ACCEPT",result["new_inst_"+ ++inx]=funcs.deepClone(obj),"ipv4"==zone.Type&&"lan"==zone.Name&&(obj.Source=paths.firewall+"Zones."+id+".",obj.Dest=ipsecZoneLink,result["new_inst_"+ ++inx]=funcs.deepClone(obj)))})),isIPv6&&"ipv6"==ipVersion&&(firewall.ipv6.policy&&firewall.ipv6.policy.length?_.each(firewall.ipv6.policy,function(elem,inx){var workElem=_assign2["default"]({},elem),id=workElem.__id;delete workElem.__id,result[id]=workElem}):_.each(zonesIPv6,function(zone,id){var obj={};"lan"!=zone.Name&&"wan"!=zone.Name&&"fw"!=zone.Name||(obj.Source=ipsecZoneLinkIPv6,obj.Dest=paths.firewallIPv6+"Zones."+id+".",obj.Policy="fw"==zone.Name?"DROP":"ACCEPT",result["new_inst_"+ ++inx]=funcs.deepClone(obj),"ipv6"==zone.Type&&"lan"==zone.Name&&(obj.Source=paths.firewallIPv6+"Zones."+id+".",obj.Dest=ipsecZoneLinkIPv6,result["new_inst_"+ ++inx]=funcs.deepClone(obj)))})),result}function getRules(data,ipVersion){function getIPLinks(elem,inst_num){var output={},ipsecId=elem.__index?elem.__index:"new_inst_"+inst_num,iplinksList=elem.router_ipsec_inst&&elem.ipv6==elem.init_ipv6?elem.router_ipsec_iplinks:[];for(var i in elem.nets){var id=iplinksList[i]?iplinksList[i]:"new_iplink_"+i,netId=elem.nets[i].index?elem.nets[i].index:"new_inst_"+i,obj={Link:paths.interfaces+"IPsec."+ipsecId+".RightSubnet."+netId+".Subnet"};output[id]=obj}return output}var firewall=data.firewall;if(!data.enabled)return{};var result={},zoneIpsec=("ipv4"==ipVersion?paths.firewall:paths.firewallIPv6)+"Zones."+(("ipv4"==ipVersion?firewall.ipv4.zoneId:firewall.ipv6.zoneId)||"new_inst")+".",zoneFw=("ipv4"==ipVersion?paths.firewall:paths.firewallIPv6)+"Zones.1.";for(var i in data.tunnels){var elem=data.tunnels[i];if(elem.router_ipsec&&"transport"!=elem.type&&("ipv4"==ipVersion&&!elem.ipv6||"ipv6"==ipVersion&&elem.ipv6)){var id=elem.router_ipsec_inst&&elem.ipv6==elem.init_ipv6?elem.router_ipsec_inst:"new_inst_"+i,obj={Source:{Zone:zoneIpsec,IPLinks:getIPLinks(elem,i)},Dest:{Zone:zoneFw},Enable:!0,Action:"ACCEPT"};result[id]=obj}}return result}function isChangeMode(alg){return"null"!=alg&&"chacha20poly1305"!=alg}function isChangeSizeKey(alg){return"3des"!=alg&&"des"!=alg&&"null"!=alg}function isFirewall(mode){return mode&&"Firewall"==mode}var pattern=T({"->":["$data","Device"],$data:":external",Device:{"->":!0,Services:{IPsec:{"->":!0,$data:["$root",function(r){return r.$data}],Enable:["$data",function(d){return d.enabled}],LogLevel:["$data",function(d){return d.logLevel}]}},Firewall:{"->":["?","IPv4","IPv6"],"?":["$root",function(r){return!isFirewall(r.$data.devMode)}],IPv4:{"->":!0,Zones:["$root",function(r){return getZones(r.$data,"ipv4")}],Policy:["$root",function(r){return getPolicy(r.$data,"ipv4")}],Rules:["$root",function(r){return getRules(r.$data,"ipv4")}]},IPv6:{"->":!0,Zones:["$root",function(r){return getZones(r.$data,"ipv6")}],Policy:["$root",function(r){return getPolicy(r.$data,"ipv6")}],Rules:["$root",function(r){return getRules(r.$data,"ipv6")}]}},Network:{"->":!0,Connection:{IPsec:{"->":["$tunnels","ESP","IKE","LeftSubnet","RightSubnet"],"{$tunnels, $i}":["$root",function(r){return r.$data.tunnels.filter(function(t){return!t.isL2TP})}],":":["$tunnels*","$i*",function(t,i){return t.__index?t.__index:"new_inst_"+i}],Auth:["$tunnels*",function(t){return t.auth}],Key:["$tunnels*",function(t){return"psk"==t.auth?t.key:""}],Name:["$tunnels*",function(t){return t.my_ident_value}],Left:["$tunnels*","$root",function(t,r){return getLeft(t,r.$data.devMode)}],LifeTimeIKE:["$tunnels*",function(t){return t.remote_lifetime}],LifeTime:["$tunnels*",function(t){return t.sainfo_lifetime}],IPv6:["$tunnels*",function(t){return t.ipv6}],L2TP:["$tunnels*",function(t){return t.l2tp}],NATTraversal:["$tunnels*",function(t){return t.nat_t}],Right:["$tunnels*",function(t){return t.anonymous?"":t.peer}],Type:["$tunnels*",function(t){return t.type}],Version:["$tunnels*",function(t){return t.version}],UsePMTU:["$tunnels*",function(t){return 1!=t.tcpmss}],PFS:["$tunnels*",function(t){return t.enable_pfs}],RightPort:["$tunnels*",function(t){return t.right_port}],ESP:{"->":["$tunnels","Crypto","Hash"],$tunnels:["$parent",function(p){return p.$tunnels}],Crypto:{"->":!0,$tunnels:["$parent",function(p){return p.$tunnels}],Mode:["$tunnels*",function(t){return isChangeMode(t.alg_ph2)?t.ModeESP:void 0}],SizeKey:["$tunnels*",function(t){return isChangeSizeKey(t.alg_ph2)?t.sizeKeyESP:void 0}],Type:["$tunnels*",function(t){return t.alg_ph2}]},DHGroup:["$tunnels*",function(t){return t.dhgroup2}],Hash:{"->":!0,$tunnels:["$parent",function(p){return p.$tunnels}],Mode:["$tunnels*",function(t){return t.espHashMode}],SizeKey:["$tunnels*",function(t){return t.espHashSKey}],Type:["$tunnels*",function(t){return t.auth_alg}]}},Aggressive:["$tunnels*",function(t){return t.aggressive}],IKE:{"->":["$tunnels","Crypto","Hash"],$tunnels:["$parent",function(p){return p.$tunnels}],Crypto:{"->":!0,$tunnels:["$parent",function(p){return p.$tunnels}],Mode:["$tunnels*",function(t){return isChangeMode(t.alg)?t.modeIKE:void 0}],SizeKey:["$tunnels*",function(t){return isChangeSizeKey(t.alg)?t.sizeKeyIKE:void 0}],Type:["$tunnels*",function(t){return t.alg}]},DHGroup:["$tunnels*",function(t){return t.dhgroup}],Hash:{"->":!0,$tunnels:["$parent",function(p){return p.$tunnels}],Mode:["$tunnels*",function(t){return t.ikeHashMode}],SizeKey:["$tunnels*",function(t){return t.ikeHashSKey}],Type:["$tunnels*",function(t){return t.hash}]}},DPD:["$tunnels*",function(t){return t.enableDPD}],DPDDelay:["$tunnels*",function(t){return t.dpd_delay}],DPDTimeOut:["$tunnels*",function(t){return t.dpd_timeout}],LeftSubnet:{"->":!0,"{$net, $i}":["$parent",function(p){return p.$tunnels&&"transport"!=p.$tunnels.type?p.$tunnels.nets:{}}],":":["$net*","$i*",function(net,i){return net.index?net.index:"new_inst_"+i}],Subnet:["$net*",function(net){return~net.source.indexOf("/")?net.source:net.source+"/32"}]},RightSubnet:{"->":!0,$mtu:["$parent",function(p){return p.$tunnels&&1==p.$tunnels.tcpmss?p.$tunnels.tcpmss_value:void 0}],"{$net, $i}":["$parent",function(p){return p.$tunnels&&"transport"!=p.$tunnels.type?p.$tunnels.nets:{}}],":":["$net*","$i*",function(net,i){return net.index?net.index:"new_inst_"+i}],Subnet:["$net*",function(net){return~net.dest.indexOf("/")?net.dest:net.dest+"/32"}],MTU:["$parent","$net*",function(p,net){return 1==p.$tunnels.tcpmss?net.mtu:void 0}]},Enable:["$tunnels*",function(t){return t.enable}]}},Group:{1:{VPN:{"->":!0,"{$groups, $i}":["$root",function(r){return getGroups(r.$data)}],":":["$groups*","$i*",function(gr,i){return gr.__id?gr.__id:"new_inst_"+i}],Link:["$groups*",function(gr){return gr.link}]}}}}}});return pattern.build({$data:data})}var _assign=__webpack_require__(201),_assign2=_interopRequireDefault(_assign),_keys=__webpack_require__(78),_keys2=_interopRequireDefault(_keys),T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),ipsec={services:"Device.Services.IPsec.",connections:"Device.Network.Connection.IPsec.",enabled:"Device.Network.Connection.IPsec.Enable",status:"Device.Network.Connection.IPsec.Status"},paths={devMode:"Device.DeviceInfo.DeviceMode",interfaces:"Device.Network.Connection.",ipAddress:"Device.Network.IP.",vpn:"Device.Network.Group.1.VPN.",group:"Device.Network.Group.",firewall:"Device.Firewall.IPv4.",firewallIPv6:"Device.Firewall.IPv6.",zoneFW:"Device.Firewall.IPv4.Zones.1.",zoneWAN:"Device.Firewall.IPv4.Zones.2.",countryCode:"Device.DeviceInfo.CountryCode"};module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}},function(module,exports,__webpack_require__){"use strict";module.exports={constants:__webpack_require__(234),Helper:__webpack_require__(235),converter:__webpack_require__(236)}},function(module,exports){"use strict";module.exports={paths:{statsRouting:"Device.Statistics.Routing."}}},function(module,exports,__webpack_require__){"use strict";function StatsRouting(config){function getData(){return config?_.has(config,"Routing")?config.Routing:config:{}}function getTables(){return config?config.Tables:{}}function getRules(){return config?config.Rules:{}}function getDestString(elem){var ipWithMask=elem.mask?elem.dest+"/"+funcs.ipv4.mask["short"](elem.mask):elem.dest;return elem.gw&&""!=elem.gw?ipWithMask+" - "+elem.gw:ipWithMask}if(!(this instanceof StatsRouting))return new StatsRouting(config);var config=funcs.deepClone(config);return{getData:getData,getDestString:getDestString,getTables:getTables,getRules:getRules}}var _=__webpack_require__(4),funcs=__webpack_require__(5);module.exports=StatsRouting},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getIfaceName(ifname,ifaceLink){if(_.isEmpty(ifaceLink))return _.isEmpty(ifname)?"any":ifname;if("Device.Network.Interface.Bridge.1."==ifaceLink)return"LAN";var iface=funcs.fetchBranch(data,ifaceLink);if(!iface)return ifname;if(-1!=ifaceLink.indexOf("PTM"))return"PTM "+(0!=iface.VID?iface.VID:"untag");if(-1!=ifaceLink.indexOf("ATM")){var xdsl=data.Device.xDSL;if(xdsl){var pvc="";if(_.findKey(funcs.newConfig.normalize(xdsl),function(elem,key){return _.some(elem.ATM.PVC,function(obj,id){return obj.Interface==ifaceLink&&(pvc=obj.VPI+"/"+obj.VCI,!0)})}),""!=pvc)return"ATM "+pvc}}if(!_.isEmpty(iface.Name))return iface.Name;if(_.has(iface,"LowerLayer")){var vlanIface=funcs.fetchBranch(data,iface.LowerLayer);return _.isEmpty(vlanIface.Name)?ifname:vlanIface.Name}return ifname}function getIPAddress(extendAddr,addressFamily){var ip="";if("IPv4"==addressFamily){var splitAddr=extendAddr.split("/");ip=splitAddr[0]}else"IPv6"==addressFamily&&(ip=extendAddr);return ip}function getMask(extendAddr,addressFamily){if(!extendAddr)return"";if("IPv6"==addressFamily)return"";var splitAddr=extendAddr.split("/"),mask=splitAddr&&splitAddr[1]?funcs.ipv4.mask["long"](splitAddr[1]):"";return mask}function getTableName(link,id){var table=funcs.fetchBranch(data,link),tableName=table?table.Name:null;return""!=tableName?tableName:id}function getRouting(){function checkLinklocal(data){var addr=funcs.ipv6.address.full(data),splitAddr=addr.split(":");return"fe80"==splitAddr[0].toLowerCase()}var routing=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.routing)),tables=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.tables)),voipTable=_.find(tables,{Name:"voip"});return _.filter(routing,function(elem){if(""==elem.TableLink)return!1;if(data.hideTRVoip&&voipTable&&elem.Table==voipTable.TableID)return!1;if("unreachable"==elem.Type)return!1;if("IPv6"==elem.AddressFamily)return!checkLinklocal(elem.Destination)&&"UGc"!=elem.Flags&&"Uc"!=elem.Flags;var iface=funcs.fetchBranch(data,elem.InterfaceLink);return iface&&!iface.Bridged})}function getTables(data){var tables=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.tables)),hideTablesList=["unreachable","resolve","failover","default"];return data.hideTRVoip&&hideTablesList.push("voip"),_.filter(tables,function(e){return!_.contains(hideTablesList,e.Name)})}function getRules(data){var rules=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.rules)),viewTables=getTables(data),viewTablesID=_.pluck(viewTables,"TableID");return _.filter(rules,function(r){return _.contains(viewTablesID,r.Table)})}var pattern=T({"->":["$data","Routing","Tables","Rules"],$data:":external",Routing:{"->":["?"],$data:["$parent",function(p){return p.$data}],"?":["$routing",function(r){return!!r}],"{$routing}":getRouting(),name:["$routing",function(r){return getIfaceName(r.Interface,r.InterfaceLink)}],dest:["$routing",function(r){return getIPAddress(r.Destination,r.AddressFamily)}],mask:["$routing",function(r){return getMask(r.Destination,r.AddressFamily)}],gw:["$routing",function(r){return r.GatewayIPAddress}],flags:["$routing",function(r){return r.Flags}],metric:["$routing",function(r){return r.ForwardingMetric}],table:["$routing",function(r){return r.Table}]},Tables:{"->":!0,$data:["$parent",function(p){return p.$data}],"{$tables}":["$data",function(d){return getTables(d)}],id:["$tables*",function(t){return t.TableID}],name:["$tables*",function(t){return t.Name}]},Rules:{"->":!0,$data:["$parent",function(p){return p.$data}],"{$rules}":["$data",function(d){return getRules(d)}],addressFamily:["$rules*",function(r){return r.AddressFamily}],destIP:["$rules*",function(r){return r.DestinationIPAddress||"all"}],sourceIP:["$rules*",function(r){return r.SourceIPAddress||"all"}],fwMark:["$rules*",function(r){return"0x"+r.FWMark.toString(16).toUpperCase()}],incomingIface:["$rules*",function(r){return getIfaceName(r.IncomingInterface,r.IncomingInterfaceLink)}],outgoingIface:["$rules*",function(r){return getIfaceName(r.OutgoingInterface,r.OutgoingInterfaceLink)}],priority:["$rules*",function(r){return r.Priority}],tos:["$rules*",function(r){return r.TOS}],table:["$rules*",function(r){return getTableName(r.TableLink,r.Table)}]}});return pattern.build({$data:data})}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),paths={routing:"Device.Statistics.Routing.",tables:"Device.Routing.Tables.",rules:"Device.Statistics.RoutingRules."};__webpack_require__(237),module.exports={dsysinitToNative:dsysinitToNative}},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}var _typeof2=__webpack_require__(82),_typeof3=_interopRequireDefault(_typeof2),funcs=__webpack_require__(5),cpe=__webpack_require__(3);module.exports=function(){function changeLang(lang){var input=[{Name:"Device.DeviceInfo.Language",Value:lang}];return cpe.SetParameterValues(input)}function changePassword(response,username,password){var tree=funcs.buildTree(response),fetch=funcs.fetchBranch(tree,"Device.Users.User."),nameValue=[];return _.each(fetch,function(item,i){return"object"==("undefined"==typeof item?"undefined":_typeof3["default"](item))&&item.Username==username?void(nameValue=[{Name:"Device.Users.User."+i+".Password.",Value:password}]):void 0}),nameValue}return{changeLang:changeLang,changePassword:changePassword}}()},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports={Helper:__webpack_require__(243),constants:__webpack_require__(244),converter:__webpack_require__(245)}},function(module,exports,__webpack_require__){"use strict";function SystemTime(config,attrs){function getData(){var result={ntp:{},time:{}},ntp=funcs.fetchBranch(config,paths.ntp),time=funcs.fetchBranch(config,paths.time);return result.ntp.Enable=ntp.Enable,result.ntp.TimeZoneOffset=unionOffset(ntp.TimeZoneHourOffset,ntp.TimeZoneMinuteOffset),result.ntp.Servers=_.map(funcs.newConfig.normalize(ntp.Servers),function(value,inst){return{address:value.Server,__id:inst,isDynamic:value.Dynamic}}),_.has(ntp,"DST")&&(result.ntp.DST=ntp.DST),_.has(ntp,"DSTHour")&&(result.ntp.DSTHour=ntp.DSTHour),_.has(ntp,"DSTStart")&&(result.ntp.DSTStart=ntp.DSTStart),_.has(ntp,"DSTEnd")&&(result.ntp.DSTEnd=ntp.DSTEnd),_.has(ntp,"DSTTimeZoneHourOffset")&&_.has(ntp,"DSTTimeZoneMinuteOffset")&&(result.ntp.DSTTimeZoneOffset=unionOffset(ntp.DSTTimeZoneHourOffset,ntp.DSTTimeZoneMinuteOffset)),_.has(ntp,"DHCPServers")&&(result.ntp.DHCPServers=ntp.DHCPServers),_.has(ntp,"NTPServer")&&(result.ntp.NTPServer=ntp.NTPServer),_.has(ntp,"Sync")&&(result.ntp.Sync=ntp.Sync),_.has(ntp,"Interval")&&(result.ntp.Interval=ntp.Interval),_.has(ntp,"AutoInterval")&&(result.ntp.AutoInterval=ntp.AutoInterval),_.has(ntp,"PollInterval")&&(result.ntp.PollInterval=ntp.PollInterval),_.has(ntp,"RetryInterval")&&(result.ntp.RetryInterval=ntp.RetryInterval,result.ntp.RetryType=0==ntp.RetryInterval?0:1),result.time=time,result}function formConfig(data){function prepareNtp(ntp){return ntp.Servers=prepareNtpServer(ntp.Servers),prepareOffset(ntp),prepareDSTOffset(ntp),ntp}function prepareNtpServer(server){var result={};return _.each(server,function(elem,inx){if(elem.address){var inst=elem.__id?elem.__id:"new_inst_"+inx;result[inst]={Server:elem.address}}}),result}function prepareOffset(ntp){var arrOffset=ntp.TimeZoneOffset.split(":");ntp.TimeZoneHourOffset=Number(arrOffset[0]),ntp.TimeZoneMinuteOffset=Number(arrOffset[1]),delete ntp.TimeZoneOffset}function prepareDSTOffset(ntp){if(ntp.DSTTimeZoneOffset){var arrOffset=ntp.DSTTimeZoneOffset.split(":");ntp.DSTTimeZoneHourOffset=Number(arrOffset[0]),ntp.DSTTimeZoneMinuteOffset=Number(arrOffset[1]),delete ntp.DSTTimeZoneOffset}}var config={},input=funcs.deepClone(data);return input.ntp=prepareNtp(input.ntp),void 0!=input.ntp.RetryType&&delete input.ntp.RetryType,funcs.setValue(paths.ntp.replace(/\.$/,""),input.ntp,config),funcs.setValue(paths.time.replace(/\.$/,""),input.time,config),config}function getTimeStamp(input){return new Date(input.Year,input.Month-1,input.Day,input.Hour,input.Minute).getTime()}function getTimeZones(){var result=[];if(attrs)var ntpAttrs=funcs.fetchBranch(attrs,paths.ntp),start=ntpAttrs.TimeZoneHourOffset.minInclusive,end=ntpAttrs.TimeZoneHourOffset.maxInclusive;else var start=-12,end=12;for(var i=start;end>=i;i++){var sign=identifySign(i),name=i.toString();result.push({sign:sign,name:name,value:unionOffset(i,0)}),_.contains([-4,-3,3,4,5,6,9],i)&&result.push({sign:sign,name:name+"30",value:unionOffset(i,30)}),5==i&&result.push({sign:sign,name:name+"45",value:unionOffset(i,45)})}return result}function unionOffset(hour,minute){var sign=identifySign(hour),hour=Math.abs(hour).toString(),minute=minute.toString();return 1==hour.length&&(hour="0"+hour),1==minute.length&&(minute="0"+minute),sign+hour+":"+minute}function identifySign(hour){return hour>0?"+":0>hour?"-":""}function checkServer(server){if(!server)return!0;var isIpv4=function(value){var patt=/^(0|[1-9]?\d|1\d\d|2[0-4]\d|25[0-5])\.(0|[1-9]?\d|1\d\d|2[0-4]\d|25[0-5])\.(0|[1-9]?\d|1\d\d|2[0-4]\d|25[0-5])\.(0|[1-9]?\d|1\d\d|2[0-4]\d|25[0-5])$/;return!!patt.test(value)},isDomain=function(host){var regDomain=/^[а-яА-Яa-zA-Z0-9]+([\-]{0,2}[а-яА-Яa-zA-Z0-9])*$/;if(host=host.replace(/(^\s+|\s+$)/g,""),host.length>255)return!1;var domains=host.split(".");for(var i in domains)if(domains[i].length<1||domains[i].length>63||!regDomain.test(domains[i]))return!1;return!0};return isIpv4(server)||isDomain(server)}function getPoolIntervalEnum(){var pollInterval=funcs.fetchBranch(attrs,"Device.Services.NTP.PollInterval.");if(!pollInterval)return[];pollInterval=[pollInterval["default"]].concat(pollInterval["enum"]);var result=[];for(var i in pollInterval){var obj={value:pollInterval[i],name:0==i?"auto":pollInterval[i]};result.push(obj)}return result}function getRetryIntervalEnum(){return[{name:"auto",value:0},{name:"manual",value:1}]}var config=funcs.deepClone(config),attrs=funcs.deepClone(attrs);return{getData:getData,formConfig:formConfig,getTimeStamp:getTimeStamp,getTimeZones:getTimeZones,unionOffset:unionOffset,checkServer:checkServer,getPoolIntervalEnum:getPoolIntervalEnum,getRetryIntervalEnum:getRetryIntervalEnum}}var _=__webpack_require__(4),funcs=__webpack_require__(5),paths=__webpack_require__(244).paths;module.exports=SystemTime},function(module,exports){"use strict";module.exports={paths:{time:"Device.System.Time.",ntp:"Device.Services.NTP."},rpc:65}},function(module,exports,__webpack_require__){"use strict";function somovdToDsysinit(input){function getTimeZoneHour(hour){var hour=hour.split(":")[0];return-1*new Number(hour)}function getTimeZoneMinute(hour){var minute=hour.split(":")[1];return minute||0}var pattern=T({"->":!0,$input:":external",Device:{System:{Time:{"->":!0,$input:["$root",function(r){return r.$input}],$time:["$input",function(i){return i.time}],Day:["$time",function(t){return t.tm_mday}],Minute:["$time",function(t){return t.tm_min}],Hour:["$time",function(t){return t.tm_hour}],Month:["$time",function(t){return t.tm_mon}],Year:["$time",function(t){return t.tm_year}]}},Services:{NTP:{"->":!0,$input:["$root",function(r){return r.$input}],Enable:["$input",function(i){return i.enable}],Servers:{"->":!0,$input:["$root",function(r){return r.$input}],"{$value,$i}":["$input",function(i){return i.servers}],":":["$i*",function(i){return i+1}],Server:["$value",function(v){return v}]},TimeZoneHourOffset:["$input",function(i){return getTimeZoneHour(i.hour)}],TimeZoneMinuteOffset:["$input",function(i){return getTimeZoneMinute(i.hour)}],DST:["$input",function(i){return i.dst||!1}],DSTHour:["$input",function(i){return i.dst_hour||""}],DSTTimeZoneHourOffset:["$input",function(i){return getTimeZoneHour(i.dst_hour?i.dst_hour:i.hour)}],DSTTimeZoneMinuteOffset:["$input",function(i){return getTimeZoneMinute(i.dst_hour?i.dst_hour:i.hour)}],DSTStart:["$input",function(i){return i.dst_start||""}],DSTEnd:["$input",function(i){return i.dst_end||""}],DHCPServers:["$input",function(i){return i.use_dhcp}],NTPServer:["$input",function(i){return i.run_as_serv}],AutoInterval:["$input",function(i){return!i.interval}],Interval:["$input",function(i){return i.interval||1440}]}}}});return pattern.build({$input:input})}function dsysinitToSomovd(input){function getHour(hourOffset,minuteOffset){var output="";return 0!=hourOffset&&(hourOffset*=-1),output+=hourOffset,minuteOffset&&(output+=":"+minuteOffset),output}var pattern=T({"->":["$time","$ntp","time","servers"],$input:":external",$time:["$input",function(i){return i.Device.System.Time}],$ntp:["$input",function(i){return i.Device.Services.NTP}],time:{"->":!0,$time:["$root",function(r){return r.$time}],tm_mday:["$time",function(t){return t.Day}],tm_min:["$time",function(t){return t.Minute}],tm_hour:["$time",function(t){return t.Hour}],tm_mon:["$time",function(t){return t.Month}],tm_year:["$time",function(t){return t.Year}]},enable:["$ntp",function(n){return n.Enable}],hour:["$ntp",function(n){return getHour(n.TimeZoneHourOffset,n.TimeZoneMinuteOffset)}],servers:{"->":!0,$ntp:["$root",function(r){return r.$ntp}],"{$value,$i}":["$ntp",function(n){return n.Servers}],$return:["$value",function(v){return v?v.Server:{}}]},dst:["$ntp",function(n){return n.DST}],dst_hour:["$ntp",function(n){return void 0!=n.DSTTimeZoneHourOffset?getHour(n.DSTTimeZoneHourOffset,n.DSTTimeZoneMinuteOffset):getHour(n.TimeZoneHourOffset,n.TimeZoneMinuteOffset)}],dst_start:["$ntp",function(n){return n.DSTStart}],dst_end:["$ntp",function(n){return n.DSTEnd}],use_dhcp:["$ntp",function(n){return n.DHCPServers}],run_as_serv:["$ntp",function(n){return n.NTPServer}],interval:["$ntp",function(n){return n.AutoInterval?0:n.Interval}]});return pattern.build({$input:input})}var T=(__webpack_require__(4),__webpack_require__(122).T);module.exports={somovdToDsysinit:somovdToDsysinit,dsysinitToSomovd:dsysinitToSomovd}},function(module,exports,__webpack_require__){"use strict";module.exports={converterSyslog:__webpack_require__(247),converterUsbInfo:__webpack_require__(248)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(input){var pattern=T({"->":["$settings","Log2USB"],$input:":external","?":["$settings",function(s){return!!s}],$settings:["$input",function(i){return i.Device.Services.Syslog}],Enable:["$settings",function(s){return s.Enable}],Destination:["$settings",function(s){return s.Destination}],Level:["$settings",function(s){return s.Level}],Server:["$settings",function(s){return s.Server}],Port:["$settings",function(s){return s.Port}],Log2USB:{"->":["?"],$settings:["$root",function(r){return r.$settings.Log2USB}],"?":["$settings",function(s){return!!s}],Enable:["$settings*",function(s){return s.Enable||!1}],RotateSize:["$settings*",function(s){return s.RotateSize||0}],RotateNumber:["$settings*",function(s){return _.has(s,"RotateNumber")&&0!=s.RotateSize?s.RotateNumber:1}],Directory:["$settings*",function(s){return s.Directory||""}],File:["$settings*",function(s){return s.File||""}],InvalidPath:["$settings*",function(s){return!1}]}});return pattern.build({$input:input})}function nativeToDsysinit(input){var pattern=T({"->":!0,Device:{Services:{Syslog:{"->":["$input","Log2USB"],$input:":external",Enable:["$input",function(s){return s.Enable}],Destination:["$input",function(s){return s.Enable?s.Destination:void 0}],Level:["$input",function(s){return s.Enable?s.Level:void 0}],Server:["$input",function(s){return s.Enable?s.Server:void 0}],Port:["$input",function(s){return s.Enable?s.Port:void 0}],Log2USB:{"->":["?"],$settings:["$parent",function(r){return r.$input.Log2USB}],"?":["$settings",function(s){return!!s}],Enable:["$settings*",function(s){return s.Enable}],RotateSize:["$settings*",function(s){return s.Enable?s.RotateSize:void 0}],RotateNumber:["$settings*",function(s){return s.Enable?s.RotateNumber:void 0}],Directory:["$settings*",function(s){return s.Enable?s.Directory:void 0}],File:["$settings*",function(s){return s.Enable?s.File:void 0}]}}}}});return pattern.build({$input:input})}function attrsToNative(input){function getLevels(maxValue){for(var result=[],i=0;maxValue>=i;++i)result.push(i);return result}var pattern=T({"->":["$settings","Log2USB"],$input:":external",$settings:["$input",function(i){return i.Device.Services.Syslog}],Levels:["$settings",function(s){return getLevels(s.Level.maxInclusive)}],Destination:["$settings",function(s){return s.Destination["enum"]}]});return pattern.build({$input:input})}var _=__webpack_require__(4),T=__webpack_require__(122).T;module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit,attrsToNative:attrsToNative}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(input){var pattern=T({"->":!0,$input:":external","?":["$usb",function(u){return!!u}],"{$usb, __id}":["$input",function(i){return funcs.newConfig.normalize(i.Device.USB.Storage)}],Filesystem:["$usb",function(u){return u.Filesystem?u.Filesystem:"UNKNOWN"}],Device:["$usb",function(u){return u.Vendor+" "+u.Model}],Disable:["$usb",function(u){return u.Disable}],Mountpoint:["$usb",function(u){return u.Mountpoint.replace("/mnt/","")}],Total:["$usb",function(u){return _.isUndefined(u.Space)?"-":funcs.lookSize(1024*u.Space.Total*1024).toString()}],Free:["$usb",function(u){return _.isUndefined(u.Space)?"-":funcs.lookSize(1024*u.Space.Free*1024).toString()}]});return pattern.build({$input:input})}var _=__webpack_require__(4),T=__webpack_require__(122).T,funcs=__webpack_require__(5);module.exports={dsysinitToNative:dsysinitToNative}},function(module,exports,__webpack_require__){"use strict";module.exports={Helper:__webpack_require__(250),converter:__webpack_require__(251)}},function(module,exports,__webpack_require__){"use strict";function StatsDHCP(config){function getData(){return config?config:{}}function getLeaseExpiresTime(elem){return elem.lease?funcs.lookTime(elem.lease):"-"}if(!(this instanceof StatsDHCP))return new StatsDHCP(config);var config=funcs.deepClone(config);return{getData:getData,getLeaseExpiresTime:getLeaseExpiresTime}}var funcs=(__webpack_require__(4),__webpack_require__(5));module.exports=StatsDHCP},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getDHCPServer(input){var dhcp=funcs.newConfig.normalize(funcs.fetchBranch(input,paths.dhcpServer)),dhcpv6=funcs.newConfig.normalize(funcs.fetchBranch(input,paths.dhcpV6Server)),result={0:dhcp,1:dhcpv6};return result}function getClients(data){if(data){var clients="Disabled"!=data.Status?funcs.newConfig.normalize(funcs.fetchBranch(data,paths.stats)):{};return _.filter(clients,function(cl){
return""!=cl.IP&&""!=cl.MAC})}}function getHostname(hostnames,mac){var host=_.find(hostnames,function(elem){return elem.MAC&&elem.MAC.toUpperCase()==mac.toUpperCase()});return host?host.Alias||host.Hostname:""}var pattern=T({"->":!0,$data:":external",$hostnames:["$data",function(d){return funcs.newConfig.normalize(funcs.fetchBranch(d,"Device.Hostnames."))}],"{$servers}":["$data",function(d){return getDHCPServer(d)}],"{$dhcp}":["$servers",function(s){return s}],"?":["$client",function(c){return!!c}],"{$client}":["$dhcp",function(d){return getClients(d)}],hostname:["$hostnames","$client*",function(h,c){return getHostname(h,c.MAC)}],ip:["$client*",function(c){return c.IP}],MACAddress:["$client*",function(c){return c.MAC}],lease:["$client*",function(c){return c.LeaseTimeout}]});return pattern.build({$data:data})}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),paths=__webpack_require__(252).paths;module.exports={dsysinitToNative:dsysinitToNative}},function(module,exports){"use strict";module.exports={paths:{dhcpServer:"Device.Network.Server.DHCP.",dhcpV6Server:"Device.Network.Server.DHCPv6.",stats:"Statistic.Client."}}},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports={Helper:__webpack_require__(255),converter:__webpack_require__(256)}},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function PortSettings(config){function getData(){return config?sortData():{}}function sortData(){if(!config.order)return config.ports;var sortData=[];return _.each(config.order,function(elem){sortData.push(_.findWhere(config.ports,{__id:elem}))}),sortData}function getAdvertisementKeys(advertisement){if(advertisement){var result=_keys2["default"](advertisement);return result}return{}}function prepareData(port,speed){var result={};return result="auto"!==speed?{__id:port.__id,enable:port.enable,name:port.name,autonegotiation:!1,speed:speed}:{__id:port.__id,enable:port.enable,name:port.name,autonegotiation:!0,advertisement:port.advertisement,pause:port.pause}}if(!(this instanceof PortSettings))return new PortSettings(config);var config=funcs.deepClone(config);return{getData:getData,getAdvertisementKeys:getAdvertisementKeys,prepareData:prepareData}}var _keys=__webpack_require__(78),_keys2=_interopRequireDefault(_keys),_=__webpack_require__(4),funcs=(__webpack_require__(3),__webpack_require__(119),__webpack_require__(5));module.exports=PortSettings},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}var _keys=__webpack_require__(78),_keys2=_interopRequireDefault(_keys);!function(){function cpeToNative(data){function getOrder(){var order=funcs.fetchBranch(data,constants.ports);return order.order}function getAdvertisement(data){var advertisement={},input=funcs.newConfig.normalize(data),names=_keys2["default"](data);return _.each(names,function(elem){var inx=elem.slice(1);advertisement[inx]=input[elem]}),advertisement}function getStats(portsStat,id){var portLink=constants.ports+id+".",curPort=_.find(portsStat,{CrossLink:portLink});return curPort?curPort:{}}var pattern=T({"->":["$data","ports"],$data:":external",order:getOrder(),ports:{"->":!0,$portsStat:["$parent",function(p){return funcs.newConfig.normalize(funcs.fetchBranch(p.$data,constants.stats))}],"{$port, __id}":["$parent",function(p){return funcs.newConfig.normalize(funcs.fetchBranch(p.$data,constants.ports))}],$stat:["$portsStat","__id",function(ps,id){return getStats(ps,id)}],enable:["$port",function(p){return p.Enable}],name:["$port",function(p){return p.Alias}],alias:["$port",function(p){return p.Alias}],status:["$port*",function(p){return"Enabled"==p.Status?"Up":p.Status}],autonegotiation:["$stat",function(s){return s.Autonegotiation}],advertisement:["$port*",function(p){return p.Advertisement&&getAdvertisement(p.Advertisement)}],pause:["$port*",function(p){return p.FlowControl}],speed:["$stat*",function(s){return getSpeed(s.Speed,s.Duplex)}],flowControl:["$stat*",function(s){return _.size(s)?s.FlowControl:void 0}]}});return pattern.build({$data:data})}function getSpeed(speed,duplex){return speed+"M-"+(duplex?"Full":"Half")}function attrs(attrs){var pattern=T({"->":["$data","ports"],$attrs:":external",speedList:["$attrs*",function(a){return getSpeedList(a)}]});return pattern.build({$attrs:attrs})}function getSpeedList(attrs){var speeds=funcs.fetchBranch(attrs,"Device.Switch.Ports.#template.Speed."),result=[];return _.each(speeds["enum"],function(speed){0!=speed&&(1e3>speed&&result.push(getSpeed(speed,!1)),result.push(getSpeed(speed,!0)))}),result=result.reverse()}function nativeToCpe(data){function getPort(data){function getAdvertisement(data){var advertisement={},names=_keys2["default"](data).reverse();return _.each(names,function(elem){var inx="A"+elem;advertisement[inx]=data[elem]}),advertisement}function getSpeed(speed){return Number(speed.replace(/\D+/g,""))}function getDuplex(speed){var start=speed.indexOf("-"),duplex=speed.slice(start+1);return"Full"==duplex||"Half"!=duplex&&void 0}var result={};return result[data.__id]={Enable:data.enable},_.isUndefined(data.pause)||(result[data.__id].FlowControl=data.pause),data.advertisement&&(result[data.__id].Advertisement=getAdvertisement(data.advertisement)),data.autonegotiation?result[data.__id].Speed=0:data.speed&&(result[data.__id].Speed=getSpeed(data.speed),result[data.__id].Duplex=getDuplex(data.speed)),result}var result={Device:{Switch:{Ports:getPort(data)}}};return result}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),constants={ports:"Device.Switch.Ports.",vlansPath:"Device.Switch.1.Vlan.",stats:"Device.Statistics.Port."};module.exports={nativeToCpe:nativeToCpe,cpeToNative:cpeToNative,attrs:attrs}}()},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(258)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getIface(portLink,ifaceLink){var link;if(~portLink.indexOf("WiFi"))return"WLAN";link=portLink;var port=""!=link?funcs.fetchBranch(data,link):void 0,iface=""!=ifaceLink?funcs.fetchBranch(data,ifaceLink):void 0,name="",name=port&&port.Alias?port.Alias:iface?iface.Name||iface.Ifname:"-";return name=/LAN/.test(name)?name.replace(/\d/g,""):port?port.Upstream?"WAN":"LAN":name}function getClients(data){var clients=funcs.newConfig.normalize(funcs.fetchBranch(data,path.clientsPath));return clients=_.filter(clients,function(e){return""!=e.IPAddress&&"incomplete"!=e.Flags&&"failed"!=e.Flags&&""!=e.Port})}function getUpstream(portLink){var port=""!=portLink?funcs.fetchBranch(data,portLink):void 0;return!(!port||!_.has(port,"Upstream"))&&port.Upstream}var pattern=T({"->":!0,$data:":external","?":["$clients",function(c){return!!c}],"{$clients}":["$data",function(d){return getClients(d)}],flags:["$clients",function(c){return c.Flags}],ip:["$clients",function(c){return c.IPAddress}],mac:["$clients",function(c){return c.MACAddress}],name:["$clients",function(c){return getIface(c.Port,c.Interface)}],hostname:["$clients",function(c){return c.Hostname}],upstream:["$clients*",function(c){return getUpstream(c.Port)}]});return pattern.build({$data:data})}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),path=__webpack_require__(259);module.exports={dsysinitToNative:dsysinitToNative}},function(module,exports){"use strict";module.exports={clientsPath:"Device.Statistics.Neighbours.",routes:"Device.Routing.IPv4.Routes."}},function(module,exports,__webpack_require__){"use strict";module.exports={Helper:__webpack_require__(261),converter:__webpack_require__(264)}},function(module,exports,__webpack_require__){"use strict";function Udpxy(config,params,attrs){function getIfaces(identifer){var allInterfaces=iface.getInterfaces(),result=[];return"WAN"==identifer&&(result="Firewall"==config.Mode?_.chain(allInterfaces).filter(function(c){return!_.contains(["Bridge","IPsec"],c.type)}).map(function(c){return{name:c.name,value:c.path}}).value():_.chain(allInterfaces).filter(function(c){return _.contains(["DHCP","Static"],c.type)}).map(function(c){return{name:c.name,value:c.path}}).value()),"LAN"==identifer&&(result=_.chain(allInterfaces).filter(function(c){return"Bridge"==c.type}).map(function(c){return{name:c.name,value:c.path}}).value()),result}function getData(){var data=_.omit(config,"Interfaces");return data}function getIfacesResident(identifer){function getConnsNewConfig(){_.each(config.AvailableIfaces,function(data){wans[data.key_l3.split("_")[0]]&&"ethernet"==wans[data.key_l3.split("_")[0]].type&&wans[data.key_l3.split("_")[0]].services[data.key_l3]&&"ip"==wans[data.key_l3.split("_")[0]].services[data.key_l3].type&&ifaces.push({name:data.name,value:data.iface})})}function getIfaceNewConfig(){_.each(config.AvailableIfaces,function(data){wans[data.iface]&&wans[data.iface].services[data.key_l3]&&ifaces.push({name:data.name,value:data.iface})})}var wans=params.configWan.iface_names,device_mode=params.deviceMode,ifaces=[];return"WAN"==identifer&&("Firewall"!=device_mode?getConnsNewConfig():getIfaceNewConfig()),ifaces}if(!(this instanceof Udpxy))return new Udpxy(config,params,attrs);var config=funcs.deepClone(config),params=params?params:{},iface=new Iface({Device:{Network:{Connection:config.Connections,Interface:config.Interfaces}}},attrs);return{getData:getData,getIfaces:getIfaces,getIfacesResident:getIfacesResident}}var _=__webpack_require__(4),funcs=__webpack_require__(5),Iface=(__webpack_require__(262),__webpack_require__(263));module.exports=Udpxy},function(module,exports){"use strict";module.exports={udpxy:"Device.Services.Udpxy.",igmpxEnable:"Device.Services.IGMPX.Enable",interfaces:"Device.Network.Interface.",deviceMode:"Device.DeviceInfo.DeviceMode",conns:"Device.Network.Connection."}},function(module,exports,__webpack_require__){"use strict";function Interface(config,attrs){function getNameByPath(path){var iface=funcs.fetchBranch(config,path);return iface?iface.Name||iface.Ifname:null}function getInterfaces(){var inputIfaces=funcs.fetchBranch(config,paths["interface"]),inputConns=funcs.fetchBranch(config,paths.connection),interfaces=_.chain(inputIfaces).map(function(e,type){return getInterfacesByType(paths["interface"],type)}).flatten().filter(function(e){return _.contains(["Bridge"],e.type)}).value(),connections=_.chain(inputConns).map(function(e,type){return getInterfacesByType(paths.connection,type)}).flatten().value();return interfaces.concat(connections)}function getInterfacesByType(startPath,type){var path=startPath+type+".",input=funcs.fetchBranch(config,path);return input=funcs.newConfig.normalize(input),"DHCPv6"==type&&(input=_.omit(input,function(elem,inst){return/Connection/.test(elem.Interface)||/Cellular/.test(elem.Interface)})),_.map(input,function(elem,inst){var ifacePath=path+inst+".",isPPPoEv6=!1;return"PPPoE"==type&&(isPPPoEv6=funcs.fetchBranch(config,elem.PPPConfiguration+"IPv6Only")),{name:getNameByPath(ifacePath),path:ifacePath,type:isPPPoEv6?"PPPoEv6":type,status:elem.Status}})}function getInterfaceInfo(path){function getInterfaceIpInfo(path){function prepareIP(obj,type){return _.chain(obj).filter(function(e){return _.isObject(e)}).map(function(elem){var result={},arrIp=elem.IPAddress.split("/");return result.ip=arrIp[0]||"","ipv4"==type?result.mask=arrIp[1]?funcs.ipv4.mask["long"](arrIp[1]):"":result.prefix=arrIp[1]||"",result}).value()}var ips=funcs.fetchBranch(config,paths.ip);if(!ips)return null;var ip=__findInstanceByLowerLayer(ips,path);return ip?{ipv4:prepareIP(ip.IPv4Address,"ipv4"),ipv6:prepareIP(ip.IPv6Address,"ipv6")}:null}return{name:getNameByPath(path),ip:getInterfaceIpInfo(path)}}function __findInstanceByLowerLayer(obj,lowerLayer){return _.find(obj,function(elem){return!!_.isObject(elem)&&elem.LowerLayer==lowerLayer})}var paths={ip:"Device.Network.IP.","interface":"Device.Network.Interface.",connection:"Device.Network.Connection."};return{getNameByPath:getNameByPath,getInterfaces:getInterfaces,getInterfaceInfo:getInterfaceInfo}}var _=__webpack_require__(4),funcs=__webpack_require__(5);module.exports=Interface},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getMode(settings){switch(settings.IfaceLan){case"":return"";case"Device.Network.Interface.Bridge.1.":return"lan";case"Device.Network.Interface.Ethernet.2.":return"wan";default:return""}}var pattern=T({"->":!0,$data:":external","?":["$settings",function(s){return!!s}],Mode:["$data",function(d){return funcs.fetchBranch(d,constants.deviceMode)}],IgmpxEnable:["$data","Mode",function(d,m){return"Firewall"!=m&&funcs.fetchBranch(d,constants.igmpxEnable)}],$settings:["$data",function(d){return funcs.fetchBranch(d,constants.udpxy)}],Enable:["$settings",function(s){return s.Enable}],BufCli:["$settings",function(s){return s.BufCli}],SocBuf:["$settings",function(s){return s.SocBuf}],MaxCli:["$settings",function(s){return s.MaxCli}],AllowAllPorts:!1,Port:["$settings",function(s){return s.Port}],IfaceLan:["$settings","Mode",function(s,m){return"Firewall"==m?s.IfaceLan:"Device.Network.Interface.Bridge.1."}],IfaceWan:["$settings",function(s){return s.IfaceWan}],Interfaces:["$data",function(d){return funcs.fetchBranch(d,constants.interfaces)}],Connections:["$data",function(d){return funcs.fetchBranch(d,constants.conns)}],ModeIface:["$settings","Mode",function(s,m){return"Firewall"!=m&&autoconf.BR2_PACKAGE_ANWEB_CUSTOM_KOREA_21883?getMode(s):void 0}]});return pattern.build({$data:data})}function nativeToDsysinit(data){function getIface(modeIface){return"lan"==modeIface?"Device.Network.Interface.Bridge.1.":"wan"==modeIface?"Device.Network.Interface.Ethernet.2.":void 0}var pattern=T({"->":!0,Device:{Services:{Udpxy:{"->":!0,$data:":external",Enable:["$data",function(d){return d.Enable}],BufCli:["$data",function(d){return d.Enable?d.BufCli:void 0}],SocBuf:["$data",function(d){return d.Enable?d.SocBuf:void 0}],MaxCli:["$data",function(d){return d.Enable?d.MaxCli:void 0}],Port:["$data",function(d){return d.Enable?d.Port:void 0}],IfaceLan:["$data",function(d){return d.Enable?_.has(d,"ModeIface")?getIface(d.ModeIface):d.IfaceLan:void 0}],IfaceWan:["$data",function(d){return d.Enable?_.has(d,"ModeIface")?"Device.Network.Interface.Ethernet.2.":d.IfaceWan:void 0}]}}}});return pattern.build({$data:data})}var _=__webpack_require__(4),T=__webpack_require__(122).T,funcs=__webpack_require__(5),constants=__webpack_require__(262);module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}},function(module,exports,__webpack_require__){"use strict";module.exports=__webpack_require__(248)},function(module,exports,__webpack_require__){"use strict";module.exports={Helper:__webpack_require__(267),converter:__webpack_require__(268)}},function(module,exports,__webpack_require__){"use strict";function DDNS(config){function getDdns(){return config&&config.DDNS?config.DDNS:{}}function getIfaces(){return config&&config.Ifaces?config.Ifaces:{}}function getServices(){return config&&config.Services?config.Services:{}}function getConfiguration(){return config?_.omit(config,["DDNS","Services"]):{}}function getAvailIfaces(currentIface){function isWan(iface){return iface.IsWan}function isAvail(iface){return currentIface&&iface.Iface===currentIface||!~getBusyIfaces().indexOf(iface.Iface)}function getBusyIfaces(){return config.DDNS.map(function(iface){return iface.Iface})}return config.Ifaces.filter(isWan).filter(isAvail)}function getRule(index){function getDefaultTemplate(){return{System:"",Hostname:config.MultiHostname?[{Name:"",__id:0}]:"",Service:"",Period:"",Username:"",Iface:"",Password:""}}var result;return result=_.isUndefined(index)?getDefaultTemplate():config.DDNS[index],_.isUndefined(result)?getDefaultTemplate():result}function getCurrentService(service){var currentService=_.findWhere(config.Services,{Service:service});return currentService?currentService:(currentService=_.findWhere(config.Services,{Name:service}),currentService?currentService:config.Services[0])}function isUniqueName(host,ddns){var checkExternal=_.some(config.DDNS,function(elem){return elem.Instance!=ddns.Instance?_.some(elem.Hostname,function(el){return host.Name==el.Name||null}):null}),checkInside=_.some(ddns.Hostname,function(elem){return!!(host.Name&&elem.__id<host.__id&&elem.Name==host.Name)||null});return!(!checkInside&&!checkExternal)||null}function uniqueRule(ddns,pos){return!_.some(config.DDNS,function(elem){function checkHostname(ddns,rule){return _.every(ddns,function(elem){return _.findWhere(rule,{Name:elem.Name})})}return pos!=elem.Instance&&ddns.Service==elem.Service&&(ddns.Username==elem.Username||ddns.Hostname.length==elem.Hostname.length&&checkHostname(ddns.Hostname,elem.Hostname))})}if(!(this instanceof DDNS))return new DDNS(config);var config=funcs.deepClone(config);return{getDdns:getDdns,getIfaces:getIfaces,getAvailIfaces:getAvailIfaces,getRule:getRule,getServices:getServices,getCurrentService:getCurrentService,getConfiguration:getConfiguration,uniqueRule:uniqueRule,isUniqueName:isUniqueName}}var _=__webpack_require__(4),funcs=__webpack_require__(5);module.exports=DDNS},function(module,exports,__webpack_require__){"use strict";!function(){function dsysinitToNative(data){function getService(services,provider){var service=_.find(services,{Custom:provider.Custom,Name:provider.Name,Server:provider.Server,Path:provider.Path});return service?service:{Name:"ddns_custom_prov",Link:provider.Name,Server:provider.Server,Path:provider.Path}}function getServices(data){var customs=data.custom||[],services=funcs.newConfig.normalize(data.Device.Services.DDNS.ProvInfo);services=_.map(services,function(elem,key){return elem.__id=key,elem});var result=customs.concat(services);result=_.sortBy(result,"Name");var customProv={Custom:!0,Path:"",Name:"ddns_custom_prov",Server:""};return result.push(customProv),result}function getSupportedIfaceTypes(data,mode){var types=[];return"Firewall"!=mode?types.push({Name:"wan_group",Value:"Group"}):types.push({Name:"iface",Value:"Interface"},{Name:"wanConnecting",Value:"Connection"},{Name:"wan_group",Value:"Group"}),types}function getExtIfaces(data,mode){function getIfaces(data){var output=[],ifaces=funcs.fetchBranch(data,paths.ifaces);return ifaces=funcs.newConfig.normalize(ifaces),_.each(ifaces,function(ifaceList,type){if("Ethernet"==type||"Tunnel"==type){var path=paths.ifaces+type+".",input=funcs.fetchBranch(data,path);input=funcs.newConfig.normalize(input),_.each(input,function(elem,inst){var ifacePath=path+inst+".";output.push({Path:ifacePath,Name:elem.Name||elem.Ifname})})}}),output}function getConnections(data){var output=[],connections=funcs.fetchBranch(data,paths.conn);return connections=funcs.newConfig.normalize(connections),_.each(connections,function(connList,type){if("GRE"!=type&&"IPsec"!=type){var path=paths.conn+type+".",input=funcs.fetchBranch(data,path);input=funcs.newConfig.normalize(input),_.each(input,function(elem,inst){var connPath=path+inst+".";output.push({Path:connPath,Name:elem.Name||elem.Ifname})})}}),output}function getWanGroups(data){var output=[],groups=funcs.fetchBranch(data,paths.wanGroup);return groups=funcs.newConfig.normalize(groups),_.each(groups,function(groupList,type){var path=paths.wanGroup+type+".";output.push({Path:path,Name:type,CurrentWAN:groupList.CurrentWAN})}),output}var result={};return result.Groups=getWanGroups(data),result.Ifaces=getIfaces(data),result.Connections=getConnections(data),result}function getExtIfaceType(iface,types){if(iface)for(var i=0;i<types.length;++i)if(~iface.indexOf(types[i].Value))return types[i].Value;return types[0].Value}var pattern=T({"->":["SupportedIfaceTypes","Instances","Services","DDNS","Ifaces","ExtIfaces"],$data:":external",MultiDdns:!0,MultiHostname:!0,$devinfo:["$data",function(d){return funcs.fetchBranch(d,paths.deviceInfo)}],DeviceMode:["$devinfo",function(di){return di?di.DeviceMode:""}],NeedChooseIface:!0,SupportedIfaceTypes:["$data","DeviceMode",function(d,mode){return getSupportedIfaceTypes(d,mode)}],ExtIfaces:{"->":["$extIfaces","Interface","Connection","Group"],$extIfaces:["$root",function(r){return getExtIfaces(r.$data,r.DeviceMode)}],Interface:{"->":!0,"{$iface}":["$parent",function(p){return p.$extIfaces?p.$extIfaces.Ifaces:void 0}],Name:["$iface*",function(i){return i.Name}],Value:["$iface*",function(i){return i.Path}]},Connection:{"->":!0,"{$iface}":["$parent",function(p){return p.$extIfaces?p.$extIfaces.Connections:void 0}],Name:["$iface*",function(i){return i.Name}],Value:["$iface*",function(i){return i.Path}]},Group:{"->":!0,"{$iface}":["$parent",function(p){return p.$extIfaces?p.$extIfaces.Groups:void 0}],Name:["$iface*",function(i){return i.Name}],Value:["$iface*",function(i){return i.Path}],CurrentWAN:["$iface*",function(i){return i.CurrentWAN}]}},ExtSelectedIface:{Group:"",Interface:"",Connection:""},Services:{"->":!0,"{$services, $key}":["$root",function(r){return getServices(r.$data)}],Name:["$services*",function(s){return s.Name}],Service:["$services*",function(s){return s.Domain}],Link:["$services*",function(s){return"ddns_custom_rule"!=s.Name?s.Name:""}],Custom:["$services*",function(s){return!!s.Custom}],Path:["$services*",function(s){return s.Custom?s.Path:""}],Server:["$services*",function(s){return s.Custom?s.Server:""}]},DDNS:{"->":["$provider","Hostname","ExtIfaceType","ExternalInterface"],"?":["$ddns",function(d){return!!d}],"{$ddns, $key}":["$root",function(r){return funcs.newConfig.normalize(r.$data.Device.Services.DDNS.Instances)}],"{$providers}":["$ddns",function(d){return funcs.newConfig.normalize(d.Providers)}],$services:["$parent",function(p){return p.Services}],$service:["$services","$providers*",function(s,p){return getService(s,p)}],$provider:["$providers*",function(p){return p}],$supportTypes:["$root",function(r){return r.SupportedIfaceTypes}],Service:["$service*",function(s){return s.Name}],Name:["$service*",function(s){return"ddns_custom_prov"==s.Name?s.Link:void 0}],Server:["$service*",function(s){return"ddns_custom_prov"==s.Name?s.Server:void 0}],Path:["$service*",function(s){return"ddns_custom_prov"==s.Name?s.Path:void 0}],Hostname:{"->":!0,"{$names, __id}":["$parent*",function(p){return p.$provider?funcs.newConfig.normalize(p.$provider.Hostname):{}}],Name:["$names*",function(n){return n.Name}]},Password:["$providers*",function(p){return p.Password}],Username:["$providers*",function(p){return p.Username}],Instance:["$key",function(k){return k}],Period:["$ddns",function(d){return parseInt(d.Period/60)}],ExtIfaceType:["$ddns","$supportTypes",function(ddns,ifaceTypes){return getExtIfaceType(ddns.ExternalInterface,ifaceTypes)}],ExternalInterface:{"->":!0,Type:["$parent",function(p){return p.ExtIfaceType}],Iface:["$parent",function(p){return p.$ddns.ExternalInterface}]},Enable:["$ddns*",function(d){return d.Enable}],Status:["$ddns*",function(d){return d.Status}]}});return pattern.build({$data:data})}function nativeToDsysinit(data){var pattern=T({"->":["$rule","$key","Device"],$data:":external",$rule:["$data",function(d){return d}],$key:["$data",function(d){return _.isUndefined(d.Instance)?"+1":d.Instance}],Device:{Services:{DDNS:{Instances:{"->":["$rule","Providers"],$rule:["$root",function(r){return r.$rule}],$key:["$root",function(r){return r.$key}],":":["$key",function(k){return k}],Enable:["$rule*",function(r){return r.Enable}],Period:["$rule*",function(r){return 60*r.Period}],ExternalInterface:["$rule*",function(r){return _.isUndefined(r.ExternalInterface)?paths.wanGroup+"1.":r.ExternalInterface.Iface}],Providers:{"->":["$rule","Hostname"],$rule:["$root",function(r){return r.$rule}],$key:["$root",function(r){return _.isUndefined(r.$data.Instance)?"+2":"1"}],":":["$key",function(k){return k}],Hostname:{"->":!0,"{$names, $id}":["$parent",function(p){return p.$rule.Hostname}],":":["$names*","$id*",function(n,i){return _.isUndefined(n.__id)?"+"+i:n.__id}],Name:["$names*",function(n){return n.Name}]},Password:["$rule",function(r){return r.Password}],Username:["$rule",function(r){return r.Username}],Name:["$rule",function(r){return r.Link}],Custom:["$rule",function(r){return r.Custom}],Path:["$rule",function(r){return r.Path}],Server:["$rule",function(r){return r.Server}]}}}}}});return pattern.build({$data:data})}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5);__webpack_require__(269),module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit};var paths={ddnsInstance:"Device.Services.DDNS.Instances.",provInfo:"Device.Services.DDNS.ProvInfo.",deviceInfo:"Device.DeviceInfo.",ifaces:"Device.Network.Interface.",conn:"Device.Network.Connection.",wanGroup:"Device.Network.Group."}}()},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(input){function getIfaces(config){var output=[],ifaces=funcs.fetchBranch(config,paths["interface"]);return _.each(ifaces,function(ifaceList,type){var path=paths["interface"]+type+".",input=funcs.fetchBranch(config,path);input=funcs.newConfig.normalize(input),_.each(input,function(elem,inst){var ifacePath=path+inst+".";output.push({inst:inst,path:ifacePath,data:funcs.fetchBranch(config,ifacePath)})})}),output}function getName(iface){if(!_.isEmpty(iface.Name))return iface.Name;if(_.has(iface,"LowerLayer")){var vlanIface=funcs.fetchBranch(input.config,iface.LowerLayer);return vlanIface&&!_.isEmpty(vlanIface.Name)?vlanIface.Name:iface.Ifname}return iface.Ifname}function getIP(config,rule){function prepareIP(obj,type){return _.chain(obj).filter(function(e){return _.isObject(e)}).map(function(elem){var result={},arrIp=elem.IPAddress.split("/");return result.IP=arrIp[0]||"","ipv4"==type?result.Mask=arrIp[1]?funcs.ipv4.mask["long"](arrIp[1]):"":result.Prefix=arrIp[1]||"",result}).value()}function __findInstanceByLowerLayer(obj,lowerLayer){return _.find(obj,function(elem){return!!_.isObject(elem)&&elem.LowerLayer==lowerLayer})}var path=rule.path,ips=funcs.fetchBranch(config,paths.ip);if(!ips)return null;var ip=__findInstanceByLowerLayer(ips,path);return ip?{IPv4:prepareIP(ip.IPv4Address,"ipv4"),IPv6:prepareIP(ip.IPv6Address,"ipv6")}:null}var pattern=T({"->":!0,$input:":external",$config:["$input",function(i){return i.config}],"{$rule}":["$config",function(cfg){return getIfaces(cfg)}],Inst:["$rule*",function(r){return r.inst}],Path:["$rule*",function(r){return r.path}],Name:["$rule*",function(r){return getName(r.data)}],Data:["$rule*",function(r){return r.data}],IP:["$config","$rule*",function(cfg,r){return getIP(cfg,r)}]});return pattern.build({$input:input})}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5);module.exports={dsysinitToNative:dsysinitToNative};var paths={ip:"Device.Network.IP.","interface":"Device.Network.Interface."}},function(module,exports,__webpack_require__){"use strict";module.exports={Helper:__webpack_require__(271),converter:__webpack_require__(272)}},function(module,exports,__webpack_require__){"use strict";function UrlFilter(config,list,workList){function formList(list){function listPrepare(list){return _.map(list,function(elem,index){return elem.__index=index,elem})}function getOriginal(list){for(var index=0;list[index]&&hasWWW(list[index].url);)index++;return list[index]?list.splice(index,1)[0]:list.splice(0,1)[0]}function getDub(list,originalURL){if(!originalURL)return{};var index=_.findIndex(list,function(elem){return elem.url=="www."+originalURL});return-1!=index?list.splice(index,1)[0]:{}}var result=[];if(list=listPrepare(list),list.length)if(void 0!=list[0].match_mode)result=angular.copy(list);else for(;list.length;){var obj={};obj.original=getOriginal(list),obj.dub=getDub(list,obj.original.url),result.push(obj)}return result}function getConfig(){return config}function getList(){return workList.length&&void 0!=workList[0].match_mode?workList:_.map(workList,function(elem){return elem.original})}function getClientsList(){var clientsList=[];for(var key in config.clients_list)clientsList.push(config.clients_list[key]);return clientsList}function updateClientsList(list){config.clients_list={},_.each(list,function(elem,inx){config.clients_list[inx+1]=elem})}function updateAddrsList(addrList,inx){list=[],_.each(addrList,function(elem,inx){elem.url=elem.url.toLowerCase(),list[inx]=elem}),autoconf.BR2_PACKAGE_ANWEB_RLX_819X_DNS_FILTER||autoconf.BR2_PACKAGE_ANWEB_DNS_FILTER?workList=funcs.deepClone(addrList):_.each(addrList,function(elem,inx){workList[inx]||(workList[inx]={}),workList[inx].original=getOriginal(elem),workList[inx].dub=getDub(elem)}),list=funcs.deepClone(addrList)}function addRule(rule){setRule(rule)}function setRule(rule,inx){normalizeRule(rule);var obj={original:getOriginal(rule),dub:getDub(rule)};if(_.isUndefined(inx))workList.push(obj);else{var curRule=workList[inx];curRule.original=_.extend(curRule.original,obj.original),curRule.dub=_.extend(curRule.dub,obj.dub)}}function getOriginal(rule){var obj=funcs.deepClone(rule);return _.omit(obj,"__index")}function getDub(rule){var obj=funcs.deepClone(rule);return obj.url=hasWWW(obj.url)?obj.url.replace(/^www\./,""):"www."+obj.url,_.omit(obj,"__index")}function removeRule(inx){__initWorkList[inx]?(workList[inx].original.__removed=!0,workList[inx].dub.__removed=!0):workList.splice(inx,1)}function removeRuleDNS(inx){_.each(inx,function(i){void 0!=workList[i].__index?workList[i].__removed=!0:delete workList[i]}),workList=_.compact(workList)}function normalizeRule(rule){rule.url=rule.url.toLowerCase()}function wasModified(newConfig){return wasModifiedConfig(newConfig)||wasModifiedList()}function wasModifiedConfig(newConfig){return __initConfig&&!_.isEqual(newConfig,__initConfig)}function wasModifiedList(){return!!__initWorkList&&(__initWorkList.length!=workList.length||(workList.length&&void 0!=workList[0].match_mode?_.some(__initWorkList,function(elem,index){return elem.url!=workList[index].url||elem.match_mode!=workList[index].match_mode||workList[index].__removed}):workList.length&&void 0==workList[0].match_mode?_.some(__initWorkList,function(elem,index){var original=angular.fromJson(angular.toJson(workList[index].original));return!_.isEqual(elem.original,original)&&!_.isEqual(elem.dub,workList[index].dub)||!_.isEqual(elem.original,original)&&_.isEqual(elem.dub,workList[index].dub)}):void 0))}function hasWWW(url){return/^www\./.test(url)}function supportedParam(obj,param){return _.has(obj,param)}function prepareSettings(settings){function getConfigRequests(config){var data={enable:config.enable,type:config.enable?config.type:__initConfig.type};return supportedParam(config,"show_block_page")&&(data.show_block_page=config.enable?config.show_block_page:__initConfig.show_block_page),supportedParam(config,"clients_mode")&&(data.clients_mode=config.clients_mode),supportedParam(config,"clients_list")&&(data.clients_list=config.clients_list),{config:data}}function getListWriteRequests(list){var requests=[];return _.each(list,function(elem,index){var __initElem=__initList[index];__initElem&&_.isEqual(__initElem,elem)||requests.push({data:elem,pos:__initElem?index:-1})}),{list:requests}}function getListRemoveRequests(list){function getRemoveIndexes(){var indexes=_.range(0,list.length).reverse();return _.filter(indexes,function(index){return _.has(list[index],"__removed")&&__initList[index]})}var indexes=getRemoveIndexes();return _.map(indexes,function(index){var elem=funcs.deepClone(list[index]);return list.splice(index,1),__initList.splice(index,1),{data:_.omit(elem,"__removed"),pos:index}})}function formList(list,isDNSFilter){function appendRule(rule){_.has(rule,"__index")?result[rule.__index]=_.omit(rule,"__index"):newRules.push(rule)}var result=[],newRules=[];return isDNSFilter?_.each(list,function(elem){appendRule(elem)}):_.each(list,function(elem){var orig=elem.original,dub=elem.dub;

_.isEmpty(orig)||appendRule(orig),_.isEmpty(dub)||appendRule(dub)}),result=_.compact(result.concat(newRules))}var write=[],remove=[],isDNSFilter=settings.isRLX819XFilter;if(wasModifiedConfig(settings.config)&&write.push(getConfigRequests(config)),wasModifiedList()){var list=formList(workList,isDNSFilter);remove=remove.concat(getListRemoveRequests(list)),write=write.concat(getListWriteRequests(list))}var result={};return write.length&&(result.write=write),remove.length&&(result.remove=remove),result}if(!(this instanceof UrlFilter))return new UrlFilter(config,workList);var config=funcs.deepClone(config),list=funcs.deepClone(list),workList=workList?funcs.deepClone(workList):formList(list),__initConfig=funcs.deepClone(config),__initList=funcs.deepClone(list),__initWorkList=funcs.deepClone(workList),urlfilter={getConfig:getConfig,getList:getList,getClientsList:getClientsList,updateClientsList:updateClientsList,updateAddrsList:updateAddrsList,addRule:addRule,setRule:setRule,removeRule:removeRule,removeRuleDNS:removeRuleDNS,wasModified:wasModified,prepareSettings:prepareSettings};return urlfilter}var _=__webpack_require__(4),funcs=__webpack_require__(5);module.exports=UrlFilter},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function dsysinitToNative(data){function getUrlFilter(data){var servUrl=funcs.newConfig.normalize(funcs.fetchBranch(data,"Device.Services.URLFilter.")),keysServUrl=_keys2["default"](servUrl);return 0==keysServUrl.length?{}:{data:servUrl[keysServUrl[0]],inx:keysServUrl[0]}}function getClientsList(config){var addrs=funcs.newConfig.normalize(config.ClientList),result={};for(var i in addrs){var elem=addrs[i];""!=elem.MACAddress&&(result[i]={mac:elem.MACAddress,__id:i})}return result}function getLink(config,link){var result=link.replace(/\\\.\*/g,"*").replace(/\\\./g,".");return config.IsDNSFilter&&(result=result.replace(/\*/g,"").replace("$","").replace(/\^/,"")),result}function getLinkMatchMode(mode){switch(mode){case"Partial":return"middle";case"Full":return"full";case"StartsWith":return"begin";case"EndsWith":return"end"}}var pattern=T({"->":["$data","$urlFilter","config","list"],$data:":external",$urlFilter:["$data",function(d){return getUrlFilter(d)}],config:{"->":!0,$data:["$parent",function(p){return p.$data}],$urlFilter:["$parent",function(p){return p.$urlFilter}],$configUrlFilter:["$urlFilter",function(uf){return uf.data}],__id:["$urlFilter",function(uf){return uf.inx}],enable:["$configUrlFilter",function(c){return!!c&&c.Enable}],type:["$configUrlFilter",function(c){return c&&"allow"==c.HostnamePolicy?"Include":"Exclude"}],clients_mode:["$data","$configUrlFilter",function(d,c){return d.IsDNSFilter?c?"allow"==c.ClientPolicy?"White":"Black":"White":void 0}],clients_list:["$data","$configUrlFilter",function(d,c){return d.IsDNSFilter?c?getClientsList(c):{}:void 0}]},list:{"->":!0,$data:["$parent",function(p){return p.$data}],$urlFilter:["$parent",function(p){return p.$urlFilter}],"{$links, $id}":["$urlFilter",function(uf){return uf.data?funcs.newConfig.normalize(uf.data.HostnameList):{}}],__id:["$id*",function(id){return id}],url:["$data","$links*",function(d,l){return getLink(d,l.HostnamePattern)}],match_mode:["$data","$links*",function(d,l){return d.IsDNSFilter?getLinkMatchMode(l.PatternMatchingType):void 0}]}});return pattern.build({$data:data})}function nativeToDsysinit(data){function getLink(link){return link.url.replace(/\./g,"\\.")}function getCompare(mode){switch(mode){case"end":return"EndsWith";case"begin":return"StartsWith";case"middle":return"Partial";case"full":return"Full"}}var pattern=T({"->":["$data","$config","$list","Device"],$data:":external",$config:["$data",function(d){return d.config}],$list:["$data",function(d){return d.list}],Device:{Services:{URLFilter:{"->":["$config","ClientList","HostnameList"],$config:["$root",function(r){return r.$config}],":":["$config",function(c){return c.__id||"new_filter"}],Enable:["$config",function(c){return c.enable}],FilterType:["$config",function(c){return c.IsDNSFilter?"DNS":"HTTP"}],HostnamePolicy:["$config",function(c){return"Exclude"==c.type?"block":"allow"}],WANGroup:"Device.Network.Group.1.",ClientPolicy:["$config",function(c){return"White"==c.clients_mode?"allow":"block"}],ClientList:{"->":!0,"{$list, $id}":["$parent",function(p){return p.$config.clients_list}],":":["$list*","$id*",function(l,id){return l.__id?l.__id:"new_inst_"+id}],MACAddress:["$list*",function(l){return l.mac}]},HostnameList:{"->":!0,$config:["$parent",function(p){return p.$config}],"{$list, $id}":["$root",function(r){return r.$list.filter(function(e){return!e.__removed})}],":":["$list*","$id*",function(l,id){return l.__id||"new_inst_"+id}],HostnamePattern:["$list*","$id*",function(l,id){return getLink(l)}],PatternMatchingType:["$list*",function(l){return getCompare(l.match_mode)}]}}}}});return pattern.build({$data:data})}var _keys=__webpack_require__(78),_keys2=_interopRequireDefault(_keys),T=__webpack_require__(122).T,funcs=(__webpack_require__(4),__webpack_require__(5));module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}},function(module,exports,__webpack_require__){"use strict";module.exports={Helper:__webpack_require__(274),converter:__webpack_require__(276)}},function(module,exports,__webpack_require__){"use strict";var _=__webpack_require__(4),funcs=(__webpack_require__(275),__webpack_require__(5));module.exports=function(){function getDefaultRule(config,attrs){function getBiggestId(rules){var ids=_.pluck(rules,"__id");return ids.length?_.max(ids)+1:1}if(attrs){var defaultModel=funcs.newConfig.makeDefaultModel(attrs.Rules);return _.has(defaultModel,"Enable")&&(defaultModel.Enable=!0),_.has(defaultModel,"Action")&&(defaultModel.Action="ACCEPT"),defaultModel}return{Enable:!0,Action:"ACCEPT",MACAddress:"",Hostname:"",__id:getBiggestId(config.Rules)}}function changeConfig(config,opts){var workCopy=funcs.deepClone(config);if(opts=opts||{},opts.removeIndexes&&_.each(opts.removeIndexes.sort().reverse(),function(index){workCopy.Rules.splice(index,1)}),opts.editRules){var rule=opts.editRules.rule,index=opts.editRules.index;_.isUndefined(index)?workCopy.Rules.push(rule):workCopy.Rules[index]=rule}return workCopy}function accessWillLost(config){function getClientState(config){var clientMac=config.Client.MACAddress;clientMac&&(clientMac=clientMac.toUpperCase());var rule=_.find(config.Rules,function(elem){return elem.MACAddress.toUpperCase()==clientMac});return rule?{Action:rule.Action,Stat:rule.Enable}:"NONE"}if(config.Client&&!config.Client.MACAddress&&!autoconf.BR2_PACKAGE_ANWEB_DSYSINIT)return!1;if(config.Client&&autoconf.BR2_PACKAGE_ANWEB_DSYSINIT&&(!config.Client.Port||"WAN"==config.Client.Port))return!1;var baseAction=config.BaseRule.Action,client=getClientState(config);return"DROP"==baseAction&&!client.Stat||!("DROP"!=client.Action||!client.Stat)}function getUsedMacList(config,withoutIndex){return config&&config.Rules?_.chain(config.Rules).filter(function(r,i){return!!_.isUndefined(withoutIndex)||i!=withoutIndex}).map(function(rule){return{mac:rule.MACAddress}}).value():[]}function isNotUniqRule(config,curRule,curIndex){var useRules=getUsedMacList(config,curIndex);return _.some(useRules,function(rule){return rule.mac.toUpperCase()==curRule.MACAddress.toUpperCase()})}function makeSomovdRequests(changed,init){function getWriteChanges(changed,init){var rules=[];return _.each(changed,function(elem){var initRule=_.find(init,function(e){return e.id==elem.id});if(initRule){var compareRule=_.omit(elem,"__pos");_.isEqual(initRule,compareRule)||rules.push(elem)}else rules.push(elem)}),rules}function getRemoveChanges(changed,init){var rules=[];return _.each(init,function(elem,index){var changedRule=_.find(changed,function(e){return e.id==elem.id});changedRule||(elem.__pos=index,rules.push(elem))}),rules.sort(function(a,b){return b.__pos-a.__pos})}function makeWriteList(rules){return _.map(rules,function(elem){return{id:74,data:_.omit(elem,"__pos"),pos:elem.__pos}})}function makeRemoveList(rules){return rules=_.sortBy(rules,function(inx){return-rules.id}),_.map(rules,function(rule){return{id:74,data:_.omit(rule,"__pos"),pos:rule.__pos}})}var requests={},writeChanges=getWriteChanges(changed,init),removeChanges=getRemoveChanges(changed,init);return _.size(writeChanges)&&(requests.write=makeWriteList(writeChanges)),_.size(removeChanges)&&(requests.remove=makeRemoveList(removeChanges)),requests}return{getDefaultRule:getDefaultRule,changeConfig:changeConfig,accessWillLost:accessWillLost,getUsedMacList:getUsedMacList,isNotUniqRule:isNotUniqRule,makeSomovdRequests:makeSomovdRequests}}},function(module,exports){"use strict";var somovd=null;module.exports={set:function(actualModule){return somovd=actualModule},get:function(){return somovd}}},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}var _assign=__webpack_require__(201),_assign2=_interopRequireDefault(_assign);!function(){function dsysinitToNativeConfig(input){function getBaseRule(policyv4,policyv6){var id="",idWan="",idv6="",idWanv6="",result=_.find(policyv4,function(elem,inst){return id=inst,elem.Dest==zonesPathv4.dest&&elem.Source==zonesPathv4.source});return _.find(policyv4,function(elem,inst){return idWan=inst,elem.Dest==zonesPathv4.wan&&elem.Source==zonesPathv4.source}),_.findKey(policyv6,function(elem,inst){return idv6=inst,elem.Dest==zonesPathv6.dest&&elem.Source==zonesPathv6.source}),_.findKey(policyv6,function(elem,inst){return idWanv6=inst,elem.Dest===zonesPathv6.wan&&elem.Source===zonesPathv6.source}),result?(result.__ruleIdv4=id,result.__ruleWanIdv4=idWan,result.__ruleIdv6=idv6,result.__ruleWanIdv6=idWanv6,result):{Policy:"ACCEPT"}}function getRules(firewall){var allRules={};return _.each(firewall,function(obj,type){var dest="IPv4"==type?zonesPathv4.dest:zonesPathv6.dest,source="IPv4"==type?zonesPathv4.source:zonesPathv6.source,rules=_.chain(funcs.newConfig.normalize(obj.Rules)).map(function(elem,id){elem.__ruleId=id,"IPv4"==type?elem.__ruleIdv4=id:elem.__ruleIdv6=id,elem.__sourceMAC="";var sourceAddrs=funcs.newConfig.normalize(funcs.fetchBranch(elem,"Source.Address."));for(var addrID in sourceAddrs){var sourceAddr="mac_instance"!=addrID&&sourceAddrs[addrID]||null;if(sourceAddr&&""!=sourceAddr.MACAddr){elem.__sourceMAC=sourceAddr.MACAddr;break}}return elem}).filter(function(elem){return(elem.Dest.Zone==dest||"all"==elem.Dest.Zone)&&elem.Source.Zone==source&&elem.__sourceMAC}).value();rules&&rules.length&&rules.forEach(function(elem){var key=elem.__sourceMAC;if(key in allRules)allRules[key]=allRules[key].concat(elem);else{var data={};data[key]=[elem],allRules=_assign2["default"](allRules,data)}})}),allRules}function getIds(rules,id){return _.map(rules,function(rule){return rule[id]})}var pattern=T({"->":["$config","$policy","$firewall","$client","BaseRule","Rules","Client"],$input:":external",$config:["$input",function(i){return i.config}],$firewall:["$config*",function(cfg){return funcs.newConfig.normalize(funcs.fetchBranch(cfg,firewallPath))}],$policyv4:["$config*",function(cfg){return funcs.newConfig.normalize(funcs.fetchBranch(cfg,policyPath.v4))}],$policyv6:["$config*",function(cfg){return funcs.newConfig.normalize(funcs.fetchBranch(cfg,policyPath.v6))}],$client:["$input",function(i){return i.client}],BaseRule:{"->":!0,$policyv4:["$parent",function(p){return p.$policyv4}],$policyv6:["$parent",function(p){return p.$policyv6}],$baseRule:["$policyv4*","$policyv6",function(v4,v6){return getBaseRule(v4,v6)}],__ruleIdv4:["$baseRule*",function(r){return r.__ruleIdv4}],__ruleWanIdv4:["$baseRule*",function(r){return r.__ruleWanIdv4}],__ruleIdv6:["$baseRule*",function(r){return r.__ruleIdv6}],__ruleWanIdv6:["$baseRule*",function(r){return r.__ruleWanIdv6}],Action:["$baseRule*",function(r){return r.Policy}]},Rules:{"->":!0,"{$rule, $index}":["$parent",function(p){return getRules(p.$firewall)}],__ruleId:["$rule*",function(r){return getIds(r,"__ruleId")}],__ruleIdv4:["$rule*",function(r){return getIds(r,"__ruleIdv4")}],__ruleIdv6:["$rule*",function(r){return getIds(r,"__ruleIdv6")}],Enable:["$rule*",function(r){return r[0].Enable}],Action:["$rule*",function(r){return r[0].Action}],MACAddress:["$rule*",function(r){return r[0].Source.Address[1].MACAddr}],Name:["$rule*",function(r){return r[0].Name}]},Client:{"->":!0,$client:["$parent",function(p){return p.$client}],MACAddress:["$client*",function(c){return c.mac}],Port:["$client*",function(c){return c.port}]}});return pattern.build({$input:input})}function dsysinitToNativeAttrs(input){var pattern=T({"->":["$ruleAttrs","Rules"],$input:":external",$ruleAttrs:["$input",function(i){return funcs.fetchBranch(i.attrs,rulesPath.v4+"#template.")}],Rules:{"->":!0,$ruleAttrs:["$parent",function(p){return p.$ruleAttrs}],Enable:["$ruleAttrs",function(r){return r.Enable}],Action:["$ruleAttrs",function(r){return r.Action}],MACAddress:["$ruleAttrs",function(r){return r.Source.Address["#template"].MACAddr}],Name:["$ruleAttrs",function(r){return r.Name}]}});return pattern.build({$input:input})}function nativeTodsysinitConfig(input){function getBaseRules(br,type){var objFw={Id:"v4"==type?br.__ruleIdv4?br.__ruleIdv4:"new_inst_fw_v4":br.__ruleIdv6?br.__ruleIdv6:"new_inst_fw_v6",Type:"fw"},objWan={Id:"v4"==type?br.__ruleWanIdv4?br.__ruleWanIdv4:"new_inst_wan_v4":br.__ruleWanIdv6?br.__ruleWanIdv6:"new_inst_wan_v6",Type:"wan"};return[objFw,objWan]}function getRules(rules,type){return _.filter(rules,function(e){return e.Type==type})}var pattern=T({"->":["Device"],$input:":external",Device:{Firewall:{IPv4:{Policy:{"->":!0,$baseRule:["$root",function(r){return r.$input.BaseRule}],"{$rule}":["$baseRule*",function(br){return getBaseRules(br,"v4")}],":":["$rule",function(r){return r.Id}],Dest:["$rule",function(r){return"fw"==r.Type?zonesPathv4.dest:zonesPathv4.wan}],Source:zonesPathv4.source,Policy:["$baseRule*",function(bs){return bs.Action}]},Rules:{"->":["$rule","Dest","Source","CTState"],"{$rule, $index}":["$root",function(r){return getRules(r.$input.Rules,"v4")}],":":["$rule*","$index",function(r,i){return r.__ruleId?r.__ruleId:"new_inst_"+i}],Enable:["$rule*",function(r){return r.Enable}],Action:["$rule*",function(r){return r.Action}],Name:["$rule*",function(r){return r.Name}],CTState:{"->":["?"],"?":["$parent",function(p){return!!p.$rule}],1:{Value:"NEW"},2:{Value:"ESTABLISHED"},3:{Value:"RELATED"}},Dest:{"->":!0,"?":["$parent",function(p){return!!p.$rule}],Zone:["$parent",function(p){return"fw"==p.$rule.DestZone?zonesPathv4.dest:"all"}]},Source:{"->":["$rule","Address"],"?":["$parent",function(p){return!!p.$rule}],$rule:["$parent",function(p){return p.$rule}],Zone:zonesPathv4.source,Address:{"->":["$rule","1"],$rule:["$parent",function(p){return p.$rule}],1:{"->":!0,$rule:["$parent",function(p){return p.$rule}],MACAddr:["$rule",function(r){return r.MACAddress.toUpperCase()}]}}}}},IPv6:{Policy:{"->":!0,$baseRule:["$root",function(r){return r.$input.BaseRule}],"{$rule}":["$baseRule*",function(br){return getBaseRules(br,"v6")}],":":["$rule",function(r){return r.Id}],Dest:["$rule",function(r){return"fw"==r.Type?zonesPathv6.dest:zonesPathv6.wan}],Source:zonesPathv6.source,Policy:["$baseRule*",function(bs){return bs.Action}]},Rules:{"->":["$rule","Dest","Source","CTState"],"{$rule, $index}":["$root",function(r){return getRules(r.$input.Rules,"v6")}],":":["$rule*","$index",function(r,i){return r.__ruleId?r.__ruleId:"new_inst_"+i}],Enable:["$rule*",function(r){return r.Enable}],Action:["$rule*",function(r){return r.Action}],Name:["$rule*",function(r){return r.Name}],CTState:{"->":["?"],"?":["$parent",function(p){return!!p.$rule}],1:{Value:"NEW"},2:{Value:"ESTABLISHED"},3:{Value:"RELATED"}},Dest:{"->":!0,"?":["$parent",function(p){return!!p.$rule}],Zone:["$parent",function(p){return"fw"==p.$rule.DestZone?zonesPathv6.dest:"all"}]},Source:{"->":["$rule","Address"],"?":["$parent",function(p){return!!p.$rule}],$rule:["$parent",function(p){return p.$rule}],Zone:zonesPathv6.source,Address:{"->":["$rule","1"],$rule:["$parent",function(p){return p.$rule}],1:{"->":!0,$rule:["$parent",function(p){return p.$rule}],MACAddr:["$rule",function(r){return r.MACAddress.toUpperCase()}]}}}}}}}});return pattern.build({$input:input})}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),firewallPath="Device.Firewall.",policyPath={v4:"Device.Firewall.IPv4.Policy.",v6:"Device.Firewall.IPv6.Policy."},rulesPath={v4:"Device.Firewall.IPv4.Rules.",v6:"Device.Firewall.IPv6.Rules."},zonesPathv4={source:"Device.Firewall.IPv4.Zones.3.",dest:"Device.Firewall.IPv4.Zones.1.",wan:"Device.Firewall.IPv4.Zones.2."},zonesPathv6={source:"Device.Firewall.IPv6.Zones.3.",dest:"Device.Firewall.IPv6.Zones.1.",wan:"Device.Firewall.IPv6.Zones.2."};module.exports={dsysinitToNative:{config:dsysinitToNativeConfig,attrs:dsysinitToNativeAttrs},nativeToDsysinit:{config:nativeTodsysinitConfig}}}()},function(module,exports,__webpack_require__){"use strict";module.exports={ipfilterConverter:__webpack_require__(278),lanConverter:__webpack_require__(166),Helper:__webpack_require__(279)}},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function dsysinitToNative(data){function findIPFilterRule(firewall){var result=[];return _.each(firewall,function(fw,type){function checkZones(rule){return rule.Source.Zone==zones.lantowan.source&&rule.Dest.Zone==zones.lantowan.dest||rule.Source.Zone==zones.wantolan.source&&rule.Dest.Zone==zones.wantolan.dest||rule.Source.Zone==zones.lantofw.source&&rule.Dest.Zone==zones.lantofw.dest||rule.Source.Zone==zones.wantofw.source&&rule.Dest.Zone==zones.wantofw.dest}var rules=funcs.newConfig.normalize(fw.Rules);if(0!=_keys2["default"](rules).length){_.map(rules,function(rule,key){return rule.__index=key,rule});var zones="IPv4"==type?zonesPath.v4:zonesPath.v6,ipRule=_.filter(rules,function(r){return!_.isUndefined(r.Source)&&!_.isUndefined(r.Dest)&&_keys2["default"](funcs.newConfig.normalize(r.Source.Address)).length>0&&_keys2["default"](funcs.newConfig.normalize(r.Dest.Address)).length>0&&("DROP"==r.Action||"ACCEPT"==r.Action)&&checkZones(r)});_.map(ipRule,function(rule,key){return rule.id=key+1,rule.IPv6="IPv6"==type,rule}),ipRule.length&&(result=result.concat(ipRule))}}),result}function getAction(action){return"DROP"==action?1:"ACCEPT"==action?0:void 0}function getProtocol(proto){switch(proto=_.values(funcs.newConfig.normalize(proto)),proto=proto.length?proto[0].Value:""){case"":return 4;case"tcp":return 1;case"udp":return 2;case"icmp":case"ipv6-icmp":return 3;default:return 1}}function getProtocolInst(proto){var keys=_keys2["default"](funcs.newConfig.normalize(proto));return keys.length?keys[0]:void 0}function getAddress(addrs){addrs=_.values(funcs.newConfig.normalize(addrs));var addr=addrs[0],result="";switch(addr.IPStart){case"":result="";break;case"0.0.0.0":result="";break;default:result=addr.IPStart}return""!=addr.IPEnd&&"0.0.0.0"!=addr.IPEnd&&(result+="-"+addr.IPEnd),result}function getPorts(ports){ports=funcs.newConfig.normalize(ports);var portString=[];return _.each(ports,function(port){if(port.PortStart&&-1!=port.PortStart){var portElem=port.PortStart.toString();port.PortEnd&&-1!=port.PortEnd&&(portElem+=":"+port.PortEnd.toString()),portString.push(portElem)}}),portString.join(",")}function getDirection(isIPv6,sourceZone,destZone){var zones=isIPv6?zonesPath.v6:zonesPath.v4;switch(sourceZone){case zones.lantowan.source:return destZone==zones.lantowan.dest?1:3;case zones.wantolan.source:return destZone==zones.wantolan.dest?2:4;default:return 1}}var pattern=T({"->":["?"],$data:":external","{$iprule}":["$data",function(d){return findIPFilterRule(d.Device.Firewall)}],"?":["$iprule",function(i){return!!i}],state:["$iprule*",function(i){return i.Enable}],__index:["$iprule*",function(i){return i.__index}],action:["$iprule*",function(i){return getAction(i.Action)}],id:["$iprule*",function(i){return i.id}],name:["$iprule*",function(i){return i.Name}],ipd:["$iprule*",function(i){return getAddress(i.Dest.Address)}],ips:["$iprule*",function(i){return getAddress(i.Source.Address)}],ports:["$iprule*",function(i){return getPorts(i.Ports.Source)}],portd:["$iprule*",function(i){return getPorts(i.Ports.Dest)}],proto:["$iprule*",function(i){return getProtocol(i.Proto)}],protoInst:["$iprule*",function(i){return getProtocolInst(i.Proto)}],direction:["$iprule*",function(i){return getDirection(i.IPv6,i.Source.Zone,i.Dest.Zone)}],is_ipv6:["$iprule*",function(i){return i.IPv6}],is_init_ipv6:["$iprule*",function(i){return i.IPv6}]});return pattern.build({$data:data})}function attrsToNative(data){var pattern=T({"->":["$data","is_ipv6"],$data:":external",id:{supported:!0,type:"string"},name:{supported:!0,type:"string"},state:{supported:!0,type:"boolean","default":!0},is_ipv6:{"->":!0,supported:["$root",function(r){return _.has(r.$data.Device.Firewall,"IPv6")}],type:"boolean","default":!1},action:{supported:!0,type:"number","default":0,"enum":[0,1]},proto:{supported:!0,type:"number","default":1,"enum":[1,2,3,4]},ipd:{supported:!0,type:"ipv4/ipv6","default":""},ips:{supported:!0,type:"ipv4/ipv6","default":""},portd:{supported:!0,type:"port","default":""},ports:{supported:!0,type:"port","default":""},direction:{supported:!0,type:"number","default":1,"enum":[1,2,3,4]}});return pattern.build({$data:data})}function nativeToDsysinit(data){function getID(rule){return _.has(rule,"is_init_ipv6")&&rule.is_init_ipv6!=rule.is_ipv6?"+1000":_.isUndefined(rule.__index)?"+1000":rule.__index}function getIP(ipString,identifer){var ip=ipString.split("-");return"start"==identifer?ip[0]&&""!=ip[0]?ip[0]:"":"end"==identifer?ip[1]&&""!=ip[1]?ip[1]:"":void 0}function getProtocol(isIpv6,id,protocol,protocolInst){var proto,result={};switch(protocol){case 1:proto="tcp";break;case 2:proto="udp";break;case 3:proto=isIpv6?"ipv6-icmp":"icmp";break;case 4:return result}var icmpv6Types={1:{Value:127},2:{Value:128}},obj={Value:proto,Type:"ipv6-icmp"==proto?icmpv6Types:{}},key=id&&protocolInst?protocolInst:"+4000";return result[key]=obj,result}function getPorts(portsString,proto){if(4==proto||3==proto)return{};var portRanges=portsString.split(","),portObject={};return _.each(portRanges,function(elem,key){var ports=elem.split(":");portObject[key+1]={},portObject[key+1].PortStart=ports[0]&&""!=ports[0]?parseInt(ports[0]):-1,portObject[key+1].PortEnd=ports[1]&&""!=ports[1]?parseInt(ports[1]):-1}),portObject}function getZone(rule,name){var zoneKey="";switch(rule.direction){case 1:zoneKey="lantowan";break;case 2:zoneKey="wantolan";break;case 3:zoneKey="lantofw";break;case 4:zoneKey="wantofw";break;default:zoneKey="lantowan"}var zone=rule.is_ipv6?zonesPath.v6[zoneKey]:zonesPath.v4[zoneKey];return"Source"==name?zone.source:zone.dest}var pattern=T({"->":["$data","Device"],$data:":external",Device:{Firewall:{"->":["$data","Rules"],$data:["$root",function(r){return r.$data}],":":["$data",function(d){return d.is_ipv6?"IPv6":"IPv4"}],Rules:{"->":!0,$rule:["$parent",function(r){return r.$data}],":":["$rule",function(r){return getID(r)}],Enable:["$rule",function(r){return r.state}],Name:["$rule",function(r){return r.name}],Action:["$rule",function(r){return r.action?"DROP":"ACCEPT"}],CTState:{1:{Value:"NEW"},2:{Value:"ESTABLISHED"},3:{Value:"RELATED"}},Source:{"->":["$data","Address"],$data:["$root",function(r){return r.$data}],Address:{"->":!0,$addr:["$parent",function(r){return r.$data}],":":["$addr",function(a){return _.isUndefined(a.__index)?"+2000":1}],IPStart:["$addr",function(a){return getIP(a.ips,"start")}],IPEnd:["$addr",function(a){return getIP(a.ips,"end")}]},Zone:["$data",function(d){return getZone(d,"Source")}]},Dest:{"->":["$data","Address"],$data:["$root",function(r){return r.$data}],Address:{"->":!0,$addr:["$parent",function(r){return r.$data}],":":["$addr",function(a){return _.isUndefined(a.__index)?"+3000":1}],IPStart:["$addr",function(a){return getIP(a.ipd,"start")}],IPEnd:["$addr",function(a){return getIP(a.ipd,"end")}]},Zone:["$data",function(d){return getZone(d,"Dest")}]},Proto:["$rule",function(r){return getProtocol(r.is_ipv6,r.__index,r.proto,r.protoInst)}],Ports:{"->":!0,$proto:["$root",function(r){return r.$data.proto}],$portd:["$root",function(r){return r.$data.portd}],$ports:["$root",function(r){return r.$data.ports}],Dest:["$portd","$proto",function(port,proto){return getPorts(port,proto)}],Source:["$ports","$proto",function(port,proto){return getPorts(port,proto)}]}}}}});return pattern.build({$data:data})}var _keys=__webpack_require__(78),_keys2=_interopRequireDefault(_keys),T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5);module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit,attrsToNative:attrsToNative};var zonesPath={v4:{lantowan:{source:"Device.Firewall.IPv4.Zones.3.",dest:"Device.Firewall.IPv4.Zones.2."},wantolan:{source:"Device.Firewall.IPv4.Zones.2.",dest:"Device.Firewall.IPv4.Zones.3."},lantofw:{source:"Device.Firewall.IPv4.Zones.3.",dest:"Device.Firewall.IPv4.Zones.1."},wantofw:{source:"Device.Firewall.IPv4.Zones.2.",dest:"Device.Firewall.IPv4.Zones.1."}},v6:{lantowan:{source:"Device.Firewall.IPv6.Zones.3.",dest:"Device.Firewall.IPv6.Zones.2."},wantolan:{source:"Device.Firewall.IPv6.Zones.2.",dest:"Device.Firewall.IPv6.Zones.3."},lantofw:{source:"Device.Firewall.IPv6.Zones.3.",dest:"Device.Firewall.IPv6.Zones.1."},wantofw:{source:"Device.Firewall.IPv6.Zones.2.",dest:"Device.Firewall.IPv6.Zones.1."}}}},function(module,exports,__webpack_require__){"use strict";function IPFilter(ipfilter,lan,attributes){function getRules(){function transformRule(rule){return _.has(rule,"action")&&(rule.action=_.find(actionMap,function(e){return e.value==rule.action}).name),_.has(rule,"proto")&&(rule.proto=_.find(protoMap,function(e){return e.value==rule.proto}).name),rule.IPVersion=rule.is_ipv6?"IPv6":"IPv4",rule}var rules=funcs.deepClone(ipfilter);return _.map(rules,transformRule)}function getRule(index){return funcs.deepClone(ipfilter[index])}function getDefaultTemplate(attrs){var template={};return attrs||(attrs=attributes),_.each(attrs,function(obj,key){if(obj.__Template)template[key]=getDefaultTemplate(obj);else{if(!obj.supported||!_.has(obj,"default"))return;template[key]=obj["default"]}}),template}function getActions(){return _.filter(actionMap,function(e){return _.contains(attributes.action["enum"],e.value)})}function getProtocols(){return _.filter(protoMap,function(e){return _.contains(attributes.proto["enum"],e.value)})}function getDirections(){return _.filter(directionMap,function(e){return _.contains(attributes.direction["enum"],e.value)})}function getBiggestID(){var ids=_.pluck(getRules(),"id");return ids.length?_.max(ids)+1:1}function makeRemoveList(indexes){return indexes=indexes.sort().reverse(),_.map(indexes,function(index){return{data:ipfilter[index],pos:index}})}function validation(rule,param){function validationPort(rule,param){function isValidPort(port){function isValidPortRanges(ranges){return _.every(ranges,function(elem){var startPort=elem.split(":")[0],endPort=elem.split(":")[1];return!(!startPort&&!endPort||startPort&&!funcs.is.port(startPort)||endPort&&!funcs.is.port(endPort)||!(_.isUndefined(startPort)||_.isUndefined(endPort)||""!=startPort&&""!=endPort)||startPort&&endPort&&parseInt(startPort)>=parseInt(endPort))})}function isOverlapPortRanges(ranges){function belongRange(range,port){var rangeStartPort=range.split(":")[0],rangeEndPort=range.split(":")[1];return!!(port&&(rangeStartPort||rangeEndPort)&&(rangeStartPort||port==rangeEndPort)&&(rangeEndPort||port==rangeStartPort)&&port>=rangeStartPort&&rangeEndPort>=port)}return _.some(ranges,function(range){var startPort=range.split(":")[0],endPort=range.split(":")[1];return _.some(_.without(ranges,range),function(elem){return!!belongRange(elem,startPort)||!!belongRange(elem,endPort)})})}if(/\s/.test(port))return!1;var portRanges=port.split(",");return!!isValidPortRanges(portRanges)&&!isOverlapPortRanges(portRanges)}function isWrongFormat(port,comparePort){var arrPort=port.split(","),arrComparePort=comparePort.split(",");return arrPort.length!=arrComparePort.length||_.some(arrPort,function(elem,index){return arrPort[index].split(":").length!=arrComparePort[index].split(":").length})}function isWrongNumber(port,comparePort){function getPortRangeNumber(range){var startPort=range.split(":")[0],endPort=range.split(":")[1];return startPort&&endPort?parseInt(endPort)-parseInt(startPort):1}var arrPort=port.split(","),arrComparePort=comparePort.split(",");return _.some(arrPort,function(elem,index){var portNumber=getPortRangeNumber(elem),comparePortNumber=getPortRangeNumber(arrComparePort[index]);return portNumber!=comparePortNumber})}var port=rule[param];if(!port)return null;if(!isValidPort(port))return"ipflt_invalid_port";var comparePort="ports"==param?rule.portd:rule.ports;return comparePort&&isValidPort(comparePort)?isWrongFormat(port,comparePort)?"ipflt_wrong_port_format":isWrongNumber(port,comparePort)?"ipflt_wrong_port_number":null:null}switch(param){case"ports":case"portd":return validationPort(rule,param)}return null}function isUniqueName(rule,index){return _.some(ipfilter,function(elem,inx){return!(!_.isUndefined(index)&&index==inx||elem.name!=rule.name)})}function conflicts(rule,index){function compareParam(obj1,obj2,param){return!_.has(obj1,param)||!_.has(obj2,param)||obj1[param]==obj2[param]}var comparedFields=["proto","is_ipv6","ips","ipd","ports","portd","direction"],findIndex=_.findIndex(ipfilter,function(elem,inx){return!(!_.isUndefined(index)&&index==inx)&&_.every(comparedFields,_.partial(compareParam,elem,rule))});if(-1==findIndex)return null;var rule=getRule(findIndex);return _.has(rule,"id")?rule.id:rule.name}function accessWillLost(rule,client){function belongSourceRange(){return-1==funcs.ipv4.address.compare(sourceIP[0],network.net)&&1==funcs.ipv4.address.compare(sourceIP[1],network.net)?checkLocalIP():void 0}function checkLocalIP(){if(2==destIP.length){if(-1==funcs.ipv4.address.compare(destIP[0],localIPs[1].Address)&&1==funcs.ipv4.address.compare(destIP[1],localIPs[1].Address))return!0;if(0==funcs.ipv4.address.compare(destIP[0],localIPs[1].Address)||0==funcs.ipv4.address.compare(destIP[1],localIPs[1].Address))return!0}else if(destIP[0]==localIPs[1].Address)return!0}function checkLocalIPs(localIPs,destIP,sourceIP){var result=!1;return _.every(localIPs,function(obj){var localIP=obj.Address;return isBelongIPRange(destIP[0],destIP[1],localIP)&&isLocalRule(rule)&&(result=!0),result}),result}function checkClientIP(clientIP,destIP,sourceIP){return isBelongIPRange(destIP[0],destIP[1],clientIP)&&isAllRange(sourceIP)||isBelongIPRange(sourceIP[0],sourceIP[1],clientIP)&&isAllRange(destIP)}function checkProtocol(){return 2==rule.proto||3==rule.proto?!0:void 0}if(0==rule.state)return!1;if(1!=rule.action)return!1;if(rule.is_ipv6)return!1;if(_.has(rule,"direction")&&3!=rule.direction)return!1;if(checkProtocol())return!1;var localIPs=lan[1].IPv4.StaticIP,clientIP=client.ip,destIP=prepareIP(rule.ipd),sourceIP=prepareIP(rule.ips),network=funcs.ipv4.subnet.getNetwork(localIPs[1].Address,localIPs[1].SubnetMask);return!(!funcs.ipv4.subnet.belongNetwork(network.net,sourceIP[0],network.mask)||!checkLocalIP())||!!checkLocalIPs(localIPs,destIP,sourceIP)||!(!clientIP||!checkClientIP(clientIP,destIP,sourceIP))||2==sourceIP.length&&belongSourceRange()}function isLocalRule(rule){function checkFn(range,ip){return!ip||ip&&funcs.ipv4.subnet.belongNetworkRange(range,ip)}var localIPs=lan[1].IPv4.StaticIP,destIP=prepareIP(rule.ipd),sourceIP=prepareIP(rule.ips);return _.some(localIPs,function(obj){var range=funcs.ipv4.subnet.getNetworkRange(obj.Address,obj.SubnetMask);return checkFn(range,destIP[0])&&checkFn(range,destIP[1])&&checkFn(range,sourceIP[0])&&checkFn(range,sourceIP[1])})}function isBelongIPRange(start,end,ip){
return start&&end?funcs.ipv4.subnet.belongNetworkRange({start:start,end:end},ip):start?start==ip:!!end&&end==ip}function prepareIP(ip){if(""==ip)return["0.0.0.0","255.255.255.255"];if(!funcs.is.ipv4Network(ip))return ip.split("-");var arrIP=ip.split("/"),addr=arrIP[0],mask=funcs.ipv4.mask["long"](arrIP[1]),range=funcs.ipv4.subnet.getNetworkRange(addr,mask);return[range.start,range.end]}function isAllRange(ip){return""==ip||"0.0.0.0/0"==ip}function isSupported(param){function getSupported(){var attrs=__flattenAttrs();return _.chain(attrs).keys().filter(function(path){return attrs[path].supported}).value()}return cache.supported||(cache.supported=getSupported()),_.contains(cache.supported,param)}function isRequired(param){function getRequired(){var attrs=__flattenAttrs();return _.chain(attrs).keys().filter(function(path){return attrs[path].required}).value()}return cache.required||(cache.required=getRequired()),_.contains(cache.required,param)}function __flattenAttrs(rootPath){var result={},attrs=rootPath?__getAttrsByPath(rootPath):attributes;return _.each(attrs,function(elem,key){if("__Template"!=key){var path=rootPath?rootPath+"."+key:key;elem.__Template?_.extend(result,__flattenAttrs(path)):result[path]=elem}}),result}function __getAttrsByPath(path){var result=null;return _.each(path.split("."),function(key){result=result?result[key]:attributes[key]}),result}if(!(this instanceof IPFilter))return new IPFilter(ipfilter,lan,attributes);var ipfilter=funcs.deepClone(ipfilter),lan=funcs.deepClone(lan),attributes=funcs.deepClone(attributes),cache={},actionMap=[{name:"act_allow",value:0},{name:"act_deny",value:1}],protoMap=[{name:"TCP/UDP",value:0},{name:"TCP",value:1},{name:"UDP",value:2},{name:"ICMP",value:3},{name:"all",value:4}],directionMap=[{name:"ipflt_lan_to_wan",value:1},{name:"ipflt_wan_to_lan",value:2},{name:"ipflt_lan_to_fw",value:3},{name:"ipflt_wan_to_fw",value:4}];return{getRules:getRules,getRule:getRule,getActions:getActions,getProtocols:getProtocols,getDirections:getDirections,getBiggestID:getBiggestID,makeRemoveList:makeRemoveList,validation:validation,conflicts:conflicts,accessWillLost:accessWillLost,isLocalRule:isLocalRule,getDefaultTemplate:getDefaultTemplate,isSupported:isSupported,isRequired:isRequired,isUniqueName:isUniqueName}}var _=__webpack_require__(4),funcs=__webpack_require__(5);funcs.is=__webpack_require__(103),funcs.ipv4=__webpack_require__(104),module.exports=IPFilter},function(module,exports,__webpack_require__){"use strict";module.exports={Helper:__webpack_require__(281),converter:__webpack_require__(282)}},function(module,exports,__webpack_require__){"use strict";var _=__webpack_require__(4),funcs=__webpack_require__(5);module.exports=function(){function getDefaultRule(attrs){var defaultModel=funcs.newConfig.makeDefaultModel(attrs);return defaultModel.Source.Iface="all",defaultModel.Dest.Ports&&(defaultModel.Dest.Ports={1:defaultModel.Dest.Ports},defaultModel.Dest.Ports[1].PortType="list"),defaultModel.Source.Ports&&(defaultModel.Source.Ports={1:defaultModel.Source.Ports},defaultModel.Source.Ports[1].PortType="list"),defaultModel}function getProtocolList(allList,possibleList){return _.chain(allList).intersection(possibleList).map(function(proto){return{name:proto,value:proto}}).value()}function getEmptyIfaces(rules){var output=[];return _.each(rules,function(elem){elem.Source.Iface||output.push(elem.Name)}),output.join(", ")}function getUseSourcePorts(allUsePorts,currentRule,index){function filterVserverRule(rule,currentRule,index){var proto=currentRule.Proto,iface=currentRule.Source.Iface;if(("rtp"==rule.Section||"fax"==rule.Section)&&"TCP"==proto)return!0;if(rule.Transport&&"sip"==rule.Section){if("UDP"==rule.Transport&&"TCP"==proto)return!0;if("TCP"==rule.Transport&&"UDP"==proto)return!0}if("vserver"!=rule.Section&&"firewall"!=rule.Section)return!1;if(!_.isUndefined(index)&&rule.Id==index)return!0;if(!_.isUndefined(currentRule.__idLoopDNAT)&&rule.Id==currentRule.__idLoopDNAT)return!0;if("all"!=iface&&"all"!=rule.Iface&&iface!=rule.Iface)return!0;if("TCP/UDP"!=proto&&"TCP/UDP"!=rule.Proto&&proto!=rule.Proto)return!0;if(_.has(currentRule,"ids")){var ids=_.pluck(currentRule.ids,"__id"),loopDnat=_.pluck(currentRule.ids,"__idLoopDNAT");if(_.contains(ids,rule.Id)||_.contains(loopDnat,rule.Id))return!0}return!1}var output=[];return _.each(allUsePorts,function(rule){filterVserverRule(rule,currentRule,index)||output.push({startPort:rule.Ports.Start,endPort:rule.Ports.End})}),output}function isPrivateIP(lans,ip){function getPrivateSubnetRanges(lan){return _.map(lan,function(elem){return""!=elem.Address&&""!=elem.SubnetMask?funcs.ipv4.subnet.getNetworkRange(elem.Address,elem.SubnetMask):void 0})}var ranges=getPrivateSubnetRanges(lans);return _.some(ranges,function(range){return!!_.isUndefined(range)||funcs.ipv4.subnet.belongNetworkRange(range,ip)})}function validation(rule,index,config){function validationName(rule,index){function isUniqName(name){return!_.contains(usedNames(config.Rules,index),name)}var result=[];return isUniqName(rule.Name)||result.push("msg_error_value_is_not_uniq"),result}function validationDestIp(rule){var result=[],ips=funcs.fetchBranch(rule,"Dest.IP.");if(!ips||!ips.length||!ips[0])return result;var ip=ips[0];return funcs.is.ipv4(ip)||result.push("msg_invalid_ipv4"),"wakeonlan"==rule.Type||isPrivateIP(config.LAN,ip)||result.push("vservers_error_ipd_not_belong_subnets"),result}function usedNames(rules,without){var result=[];return _.each(rules,function(elem,index){(_.isUndefined(without)||without!=elem.__id)&&result.push(elem.Name)}),result}return{name:validationName(rule,index),destIp:validationDestIp(rule)}}function ipValidation(addr,type,rule,inx){function getUsedAddrs(rule,inx){return rule?_.chain(rule.Source.IP).filter(function(r,i){return!!_.isUndefined(inx)||i!=inx}).value():[]}var publicIP="public"==type?addr:rule.Source.IP,privateIP="private"==type?addr:rule.Dest.IP[0];if(!funcs.is.ipv4(publicIP.split("/")[0])||!funcs.is.ipv4(privateIP))return null;if("public"==type&&rule){var usedAddrs=getUsedAddrs(rule,inx);if(_.some(_.compact(usedAddrs),function(elem){return addr==elem}))return"msg_ip_address_is_used"}if(_.isEmpty(publicIP)||_.isEmpty(privateIP))return null;if(_.isArray(publicIP)){if(_.some(publicIP,function(ip){ip=ip.split("/");var publicAddr=ip[0],publicMask=ip[1]?ip[1]:"32";if(_.isEmpty(publicAddr))return!1;var publicNetwork=funcs.ipv4.subnet.getNetworkRange(publicAddr,funcs.ipv4.mask["long"](publicMask));return funcs.ipv4.subnet.belongNetworkRange(publicNetwork,privateIP)}))return"ipsec_local_remote_intersect_msg"}else{publicIP=publicIP.split("/");var publicAddr=publicIP[0],publicMask=publicIP[1]?publicIP[1]:"32",publicNetwork=funcs.ipv4.subnet.getNetworkRange(publicAddr,funcs.ipv4.mask["long"](publicMask));if(funcs.ipv4.subnet.belongNetworkRange(publicNetwork,privateIP))return"ipsec_local_remote_intersect_msg"}return null}return{getDefaultRule:getDefaultRule,getProtocolList:getProtocolList,getEmptyIfaces:getEmptyIfaces,getUseSourcePorts:getUseSourcePorts,isPrivateIP:isPrivateIP,validation:validation,ipValidation:ipValidation}}},function(module,exports,__webpack_require__){"use strict";!function(){function dsysinitToNative(input){function prepareRules(input){function getVserversRules(config){var rules=funcs.newConfig.normalize(funcs.fetchBranch(config,rulesPath));return _.chain(rules).map(function(rule,inst){return rule.__inst=inst,rule}).filter(function(rule){return!("DNAT"!=rule.Action&&"DNAT-"!=rule.Action||rule.Dest.Zone!=zonesPath.dest||rule.Source.Zone!=zonesPath.source||!rule.Ports.Dest[1]||-1==!rule.NATPort.Start||rule.Source.Iface==lanIface)}).value()}function getNATLoopbackRules(config,vserversRules){var rules=funcs.newConfig.normalize(funcs.fetchBranch(config,rulesPath));return _.map(vserversRules,function(rule){var natLoopDnat=_.findKey(rules,function(c){return!(c.Source.Zone!=zonesPath.dest||c.Dest.Zone!=zonesPath.dest||"DNAT"!=c.Action||c.Source.Iface!=lanIface||!c.OrigNATLinks[1]||c.OrigNATLinks[1].Link!=zonesPath.source+"Interfaces."&&!~c.OrigNATLinks[1].Link.indexOf("Connection")||!c.Dest.Address[1]||c.Dest.Address[1].IPStart!=rule.Dest.Address[1].IPStart||!c.Ports.Dest[1]||c.Ports.Dest[1].PortStart!=rule.Ports.Dest[1].PortStart||c.Ports.Dest[1].PortEnd!=rule.Ports.Dest[1].PortEnd||c.NATPort.PortStart!=rule.NATPort.PortStart||c.NATPort.PortEnd!=rule.NATPort.PortEnd)}),natLoopSnat=_.findKey(rules,function(c){return!!(c.Source.Zone==zonesPath.source&&c.Dest.Zone==zonesPath.dest&&"SNAT"==c.Action&&c.Dest.Iface==lanIface&&c.Source.IPLinks[1]&&c.Source.IPLinks[1].Link==lanIface&&c.OrigNATLinks[1]&&(c.OrigNATLinks[1].Link==zonesPath.source+"Interfaces."||~c.OrigNATLinks[1].Link.indexOf("Connection"))&&c.Dest.Address[1]&&c.Dest.Address[1].IPStart==rule.Dest.Address[1].IPStart&&c.Ports.Dest[1]&&c.Ports.Dest[1].PortStart==rule.NATPort.PortStart&&c.Ports.Dest[1].PortEnd==rule.NATPort.PortEnd&&-1==c.NATPort.PortStart&&-1==c.NATPort.PortEnd)});return{vserver:rule,natLoopDnat:-1!=natLoopDnat?natLoopDnat:void 0,natLoopSnat:-1!=natLoopSnat?natLoopSnat:void 0}})}function groupRules(rules){var result=[],groups=[];return rules&&rules.forEach(function(rule){var ruleId=rule.vserver?rule.vserver.__inst:rule.__inst,group=groups[rulesPath+ruleId+"."];result.push(group?[rule].concat(group):rule)}),result}var vserversRules=getVserversRules(input.config);return vserversRules=input.snatFlag?getNATLoopbackRules(input.config,vserversRules):vserversRules,groupRules(vserversRules)}function getProto(proto){var output=[],values=_.map(proto,function(elem){return elem.Value});return _.contains(values,"tcp")&&output.push("TCP"),_.contains(values,"udp")&&output.push("UDP"),output.join("/")}function getRulePorts(rule,type){function getPorts(rule,type){return"NATPort"==type?rule.NATPort:rule.Ports.Dest[1]}if(!_.isArray(rule))return{1:rule.vserver?getPorts(rule.vserver,type):getPorts(rule,type)};var ports=_.map(rule,function(elem){return elem.vserver?getPorts(elem.vserver,type):getPorts(elem,type)});return ports}function getRulePattern(rule){return _.isArray(rule)?_.find(rule,function(elem){return elem.vserver?getType(elem.vserver.Pattern):"custom"}):rule.vserver?getType(rule.vserver.Pattern):"custom"}function preparePort(ports,portType,pattern){if(ports=funcs.newConfig.normalize(ports),"start"==portType){var portString=[];return _.each(ports,function(port){if(port.PortStart&&-1!=port.PortStart){var portElem=port.PortStart.toString();port.PortEnd&&-1!=port.PortEnd&&"ftp"!=pattern&&(portElem+=":"+port.PortEnd.toString()),portString.push(portElem)}}),portString.join(",")}return"end"==portType?1==_.size(ports)&&"ftp"==pattern?getPort(ports[1].PortEnd):"":void 0}function getPort(port){return-1!=port&&0!=port&&port?port.toString():""}function getAddr(addrs){return _.chain(funcs.newConfig.normalize(addrs)).values().map(function(elem){var output="";return elem.IPStart&&(output+=elem.IPStart),output}).value()}function getIface(iface){return iface||"all"}function getUsedSourcePorts(config){function isURLFilterRule(rule){return rule.URLLists&&rule.URLLists.Links&&_.size(funcs.newConfig.normalize(rule.URLLists.Links))}var result=[],rules=funcs.newConfig.normalize(funcs.fetchBranch(config,rulesPath)),redirect=funcs.newConfig.normalize(funcs.fetchBranch(config,redirectPath)),redirectRules=[];redirect&&(redirectRules=_.map(redirect,function(item){var rules=funcs.newConfig.normalize(item.RulesFirewall);return _.pluck(rules,"Link")}),redirectRules=_.flatten(redirectRules));var miscRules=miscConverter.dsysinitToNative(config);return _.each(rules,function(rule,id){if(!(isURLFilterRule(rule)||"Telnet"!=rule.Pattern&&!_.some(rule.CTState,function(elem){return elem.Value&&"NEW"==elem.Value||"ESTABLISHED"==elem.Value||"RELATED"==elem.Value})||_.contains(redirectRules,rulesPath+id+".")||"SNAT"==rule.Action||miscRules&&(id==miscRules.passThrough.pptpId||id==miscRules.passThrough.l2tpId||id==miscRules.passThrough.ipsecId))){var input={Section:"firewall",Id:id,Iface:getIface(rule.Source.Iface),Proto:getProto(rule.Proto)},ports=funcs.newConfig.normalize(rule.Ports.Dest);_.each(ports,function(obj){input.Ports={Start:getPort(obj.PortStart),End:getPort(obj.PortEnd)},result.push(_.clone(input))})}}),result}function getConns(wan,cfg){var list=[];return _.each(wan,function(obj,key){obj.Connection&&(_.contains(["PPPoEv6","IPv6oE"],key)||_.each(obj.Connection,function(elem){list.push(elem)}))}),list}function getLanAddrs(input){var result=[];return _.each(input.LAN,function(elem){_.each(elem.IPv4.StaticIP,function(addr){result.push(addr)})}),result}function getSNATEnable(snatFlag,rules){var rule=_.isArray(rules)?rules[0]:rules;return snatFlag?!_.isEmpty(rule.natLoopDnat)&&!_.isEmpty(rule.natLoopSnat):void 0}function getType(pattern){switch(pattern){case"Custom":return"custom";case"HTTP":return"http";case"HTTPS":return"https";case"DNS":return"dns";case"SMTP":return"smtp";case"POP3":return"pop3";case"SSH":return"ssh";case"FTP":return"ftp";case"SFTP":return"sftp";case"Telnet":return"telnet";case"PPTP":return"pptp";case"PCAnyWhere":return"pcanywhere";case"VNC":return"vnc";case"TFTP":return"tftp";case"RDP":return"rdp";case"WakeOnLAN":return"wakeonlan";default:return"custom"}}function getVservRules(rule){return _.isArray(rule)?rule[0]:rule}var pattern=T({"->":["$input","Rules","Ifaces","UsedSourcePorts","LAN"],$input:":external",Rules:{"->":["$rule","$ruleVserv","Source","Dest","ids","__obj"],"{$rule, $index}":["$parent",function(p){return prepareRules(p.$input)}],$mainVserv:["$rule*",function(r){return getVservRules(r)}],$ruleVserv:["$mainVserv*",function(mv){return mv.vserver?mv.vserver:mv}],ids:{"->":!0,"{$rules}":["$parent",function(p){return _.isArray(p.$rule)?p.$rule:[p.$rule]}],__id:["$rules*",function(r){return r.vserver?r.vserver.__inst:r.__inst}],__idLoopDNAT:["$rules*",function(r){return r.natLoopDnat}],__idLoopSNAT:["$rules*",function(r){return r.natLoopSnat}]},__id:["$ruleVserv*",function(r){return r.__inst}],__idLoopDNAT:["$mainVserv*",function(r){return r.natLoopDnat}],__idLoopSNAT:["$mainVserv*",function(r){return r.natLoopSnat}],__protoObj:["$ruleVserv*",function(r){return funcs.newConfig.normalize(r.Proto)}],__addrObj:["$ruleVserv*",function(r){return funcs.newConfig.normalize(r.Source.Address)}],__obj:{"->":!0,"{$rules, $id}":["$parent",function(p){return _.isArray(p.$rule)?p.$rule:[p.$rule]}],$vserv:["$rules*",function(r){return r.vserver?r.vserver:r}],":":["$vserv*",function(r){return r.__inst}],__protoObj:["$vserv*",function(r){return funcs.newConfig.normalize(r.Proto)}],__addrObj:["$vserv*",function(r){return funcs.newConfig.normalize(r.Source.Address)}]},Enable:["$ruleVserv*",function(r){return r.Enable}],Name:["$ruleVserv*",function(r){return r.Name}],SNAT:["$parent","$rule*",function(p,r){return getSNATEnable(p.$input.snatFlag,r)}],Proto:["$ruleVserv*",function(r){return getProto(r.Proto)}],Type:["$ruleVserv*",function(r){return getType(r.Pattern)}],Source:{"->":["?","IP","Ports"],$rule:["$parent",function(p){return p.$ruleVserv}],$inputRule:["$parent",function(p){return p.$rule}],"?":["$rule",function(r){return!!r}],Iface:["$rule",function(r){return getIface(r.Source.Iface)}],IP:{"->":!0,$rule:["$parent",function(p){return p.$rule}],"{$addr}":["$rule",function(r){return getAddr(r.Source.Address)}],$return:["$addr",function(a){return a}]},Ports:{"->":!0,$rule:["$parent",function(p){return p.$inputRule}],$port:["$rule*",function(r){return getRulePorts(r,"DestPort")}],$natPort:["$rule",function(r){return getRulePorts(r,"NATPort")}],":":"1",Start:["$port*","$rule",function(p,r){return p?preparePort(p,"start",getRulePattern(r)):""}],End:["$port*","$rule",function(p,r){return p?preparePort(p,"end",getRulePattern(r)):""}],PortType:["Start","End","$natPort",function(s,e,np){return"list"}]}},Dest:{"->":["?","IP","Ports"],$rule:["$parent",function(p){return p.$ruleVserv}],$inputRule:["$parent",function(p){return p.$rule}],"?":["$rule",function(r){return!!r}],IP:{"->":!0,$rule:["$parent",function(p){return p.$rule}],"{$addr}":["$rule",function(r){return getAddr(r.Dest.Address)}],$return:["$addr",function(a){return a}]},Ports:{"->":!0,$rule:["$parent",function(p){return p.$inputRule}],":":"1",$ports:["$rule",function(r){return getRulePorts(r,"NATPort")}],$destPort:["$rule*",function(r){return getRulePorts(r,"DestPort")}],Start:["$ports*","$rule",function(p,r){return preparePort(p,"start",getRulePattern(r))}],End:["$ports*","$rule",function(p,r){return preparePort(p,"end",getRulePattern(r))}],PortType:["Start","End","$destPort",function(s,e,dp){return"list"}]}}},UsedSourcePorts:["$input",function(i){return getUsedSourcePorts(i.config)}],Ifaces:{"->":!0,$config:["$parent",function(p){return p.$input.config}],$wan:["$config*",function(config){return wanConverter.cpeToNative.config(config)}],"{$conn}":["$config","$wan",function(cfg,w){return getConns(w,cfg)}],Name:["$conn*",function(c){return c.Name}],Value:["$conn*",function(c){return c.__Link}]},LAN:{"->":!0,$config:["$parent",function(p){return p.$input.config}],$lan:["$config",function(config){return lanConverter.cpeToNative.config(config)}],"{$addr}":["$lan*",function(lan){return getLanAddrs(lan)}],$return:["$addr",function(a){return a}]}});return pattern.build({$input:input})}function nativeToDsysinit(input){function getRules(rules){function getLoopDNAT(rule){return{__id:rule.__idLoopDNAT,Action:"DNAT",Name:rule.Name,Type:rule.Type,Source:{Iface:lanIface,Zone:zonesPath.dest,Ports:rule.Source.Ports},Dest:{IP:rule.Dest.IP,Zone:zonesPath.dest,Ports:rule.Dest.Ports},DestLinks:"all"!=rule.Source.Iface?rule.Source.Iface:zonesPath.source+"Interfaces.",Enable:rule.SNAT,Proto:rule.Proto,__protoObj:rule.__protoObj}}function getLoopSNAT(rule){return{__id:rule.__idLoopSNAT,Action:"SNAT",Name:rule.Name,Type:rule.Type,Source:{Zone:zonesPath.source,Ports:rule.Dest.Ports},Dest:{IP:rule.Dest.IP,Iface:lanIface,Zone:zonesPath.dest,Ports:rule.Source.Ports},DestLinks:"all"!=rule.Source.Iface?rule.Source.Iface:zonesPath.source+"Interfaces.",Enable:rule.SNAT,Proto:rule.Proto,__protoObj:rule.__protoObj}}var result=[];return _.each(rules,function(rule){_.has(rule,"ids")?_.each(rule.ids,function(elem){var obj=funcs.deepClone(rule);obj.__id=elem.__id,obj.__idLoopDNAT=elem.__idLoopDNAT,obj.__idLoopSNAT=elem.__idLoopSNAT,rule.__obj&&rule.__obj[elem.__id]&&(obj.__protoObj=rule.__obj[elem.__id].__protoObj,obj.__addrObj=rule.__obj[elem.__id].__addrObj),obj.DestLinks="all"!=rule.Source.Iface?rule.Source.Iface:zonesPath.source+"Interfaces.",result.push(obj),_.has(obj,"SNAT")&&obj.SNAT&&rule.Enable&&(result.push(getLoopDNAT(obj)),result.push(getLoopSNAT(obj)))}):(rule.DestLinks="all"!=rule.Source.Iface?rule.Source.Iface:zonesPath.source+"Interfaces.",result.push(rule),_.has(rule,"SNAT")&&rule.SNAT&&rule.Enable&&(result.push(getLoopDNAT(rule)),result.push(getLoopSNAT(rule))))}),result}function getProto(proto,initProtoObj){var output={},values=[];return/TCP/.test(proto)&&values.push("tcp"),/UDP/.test(proto)&&values.push("udp"),_.each(values,function(value,index){var inst=_.findKey(initProtoObj,function(e){return e.Value==value})||"new_inst_"+index;output[inst]={Value:value}}),output}function getAddrs(addrs,initAddrsObj){var output={};return _.each(addrs,function(value,index){var inst=_.findKey(initAddrsObj,function(e){return e.IPStart==value})||"new_inst_"+index;output[inst]=value}),output}function preparePort(value){return""==value?-1:parseInt(value)}function getPattern(pattern){switch(pattern){case"custom":return"Custom";case"http":return"HTTP";case"https":return"HTTPS";case"dns":return"DNS";case"smtp":return"SMTP";case"pop3":return"POP3";case"ssh":return"SSH";case"ftp":return"FTP";case"sftp":return"SFTP";case"telnet":return"Telnet";case"pptp":return"PPTP";case"pcanywhere":return"PCAnyWhere";case"vnc":return"VNC";case"tftp":return"TFTP";case"rdp":return"RDP";case"wakeonlan":return"WakeOnLAN";default:return"Custom"}}var pattern=T({"->":!0,$input:":external",Device:{Firewall:{IPv4:{Rules:{"->":["$rule","Ports","NATPort","Dest","Source","OrigNATLinks"],$input:["$root",function(r){return r.$input}],$rules:["$input",function(i){return i.Rules}],"{$rule, $i}":["$rules",function(rs){return getRules(rs)}],":":["$rule*","$i",function(r,i){return r.__id||"new_inst_"+i}],Enable:["$rule*",function(r){return r.Enable}],Name:["$rule*",function(r){return r.Name}],Action:["$rule*",function(r){return r.Action?r.Action:"WakeOnLAN"==getPattern(r.Type)?"DNAT-":"DNAT"}],CTState:{1:{Value:"NEW"},2:{Value:"ESTABLISHED"},3:{Value:"RELATED"}},OrigNATLinks:{"->":["$rule","1"],$rule:["$parent",function(p){return p.$rule}],":":1,Link:["$rule*",function(r){return r.DestLinks}]},Pattern:["$rule*",function(r){return getPattern(r.Type)}],Proto:["$rule*",function(r){return getProto(r.Proto,r.__protoObj)}],Ports:{"->":["?","$rule","Dest"],"?":["$parent",function(p){return!!p.$rule}],$rule:["$parent",function(p){return p.$rule}],Dest:{"->":["$ports","1"],$ports:["$parent",function(p){return p.$rule.Source.Ports[1]}],1:{"->":!0,$ports:["$parent",function(p){return p.$ports}],PortStart:["$ports",function(p){return preparePort(p.Start)}],PortEnd:["$ports",function(p){return preparePort(p.End)}]}}},NATPort:{"->":["?","$ports"],"?":["$parent",function(p){return!!p.$rule&&"SNAT"!=p.$rule.Action}],$ports:["$parent",function(p){return p.$rule.Dest.Ports[1]}],PortStart:["$ports",function(p){return preparePort(p.Start)}],PortEnd:["$ports",function(p){return preparePort(p.End)}]},Dest:{"->":["?","$rule","Port","Address"],"?":["$parent",function(p){return!!p.$rule}],$rule:["$parent",function(p){return p.$rule}],Zone:["$rule*",function(r){return r.Dest.Zone||zonesPath.dest}],Address:{"->":!0,"{$addr, $index}":["$parent",function(p){return p.$rule.Dest.IP}],":":["$index",function(i){return i+1}],IPStart:["$addr",function(a){return a}],IPEnd:""},Iface:["$rule*",function(r){return r.Dest.Iface}]},Source:{"->":["?","$rule","Address","IPLinks"],"?":["$parent",function(p){return!!p.$rule}],$rule:["$parent",function(p){return p.$rule}],Iface:["$rule",function(r){return"all"!=r.Source.Iface?r.Source.Iface:""}],Zone:["$rule*",function(r){return r.Source.Zone||zonesPath.source}],Address:{"->":!0,"{$addr, $index}":["$parent",function(p){return getAddrs(_.compact(p.$rule.Source.IP),p.$rule.__addrObj)}],":":["$index",function(i){return i}],IPStart:["$addr",function(a){return a}],IPEnd:""},IPLinks:{"->":["?"],$rule:["$parent",function(p){return p.$rule}],"?":["$rule",function(r){return _.has(r,"Action")&&"SNAT"==r.Action}],1:{Link:lanIface,UseSubnet:!0}}}}}}}});return pattern.build({$input:input})}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),wanConverter=__webpack_require__(283),lanConverter=__webpack_require__(166),miscConverter=__webpack_require__(286),rulesPath="Device.Firewall.IPv4.Rules.",redirectPath="Device.Services.Redirect.",zonesPath={source:"Device.Firewall.IPv4.Zones.2.",dest:"Device.Firewall.IPv4.Zones.3."},lanIface="Device.Network.Interface.Bridge.1.";module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}}()},function(module,exports,__webpack_require__){"use strict";module.exports={cpeToNative:__webpack_require__(284),nativeToCpe:__webpack_require__(285)}},function(module,exports,__webpack_require__){"use strict";module.exports={config:__webpack_require__(196)}},function(module,exports,__webpack_require__){"use strict";module.exports={config:__webpack_require__(195)}},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function dsysinitToNative(data){function getIface(data){var ifaces=funcs.newConfig.normalize(data.Interfaces),keys=_.keys(ifaces);return keys.length?keys[0]:void 0}function getRule(data,identifer){function getPPTP(rules){return rules=funcs.newConfig.normalize(rules),_.chain(rules).map(function(elem,id){return elem.__id=id,elem}).filter(function(elem){if(elem.Dest.Zone!=zonesPath.dest||elem.Source.Zone!=zonesPath.source||"DROP"!=elem.Action)return!1;var proto=funcs.newConfig.normalize(elem.Proto);if(0==_keys2["default"](proto).length||"tcp"!=proto[1].Value)return!1;var ports=funcs.newConfig.normalize(elem.Ports.Dest);if(0==_keys2["default"](ports).length||1723!=ports[1].PortStart)return!1;var destAddr=funcs.newConfig.normalize(elem.Dest.Address),sourceAddr=funcs.newConfig.normalize(elem.Source.Address);if(0!=_keys2["default"](destAddr).length||0!=_keys2["default"](sourceAddr).length)return!1;if(elem.URLLists){var urlList=funcs.newConfig.normalize(elem.URLLists.Links);if(0!=_keys2["default"](urlList).length)return!1}return!0}).value()}function getL2TP(rules){return rules=funcs.newConfig.normalize(rules),_.chain(rules).map(function(elem,id){return elem.__id=id,elem}).filter(function(elem){if(elem.Dest.Zone!=zonesPath.dest||elem.Source.Zone!=zonesPath.source||"DROP"!=elem.Action)return!1;var proto=funcs.newConfig.normalize(elem.Proto);if(0==_keys2["default"](proto).length||"udp"!=proto[1].Value)return!1;var ports=funcs.newConfig.normalize(elem.Ports.Dest);if(0==_keys2["default"](ports).length||1701!=ports[1].PortStart)return!1;var destAddr=funcs.newConfig.normalize(elem.Dest.Address),sourceAddr=funcs.newConfig.normalize(elem.Source.Address);if(0!=_keys2["default"](destAddr).length||0!=_keys2["default"](sourceAddr).length)return!1;if(elem.URLLists){var urlList=funcs.newConfig.normalize(elem.URLLists.Links);if(0!=_keys2["default"](urlList).length)return!1}return!0}).value()}function getIPsec(rules){return rules=funcs.newConfig.normalize(rules),_.chain(rules).map(function(elem,id){return elem.__id=id,elem}).filter(function(elem){if(elem.Dest.Zone!=zonesPath.dest||elem.Source.Zone!=zonesPath.source||"DROP"!=elem.Action)return!1;var proto=funcs.newConfig.normalize(elem.Proto);if(0==_keys2["default"](proto).length||"udp"!=proto[1].Value)return!1;var ports=funcs.newConfig.normalize(elem.Ports.Dest);if(0==_keys2["default"](ports).length||500!=ports[1].PortStart||4500!=ports[2].PortStart)return!1;var destAddr=funcs.newConfig.normalize(elem.Dest.Address),sourceAddr=funcs.newConfig.normalize(elem.Source.Address);if(0!=_keys2["default"](destAddr).length||0!=_keys2["default"](sourceAddr).length)return!1;if(elem.URLLists){var urlList=funcs.newConfig.normalize(elem.URLLists.Links);if(0!=_keys2["default"](urlList).length)return!1}return!0}).value()}var rule;switch(identifer){case"pppoe":rule=funcs.fetchBranch(data,paths.settings+"Passthrough.PPPoE.");break;case"sip":rule=funcs.fetchBranch(data,paths.settings+"SIP.");break;case"rtsp":rule=funcs.fetchBranch(data,paths.settings+"RTSP.");break;case"pptp":var rules=funcs.fetchBranch(data,paths.firewall);rule=getPPTP(rules);break;case"l2tp":var rules=funcs.fetchBranch(data,paths.firewall);rule=getL2TP(rules);break;case"ipsec":var rules=funcs.fetchBranch(data,paths.firewall);rule=getIPsec(rules);break;case"nath323":rule=funcs.fetchBranch(data,paths.settings+"NATH323.")}return _.isArray(rule)?rule.length>0?rule[0]:{Enable:!0}:rule?rule:{Enable:!1}}var pattern=T({"->":["$data","netfilter","passThrough","igmp"],$data:":external",igmp:{"->":!0,$igmp:["$root",function(r){return funcs.fetchBranch(r.$data,paths.igmp)}],enable:["$igmp*",function(i){return i?i.Enable:void 0}],mode:["$root",function(r){return funcs.fetchBranch(r.$data,paths.deviceMode)}],udpxyEnable:["$root","mode",function(r,m){return"Firewall"!=m&&funcs.fetchBranch(r.$data,paths.udpxy)}],version:["$igmp*",function(i){return i?i.Version:void 0}]},mld:{"->":!0,$mld:["$root",function(r){return funcs.fetchBranch(r.$data,paths.mld)}],"?":["$mld",function(m){return!!m}],enabled:["$mld*",function(m){return m.Enable}],version:["$mld*",function(m){return m.Version}]},netfilter:{netfilter:{"->":!0,$rules:["$root",function(r){return r.$data}],$sip:["$rules",function(r){return getRule(r,"sip")}],sip:["$sip",function(s){return s.Enable}],$rtsp:["$rules",function(r){return getRule(r,"rtsp")}],rtsp:["$rtsp",function(r){return r.Enable}],$nath323:["$rules",function(r){return __autoconf.BR2_PACKAGE_ANWEB_NAT_H323?getRule(r,"nath323"):void 0}],nath323:["$nath323*",function(nh){return nh.Enable}]}},passThrough:{"->":["$pptp","$l2tp","$ipsec"],$rules:["$root",function(r){return r.$data}],$pppoe:["$rules",function(r){return getRule(r,"pppoe")}],enabled:["$pppoe",function(p){return p.Enable}],iface:["$pppoe",function(p){return getIface(p)}],$pptp:["$rules",function(r){return getRule(r,"pptp")}],pptp:["$pptp",function(p){return!p.Enable}],pptpId:["$pptp",function(p){return p.__id}],$l2tp:["$rules",function(r){return getRule(r,"l2tp")}],l2tp:["$l2tp",function(l){return!l.Enable}],l2tpId:["$l2tp",function(l){return l.__id}],$ipsec:["$rules",function(r){return getRule(r,"ipsec")}],ipsec:["$ipsec",function(i){return!i.Enable}],ipsecId:["$ipsec",function(i){return i.__id}]}});return pattern.build({$data:data})}function nativeToDsysinit(data){function getRules(rules){function getPPTP(enabled){var pptp={Source:{Zone:zonesPath.source},Dest:{Zone:zonesPath.dest},Proto:{1:{Value:"tcp"}},Ports:{Dest:{1:{PortStart:1723}}},Action:"DROP",Enable:!enabled};return pptp}function getL2TP(enabled){var l2tp={Source:{Zone:zonesPath.source},Dest:{Zone:zonesPath.dest},Proto:{1:{Value:"udp"}},Ports:{Dest:{1:{PortStart:1701}}},Action:"DROP",Enable:!enabled};return l2tp}function getIPsec(enabled){var ipsec={Source:{Zone:zonesPath.source},Dest:{Zone:zonesPath.dest},Proto:{1:{Value:"udp"}},Ports:{Dest:{1:{PortStart:500},2:{PortStart:4500}}},Action:"DROP",Enable:!enabled};return ipsec}var result={};if(_.has(rules,"pptp")){var index=rules.pptpId?rules.pptpId:"+1";result[index]=getPPTP(rules.pptp)}return _.has(rules,"l2tp")&&(index=rules.l2tpId?rules.l2tpId:"+2",result[index]=getL2TP(rules.l2tp)),_.has(rules,"ipsec")&&(index=rules.ipsecId?rules.ipsecId:"+3",result[index]=getIPsec(rules.ipsec)),result}var pattern=T({"->":["$data","Device"],$data:":external",Device:{Network:{Settings:{Passthrough:{PPPoE:{"->":!0,Interfaces:{"->":["?"],$passThrough:["$root",function(r){return r.$data.passThrough.enabled?r.$data.passThrough:void 0}],":":["$passThrough*",function(pt){return pt.iface?pt.iface:"new_inst"}],Type:["$passThrough*",function(pt){return"Both"}],Link:["$passThrough*",function(pt){return"Device.Network.Group.1."}]},Enable:["$root",function(r){return r.$data.passThrough.enabled}]}},SIP:{"->":!0,Enable:["$root",function(r){return r.$data.netfilter.netfilter.sip}]},RTSP:{"->":!0,Enable:["$root",function(r){return r.$data.netfilter.netfilter.rtsp}]},NATH323:{"->":["?"],"?":["$root",function(r){return __autoconf.BR2_PACKAGE_ANWEB_NAT_H323}],Enable:["$root",function(r){return r.$data.netfilter.netfilter.nath323}]}}},Firewall:{IPv4:{"->":!0,Rules:["$root",function(r){return getRules(r.$data.passThrough)}]}},Services:{IGMPX:{"->":!0,$igmp:["$root",function(r){return r.$data.igmp}],Enable:["$igmp*",function(i){return i.enable}],Version:["$igmp*",function(i){return i.version}]},MLDProxy:{"->":!0,$mld:["$root",function(r){return r.$data.mld}],"?":["$mld",function(m){return!!m}],Enable:["$mld*",function(m){return m.enabled}],Version:["$mld*",function(m){return m.version}]}}}});return pattern.build({$data:data})}var _keys=__webpack_require__(78),_keys2=_interopRequireDefault(_keys),T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),paths={settings:"Device.Network.Settings.",firewall:"Device.Firewall.IPv4.Rules.",igmp:"Device.Services.IGMPX.",udpxy:"Device.Services.Udpxy.Enable",deviceMode:"Device.DeviceInfo.DeviceMode",mld:"Device.Services.MLDProxy."},zonesPath={source:"Device.Firewall.IPv4.Zones.3.",dest:"Device.Firewall.IPv4.Zones.2."},__autoconf="undefined"!=typeof autoconf?autoconf:{};module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(288)}},function(module,exports,__webpack_require__){"use strict";var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5);

module.exports={dsysinitToNative:function(data){function getKey(mounpoint){return mounpoint.replace("/mnt/","")}function getPath(parentPath,id,mountpoint){return parentPath+"/"+(mountpoint?getKey(mountpoint):id)}var pattern=T({"->":!0,$data:":external","?":["$file",function(f){return!!f}],"{$file, $id}":["$data",function(d){return _.has(d.Files,"Storage")?funcs.newConfig.normalize(d.Files.Storage):d.Files}],Type:["$data","$file",function(d,f){return d.Root?"root":f.Dir?"folder":"file"}],Free:["$file",function(f){return _.isUndefined(f.Space)?"-":funcs.lookSize(1024*f.Space.Free*1024).toString()}],Total:["$file",function(f){return _.isUndefined(f.Space)?"-":funcs.lookSize(1024*f.Space.Total*1024).toString()}],Filesystem:["$file",function(f){return f.Filesystem?f.Filesystem:"UNKNOWN"}],Key:["$file","$id",function(f,i){return f.Mountpoint?getKey(f.Mountpoint):f.Name}],Path:["$data","$id","$file",function(d,i,f){return getPath(d.Parent,f.Name,f.Mountpoint)}],Alias:["$file","$id",function(f,i){return f.Mountpoint?getKey(f.Mountpoint):f.Name}],ModifyDate:["$file",function(f){return f.ModifyDate?1e3*f.ModifyDate:void 0}],Name:["$file",function(f){return f.Device}],Size:["$file",function(f){return _.isUndefined(f.Size)?void 0:funcs.lookSize(f.Size).toString()}]});return pattern.build({$data:data})}}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(290)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){var pattern=T({"->":["$dlna","MediaDirs"],$data:":external",$dlna:["$data",function(d){return d.Device.Services.DLNA}],Enable:["$dlna*",function(d){return d.Enable}],Interval:["$dlna*",function(d){return d.Interval}],Name:["$dlna*",function(d){return d.Name}],MediaDirs:{"->":!0,"{$dirs, __id}":["$parent",function(p){return funcs.newConfig.normalize(p.$dlna.MediaDirs)}],Path:["$dirs*",function(d){return d.Path}],Type:["$dirs*",function(d){return d.Type}]}});return pattern.build({$data:data})}function nativeToDsysinit(data){var pattern=T({Device:{Services:{DLNA:{"->":["$data","MediaDirs"],$data:":external",Enable:["$data",function(d){return d.Enable}],Interval:["$data",function(d){return d.Interval}],Name:["$data",function(d){return d.Name}],MediaDirs:{"->":!0,"{$dirs, $key}":["$parent",function(p){return p.$data.MediaDirs}],":":["$dirs*","$key",function(d,k){return _.isUndefined(d.__id)?"+"+k:d.__id}],Type:["$dirs*",function(d){return d.Type}],Path:["$dirs*",function(d){return d.Path}]}}}}});return pattern.build({$data:data})}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5);module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(292),Helper:__webpack_require__(293)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){var pattern=T({"->":["$samba","Dirs"],$data:":external",$samba:["$data",function(d){return d.Device.Services.Samba}],Enable:["$samba*",function(d){return d.Enable}],Anonymous:["$samba*",function(d){return d.Anonymous}],NetbiosName:["$samba*",function(d){return d.NetbiosName}],ServerString:["$samba*",function(d){return d.ServerString}],Workgroup:["$samba*",function(d){return d.Workgroup}],Dirs:{"->":!0,"{$dirs, __id}":["$parent",function(p){return funcs.newConfig.normalize(p.$samba.Dirs)}],Path:["$dirs*",function(d){return d.Path}],Name:["$dirs*",function(d){return d.Name}]}});return pattern.build({$data:data})}function nativeToDsysinit(data){var pattern=T({Device:{Services:{Samba:{"->":["$data","Dirs"],$data:":external",Enable:["$data",function(d){return d.Enable}],Anonymous:["$data*",function(d){return d.Anonymous}],NetbiosName:["$data*",function(d){return d.NetbiosName}],ServerString:["$data*",function(d){return d.ServerString}],Workgroup:["$data*",function(d){return d.Workgroup}],Dirs:{"->":!0,"{$dirs, $key}":["$parent",function(p){return p.$data.Dirs}],":":["$dirs*","$key",function(d,k){return _.isUndefined(d.__id)?"+"+k:d.__id}],Name:["$dirs*",function(d){return d.Name}],Path:["$dirs*",function(d){return d.Path}]}}}}});return pattern.build({$data:data})}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5);module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}},function(module,exports,__webpack_require__){"use strict";var _=__webpack_require__(4);__webpack_require__(5),module.exports=function(){function isErrorInvalidPath(dirs){var hasInvalidPath=_.some(dirs,function(d){return 0==d.ValidPath});if(hasInvalidPath){var error={name:"invalid_usb_path"};return error}return!1}return{isErrorInvalidPath:isErrorInvalidPath}}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(295)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){var pattern=T({"->":["$ftp"],$data:":external",$ftp:["$data",function(d){return d.Device.Services.FTP}],Enable:["$ftp*",function(d){return d.Enable}],Anonymous:["$ftp*",function(d){return d.Anonymous}],DirPath:["$ftp*",function(d){return d.Directory}],Port:["$ftp*",function(d){return d.Port}],ValidPath:["$ftp*",function(d){return d.ValidPath}]});return pattern.build({$data:data})}function nativeToDsysinit(data){var pattern=T({Device:{Services:{FTP:{"->":["$data"],$data:":external",Enable:["$data",function(d){return d.Enable}],Anonymous:["$data*",function(d){return d.Anonymous}],Directory:["$data*",function(d){return d.DirPath}],Port:["$data*",function(d){return d.Port}]}}}});return pattern.build({$data:data})}var T=__webpack_require__(122).T;__webpack_require__(4),__webpack_require__(5),module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(297)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getUsers(data){var users=funcs.newConfig.normalize(data);return _.chain(users).map(function(user,item){return user.__id=item,user}).filter(function(user){return""!=user.Password&&""!=user.Username}).value()}function getNames(users){var users=funcs.newConfig.normalize(funcs.fetchBranch(users,"Device.Users.User."));return _.pluck(users,"Username")}var pattern=T({"->":["$data","users"],$data:":external",$users:["$data",function(d){return funcs.fetchBranch(d,"Device.USB.Users.")}],invalidUsernames:["$data",function(d){return getNames(d)}],users:{"->":"?","?":["$parent",function(p){return!!p.$users}],"{$users}":["$parent",function(p){return getUsers(p.$users)}],__id:["$users*",function(u){return u.__id}],Password:["$users*",function(u){return u.Password}],Rule:["$users*",function(u){return u.ReadOnly?"1":"0"}],Username:["$users*",function(u){return u.Username}]}});return pattern.build({$data:data})}function nativeToDsysinit(settings){var data={Users:[settings]},pattern=T({Device:{USB:{"->":["$data","Users"],$data:":external",Users:{"->":!0,"{$users}":["$parent",function(p){return p.$data.Users}],":":["$users*",function(u){return _.isUndefined(u.__id)?"+1":u.__id}],Username:["$users*",function(u){return u.Username||u.user}],Password:["$users*",function(u){return u.Password||u.password}],ReadOnly:["$users*",function(u){return"1"==u.Rule}]}}}});return pattern.build({$data:data})}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5);module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(286)}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(300)}},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}var _keys=__webpack_require__(78),_keys2=_interopRequireDefault(_keys);!function(){function dsysinitToNative(data,attrs){function getProtocol(pattern,origin){if(pattern&&pattern.indexOf("(RA)")>-1){var protocol=pattern.slice(4);if("Samba"==protocol)return"SMB";if("Telnet"==protocol)return"TELNET";if("Smart"==protocol)return"domoticz_nav";if("ICMP"==protocol)return"ICMP"}switch(origin){case ftpPath:return"FTP";case domoticzPath:return"domoticz_nav";case transmissionPath:return"Transmission";case sshPath:return"SSH";case telnetPath:return"TELNET";case tr069Path:return"TR"}return""}function getSourcePort(port,protocol,rootData,attrs){return port.PortLink?funcs.fetchBranch(rootData,port.PortLink.replace(/\.$/,"")).toString():port.PortStart>-1?port.PortStart.toString():getPortForProtocol(protocol,rootData,attrs)}function getDestPort(port,protocol,rootData,attrs){if(port.PortLink){var portOnLink=funcs.fetchBranch(rootData,port.PortLink.replace(/\.$/,""));return portOnLink&&portOnLink.toString()}return port.PortStart>-1?port.PortStart.toString():getPortForProtocol(protocol,rootData,attrs)}function getPortForProtocol(protocol,rootData,attrs){switch(protocol){case"FTP":return funcs.fetchBranch(rootData,ftpPath+"Port").toString();case"TELNET":return attrs.SUPPORT_TELNET?funcs.fetchBranch(rootData,telnetPath+"Port").toString():null;case"Transmission":return funcs.fetchBranch(rootData,transmissionPath+"RPCPort").toString();case"domoticz_nav":return funcs.fetchBranch(rootData,domoticzPath+"SSLPort").toString();case"SSH":return attrs.SUPPORT_SSH?funcs.fetchBranch(rootData,sshPath+"Port").toString():null;case"ICMP":return"99";case"TR":return funcs.fetchBranch(rootData,tr069Path+"ConnectionRequestPort").toString();default:return""}}function getIface(iface){return iface||"auto"}function getAddr(addrs,ipv6){if(addrs=_.values(funcs.newConfig.normalize(addrs)),ipv6)return addrs[0]&&""!=addrs[0].IPStart?addrs[0].IPStart:"::";var addr=addrs[0]?addrs[0].IPStart.split("/"):[""];return addr[0]&&""!=addr[0]||(addr[0]="0.0.0.0"),addr[0]}function getMask(addrs,v6){if(v6)return"";addrs=_.values(funcs.newConfig.normalize(addrs));var addr=addrs[0]?addrs[0].IPStart.split("/"):[""],mask=addr[1]?funcs.ipv4.mask["long"](addr[1]):""!=addr[0]?funcs.ipv4.mask["long"](0):"0.0.0.0";return mask}function getIPList(addrs){var addrList=funcs.newConfig.normalize(addrs);return _.map(addrList,function(elem,key){return{Addr:elem.IPStart,__id:key}})}function getConns(wan,cfg){var list=[{Name:"wan_auto",__Link:"auto"}];return _.each(wan,function(obj,key){obj.Connection&&(_.contains(["PPPoEv6","IPv6oE"],key)||_.each(obj.Connection,function(elem){list.push(elem)}))}),list}function getRaccessRules(firewall,attrs){var result=[];return _.each(firewall,function(fw,type){var zones="IPv4"==type?zonesPath.v4:zonesPath.v6,rules=funcs.newConfig.normalize(fw.Rules),output=_.chain(rules).map(function(rule,id){return rule.__id=id,rule.IsIPv6="IPv6"==type,rule}).filter(function(rule){var destLinks=funcs.newConfig.normalize(rule.Dest.IPLinks),action="IPv4"==type?"DNAT":"ACCEPT";return!(rule.Action!=action||rule.Dest.Zone!=zones.dest||rule.Source.Zone!=zones.source||!rule.Ports.Dest[1]&&"(RA)ICMP"!=rule.Pattern||"tcp"!=rule.Proto[1].Value&&"icmp"!=rule.Proto[1].Value||"IPv4"==type&&1!=_keys2["default"](destLinks).length)}).value();result=result.concat(output)}),result}function getVserversRules(rules){return _.chain(rules).filter(function(rule){return!("DNAT"!=rule.Action||rule.Dest.Zone!=zonesPath.destVservers||rule.Source.Zone!=zonesPath.v4.source||!rule.Ports.Dest[1]||-1==!rule.NATPort.PortStart)}).value()}function getUsedSourcePorts(data){var rules=funcs.newConfig.normalize(funcs.fetchBranch(data,rulesPath)),rulesTR69=funcs.newConfig.normalize(funcs.fetchBranch(data,tr069Path)),vservers=getVserversRules(rules),result=[];return _.each(vservers,function(rule){var protos=_.map(funcs.newConfig.normalize(rule.Proto),function(proto){return proto.Value});if(_.contains(protos,"tcp")){var ports=funcs.newConfig.normalize(rule.Ports.Dest);_.each(ports,function(port){result.push({Section:"vservers",Ports:{Start:-1!=port.PortStart?port.PortStart:void 0,End:-1!=port.PortEnd?port.PortEnd:void 0}})})}}),_.size(rulesTR69)&&result.push({Section:"tr69",Ports:{Start:rulesTR69.ConnectionRequestPort}}),result}var pattern=T({"->":["$data","$attrs","Rules","Ifaces"],$data:":external",$attrs:":external",Rules:{"->":["$rule","Ports"],"{$rule}":["$parent",function(p){return getRaccessRules(funcs.fetchBranch(p.$data,firewallPath),p.$attrs)}],__id:["$rule*",function(r){return r.__id}],Origin:["$rule*",function(r){return r.Origin}],Iface:["$rule*",function(r){return getIface(r.Source.Iface)}],IsIPv6:["$rule*",function(r){return r.IsIPv6}],IsInitIPv6:["$rule*",function(r){return r.IsIPv6}],IPs:["$rule*","$root","IsIPv6",function(r,root,v6){return root.$attrs&&root.$attrs.SUPPORT_MULTI_IP?void 0:getAddr(r.Source.Address,v6)}],Mask:["$rule*","$root","IsIPv6",function(r,root,v6){return root.$attrs&&root.$attrs.SUPPORT_MULTI_IP?void 0:getMask(r.Source.Address,v6)}],IPList:["$rule*","$root",function(r,root){return root.$attrs&&root.$attrs.SUPPORT_MULTI_IP?getIPList(r.Source.Address):void 0}],Ports:{"->":!0,$rule:["$parent",function(p){return p.$rule}],Source:["$rule*","$root",function(r,root){return"(RA)ICMP"!=r.Pattern?getSourcePort(r.Ports.Dest[1],getProtocol(r.Pattern,r.Origin),root.$data,root.$attrs):""}],Dest:["$rule*","$root",function(r,root){return getDestPort(r.NATPort,getProtocol(r.Pattern,r.Origin),root.$data,root.$attrs)}]},Protocol:["$rule*",function(r){return getProtocol(r.Pattern,r.Origin)}],Name:["$rule*",function(r){return r.Name}]},Ifaces:{"->":!0,$config:["$parent",function(p){return p.$data}],$wan:["$config*",function(config){return wanConverter.cpeToNative.config(config)}],"{$conn}":["$config","$wan",function(cfg,w){return getConns(w,cfg)}],Name:["$conn*",function(c){return c.Name}],Value:["$conn*",function(c){return c.__Link}]},UsedSourcePorts:["$data",function(d){return getUsedSourcePorts(d)}],AvailIPv6:["$data","$attrs",function(d,a){return!_.isUndefined(d.Device.Firewall.IPv6)&&!a.SUPPORT_KOREA}],maxInst:["$data",function(d){return funcs.fetchBranch(d,"Device.Firewall.IPv4.Rules.max_instance")}]});return pattern.build({$data:data,$attrs:attrs})}function attrsToNative(data){function getProtocols(defined){var protocols=[];return defined.http&&protocols.push({Name:"HTTP",Value:(defined.ertelecom?"8080":defined.http_port)||"80",Source:defined.korea&&"8080",Link:defined.http_port_link}),defined.https&&protocols.push({Name:"HTTPS",Value:defined.https_port||"443",Source:defined.custom_partner&&"8443",Link:defined.https_port_link}),(defined.bcm_rlx||defined.custom_partner||defined.custom_rst)&&protocols.push({Name:"ICMP",Value:"99",Source:""}),defined.ftp&&protocols.push({Name:"FTP",Value:defined.ftp_port?defined.ftp_port:"21",Link:defined.ftp_port_link}),defined.telnet&&protocols.push({Name:"TELNET",Value:defined.telnet_port?defined.telnet_port:"23",Link:defined.telnet_port_link}),defined.samba&&protocols.push({Name:"SMB",Value:"445"}),defined.korea&&!_.isUndefined(defined.transmission_port)&&protocols.push({Name:"Transmission",Value:defined.transmission_port,Link:defined.transmission_port_link}),defined.domoticz&&!_.isUndefined(defined.domoticz_port)&&protocols.push({Name:"domoticz_nav",Value:defined.domoticz_port,Link:defined.domoticz_port_link}),!defined.ssh||_.isUndefined(defined.ssh_port)||defined.custom_partner||protocols.push({Name:"SSH",Value:defined.ssh_port,Link:defined.ssh_port_link}),defined.custom_partner&&protocols.push({Name:"TR",Value:defined.tr_port,Link:defined.tr_port_link}),protocols}function getSystemPorts(data){var ports=[];return data.SUPPORT_CUSTOM_GOODLINE&&(ports.push("64010"),ports.push("61040")),ports}var pattern=T({"->":["$data","Defined","Protocols","System_ports"],$data:":external",Defined:{"->":!0,$consts:["$parent",function(p){return p.$data}],korea:["$consts",function(c){return c.SUPPORT_KOREA}],ertelecom:["$consts",function(c){return c.SUPPORT_ERTELECOM}],custom_partner:["$consts",function(c){return c.CUSTOM_PARTNER_39065}],custom_rst:["$consts",function(c){return c.CUSTOM_ROSTELECOM_42512}],domoticz:["$consts",function(c){return c.SUPPORT_DOMOTICZ}],telnet:["$consts",function(c){return c.SUPPORT_TELNET}],ssh:["$consts",function(c){return c.SUPPORT_SSH}],http:["$consts",function(c){return c.SUPPORT_HTTP}],https:["$consts",function(c){return c.SUPPORT_HTTPS}],ftp:["$consts",function(c){return c.SUPPORT_FTP}],samba:["$consts",function(c){return c.SUPPORT_SAMBA}],bcm:["$consts",function(c){return c.SUPPORT_BCM}],rlx_modem:["$consts",function(c){return c.SUPPORT_RLX&&c.SUPPORT_MODEMS}],https_support:["$consts",function(c){return c.SUPPORT_HTTPS}],iface_support:["$consts",function(c){return c.SUPPORT_REMOTE_ACCESS_WAN_IFACES||c.SUPPORT_BCM||c.SUPPORT_MODEMS}],has_transmission_rule:["$consts",function(c){return c.hasTorrentRule}],transmission_port:["$consts",function(c){return c.rpcPort}],transmission_port_link:["$consts",function(c){return c.rpcPortLink}],ftp_port:["$consts",function(c){return c.ftpPort}],ftp_port_link:["$consts",function(c){return c.ftpPortLink}],telnet_port:["$consts",function(c){return c.telnetPort}],telnet_port_link:["$consts",function(c){return c.telnetPortLink}],domoticz_port:["$consts",function(c){return c.domoticzPort}],domoticz_port_link:["$consts",function(c){return c.domoticzPortLink}],ssh_port:["$consts",function(c){return c.sshPort}],ssh_port_link:["$consts",function(c){return c.sshPortLink}],tr_port:["$consts",function(c){return c.trPort}],tr_port_link:["$consts",function(c){return c.trPortLink}],http_port:["$consts",function(c){return c.httpPort}],http_port_link:["$consts",function(c){return c.httpPortLink}],https_port:["$consts",function(c){return c.httpsPort}],https_port_link:["$consts",function(c){return c.httpsPortLink}]},Protocols:["Defined",function(d){return getProtocols(d)}],__hasTransmissionRule:["$data",function(d){return d.hasTorrentRule}],__hasDomoticzRule:["$data",function(d){return d.hasDomoticzRule}],SystemPorts:["$data",function(d){return getSystemPorts(d)}],BackupStorage:{disabled:{ipv4:{},ipv6:{Mask:"",Ports:{Source:"80"}}},enabled:{ipv4:{IPs:"0.0.0.0",Mask:"0.0.0.0"},ipv6:{IPs:"::",Mask:"",Ports:{Source:"80"}}}}});return pattern.build({$data:data})}function nativeToDsysinit(data,attrs){function getID(rule){return _.has(rule,"IsInitIPv6")&&rule.IsIPv6!=rule.IsInitIPv6?"+1":rule.__id||"+1"}function getPattern(protocol){if(protocol){var protocol=protocol;return"SMB"==protocol&&(protocol="Samba"),"TELNET"==protocol&&(protocol="Telnet"),"domoticz_nav"==protocol&&(protocol="Smart"),"(RA)"+protocol}}function getAddr(isIPv6,ip,mask){return isIPv6?"::"==ip?{}:{1:{IPStart:ip}}:"0.0.0.0"==ip&&"0.0.0.0"==mask?{}:{1:{IPStart:ip+"/"+funcs.ipv4.mask["short"](mask)}}}function getAddrList(addrs){var result={};return _.each(addrs,function(elem,key){var index=_.has(elem,"__id")?elem.__id:"new_addr_"+key;result[index]={IPStart:elem.Addr}}),result}var pattern=T({"->":["$data","$attrs","Device"],$data:":external",$attrs:":external",Device:{Firewall:{"->":["$data","Rules"],$data:["$root",function(r){return r.$data}],":":["$data",function(d){return d.IsIPv6?"IPv6":"IPv4"}],Rules:{"->":["$rule","Proto","Ports","Dest","NATPort","Source"],$rule:["$root",function(r){return r.$data}],":":["$rule*",function(r){return getID(r)}],Enable:!0,Action:["$rule*",function(r){return r.IsIPv6?"ACCEPT":"DNAT"}],Pattern:["$rule*",function(r){return getPattern(r.Protocol)}],CTState:{1:{Value:"NEW"},2:{Value:"ESTABLISHED"},3:{Value:"RELATED"}},Proto:{"->":!0,$rule:["$parent",function(p){return p.$rule}],":":"1",Value:["$rule*",function(r){return"ICMP"==r.Protocol?"icmp":"tcp"}]},Ports:{"->":["$rule","$port","Dest","Source"],$rule:["$parent",function(p){return p.$rule}],$port:["$parent",function(p){return p.$rule.Ports}],Dest:{"->":["$port","?","1"],$port:["$parent",function(p){return p.$port.Source}],"?":["$parent",function(p){return"ICMP"!=p.$rule.Protocol}],1:{"->":!0,PortStart:["$parent",function(p){return parseInt(p.$port)?parseInt(p.$port):-1}],PortLink:["$parent",function(p){return parseInt(p.$port)?"":p.$port}]}}},Dest:{"->":["$rule","Address","IPLinks"],$rule:["$parent",function(p){return p.$rule}],Zone:["$rule",function(r){return r.IsIPv6?zonesPath.v6.dest:zonesPath.v4.dest}],IPLinks:{"->":!0,"?":["$parent",function(p){return!p.$rule.IsIPv6}],1:{Link:"Device.Network.Interface.Bridge.1."}}},NATPort:{"->":!0,$rule:["$parent",function(p){return p.$rule}],PortStart:["$rule",function(r){return"ICMP"!=r.Protocol&&parseInt(r.Ports.Dest)?parseInt(r.Ports.Dest):-1}],PortLink:["$rule",function(r){return"ICMP"==r.Protocol||parseInt(r.Ports.Dest)?"":r.Ports.Dest}]},Source:{"->":["$rule","Address"],$rule:["$parent",function(p){return p.$rule}],Zone:["$rule",function(r){return r.IsIPv6?zonesPath.v6.source:zonesPath.v4.source}],Iface:["$rule",function(r){return"auto"!=r.Iface?r.Iface:""}],Address:["$rule","$root",function(r,root){return root.$attrs&&root.$attrs.SUPPORT_MULTI_IP?getAddrList(r.IPList):getAddr(r.IsIPv6,r.IPs,r.Mask)}]},Name:["$rule*",function(r){return r.Name}]}}}});return pattern.build({$data:data,$attrs:attrs})}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),wanConverter=__webpack_require__(283),rulesPath=(__webpack_require__(301),"Device.Firewall.IPv4.Rules."),firewallPath="Device.Firewall.",zonesPath={v4:{source:"Device.Firewall.IPv4.Zones.2.",dest:"Device.Firewall.IPv4.Zones.1."},destVservers:"Device.Firewall.IPv4.Zones.3.",v6:{source:"Device.Firewall.IPv6.Zones.2.",dest:"Device.Firewall.IPv6.Zones.1."}},ftpPath="Device.Services.FTP.",telnetPath="Device.Services.Telnet.",transmissionPath="Device.Services.Transmission.",domoticzPath="Device.Services.Domoticz.",sshPath="Device.Services.SSH.",tr069Path="Device.Services.TR069.";module.exports={dsysinitToNative:dsysinitToNative,attrsToNative:attrsToNative,nativeToDsysinit:nativeToDsysinit}}()},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getSNATEnable(rules,snatFlag,enableDefault){return snatFlag?_.isUndefined(rules.NAT1)||_.isUndefined(rules.NAT2)?!_.isUndefined(enableDefault)&&enableDefault:rules.NAT1.Enable&&rules.NAT2.Enable:void 0}function getRules(rules){if(rules=funcs.newConfig.normalize(rules),0==_.size(rules))return{DMZ:defaultRule()};var dmzRules={};return _.each(rules,function(rule,key){var destAddr=funcs.newConfig.normalize(rule.Dest.Address),sourceAddr=funcs.newConfig.normalize(rule.Source.Address),proto=funcs.newConfig.normalize(rule.Proto),destPorts=funcs.newConfig.normalize(rule.Ports.Dest);_.size(proto)>0||(rule.Source.Zone==zonesPath.wan&&rule.Dest.Zone==zonesPath.lan&&"DNAT"==rule.Action&&rule.OrigNATLinks&&rule.OrigNATLinks[1]&&rule.OrigNATLinks[1].Link==zonesPath.wan+"Interfaces."&&_.isEmpty(destPorts)&&-1==rule.NATPort.PortStart&&1==_.size(destAddr)&&0==_.size(sourceAddr)&&"(FW)DMZ"==rule.Pattern&&(dmzRules.DMZ=rule,dmzRules.DMZ.__index=key),rule.Source.Zone==zonesPath.lan&&rule.Dest.Zone==zonesPath.lan&&"DNAT"==rule.Action&&rule.Source.Iface==ifaces.lan&&0==_.size(destPorts)&&-1==rule.NATPort.PortStart&&1==_.size(destAddr)&&0==_.size(sourceAddr)&&rule.OrigNATLinks&&rule.OrigNATLinks[1].Link==zonesPath.wan+"Interfaces."&&(dmzRules.NAT1=rule,dmzRules.NAT1.__index=key),rule.Source.Zone==zonesPath.wan&&rule.Dest.Zone==zonesPath.lan&&"SNAT"==rule.Action&&rule.Dest.Iface==ifaces.lan&&0==_.size(destPorts)&&-1==rule.NATPort.PortStart&&1==_.size(destAddr)&&rule.Source.IPLinks[1].Link==ifaces.lan&&rule.OrigNATLinks&&rule.OrigNATLinks[1].Link==zonesPath.wan+"Interfaces."&&(dmzRules.NAT2=rule,dmzRules.NAT2.__index=key))}),_.isUndefined(dmzRules.DMZ)?{DMZ:defaultRule()}:dmzRules}function defaultRule(){return{Enable:!1,Dest:{Address:{1:{IPStart:""}}}}}function getAddress(addrs){return addrs=_.values(funcs.newConfig.normalize(addrs)),addrs[0].IPStart}var pattern=T({"->":["$data","dmz","superDmz"],$data:":external",dmz:{"->":!0,$data:["$parent",function(p){return p.$data}],$snatFlag:["$data",function(d){return d.snatFlag}],$snatDefaultEnable:["$data",function(d){return d.snatDefaultEnable}],$dmzRules:["$data",function(d){return getRules(d.data.Device.Firewall.IPv4.Rules)}],enable:["$dmzRules",function(d){return d.DMZ.Enable}],enable_snat:["$data","$dmzRules",function(data,rules){return getSNATEnable(rules,data.snatFlag,data.snatDefaultEnable)}],ip:["$dmzRules",function(d){return getAddress(d.DMZ.Dest.Address)}],__indexDMZRule:["$dmzRules",function(d){return _.isUndefined(d.DMZ.__index)?"+1":d.DMZ.__index}],__indexNATLoopback1:["$dmzRules","$snatFlag",function(d,flag){return flag?_.isUndefined(d.NAT1)?"+2":d.NAT1.__index:void 0}],__indexNATLoopback2:["$dmzRules","$snatFlag",function(d,flag){return flag?_.isUndefined(d.NAT2)?"+3":d.NAT2.__index:void 0}]},superDmz:{"->":["?"],$superDmz:["$parent",function(p){return funcs.fetchBranch(p.$data.data,"Device.Network.Settings.TwinIP.")}],$rule:["$superDmz",function(sdmz){return sdmz?sdmz[1]:void 0}],"?":["$superDmz",function(sdmz){return!!sdmz}],__indexSuperDmz:["$rule",function(r){return r?"1":"+1"}],enable:["$rule",function(r){return!!r&&r.Enable}],mac:["$rule",function(r){return r?r.ClientMAC:""}]}});return pattern.build({$data:data})}function nativeToDsysinit(data){function getSuperDmz(sdmzRule){var result={};return _.has(sdmzRule,"__indexSuperDmz")&&(result[sdmzRule.__indexSuperDmz]=sdmzRule),result}function getRules(rule){var index,result={};return _.has(rule,"__indexDMZRule")&&rule.enable&&(index=rule.__indexDMZRule,result[index]=getDMZRule(rule)),_.has(rule,"__indexNATLoopback1")&&rule.enable_snat&&(index=rule.__indexNATLoopback1,result[index]=getNAT1Rule(rule)),_.has(rule,"__indexNATLoopback2")&&rule.enable_snat&&(index=rule.__indexNATLoopback2,result[index]=getNAT2Rule(rule)),result}function getDMZRule(rule){return{Action:"DNAT",Pattern:"(FW)DMZ",Source:{Iface:"",Zone:zonesPath.wan},Dest:{Address:{1:{IPStart:rule.ip}},Zone:zonesPath.lan},OrigNATLinks:{1:{Link:zonesPath.wan+"Interfaces."}},Enable:rule.enable}}function getNAT1Rule(rule){return{Action:"DNAT",Pattern:"(FW)DMZ",Dest:{Address:{1:{IPStart:rule.ip}},Zone:zonesPath.lan},OrigNATLinks:{1:{Link:zonesPath.wan+"Interfaces."}},Source:{Iface:ifaces.lan,Zone:zonesPath.lan},Enable:rule.enable_snat}}function getNAT2Rule(rule){return{Action:"SNAT",Pattern:"(FW)DMZ",Dest:{Address:{1:{IPStart:rule.ip}},Iface:ifaces.lan,Zone:zonesPath.lan},OrigNATLinks:{1:{Link:zonesPath.wan+"Interfaces."}},Source:{IPLinks:{1:{Link:ifaces.lan,UseSubnet:!0}},Zone:zonesPath.wan},Enable:rule.enable_snat}}var pattern=T({"->":["$data","Device"],$data:":external",Device:{Firewall:{IPv4:{"->":!0,Rules:["$root",function(r){return getRules(r.$data.dmz)}]}},Network:{Settings:{TwinIP:{"->":["?"],$data:["$root",function(r){return r.$data}],$superDmz:["$data",function(d){return d.superDmz}],"?":["$superDmz",function(sd){return!!sd}],"{$rule, $i}":["$superDmz",function(sd){return getSuperDmz(sd)}],":":["$rule*","$i*",function(r,i){return i}],Enable:["$rule*",function(r){return r.enable}],ClientMAC:["$rule*",function(r){return r.mac}],WANGroup:["$rule*",function(r){return wanGroup}]}}}}});return pattern.build({$data:data})}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5);module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit};var zonesPath={wan:"Device.Firewall.IPv4.Zones.2.",lan:"Device.Firewall.IPv4.Zones.3."},ifaces={wan:"Device.Network.Interface.Ethernet.2.",lan:"Device.Network.Interface.Bridge.1."},wanGroup="Device.Network.Group.1."},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(303)}},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}var _keys=__webpack_require__(78),_keys2=_interopRequireDefault(_keys);!function(){function dsysinitToNative(input){function getRoutes(config,version){var routePath="Device.Routing."+version+".Routes.",routes=funcs.newConfig.normalize(funcs.fetchBranch(config,routePath));return _.chain(routes).map(function(elem,id){return elem.__version=version,elem.__id=id,elem}).filter(function(elem){return""==elem.Origin&&""!=elem.Destination&&_keys2["default"](funcs.newConfig.normalize(elem.Table)).length>0}).value()}function getIfaceName(link,config){if(""==link)return"routing_auto_iface";var iface=funcs.fetchBranch(config,link);return iface?iface.Name||iface.Ifname:""}function getSubnetMask(dest){var arrDest=dest.split("/");return arrDest[1]?funcs.ipv4.mask["long"](arrDest[1]):"255.255.255.255"}function getMetric(r){var mainTable=r.Table[1];return mainTable&&mainTable.ForwardingMetric?mainTable.ForwardingMetric:null}function prepareIfaces(ifaces){var output=[];return output.push({Name:"routing_auto_iface",Value:"auto",Version:"All"}),_.each(ifaces,function(iface){var checkSubIface=!1;for(var key in ifaces)iface.Path==ifaces[key].Data.LowerLayer&&(checkSubIface=!0);iface.Data.Bridged||-1!=iface.Path.indexOf("Loopback")||checkSubIface||output.push({Name:iface.Name,Value:iface.Path,Version:"All"})}),output}function getProtocolList(i){var config=input.config,output=[];return funcs.fetchBranch(config,"Device.Routing.IPv4.")&&output.push("IPv4"),funcs.fetchBranch(config,"Device.Routing.IPv6.")&&output.push("IPv6"),output}function getTables(config,type){var tables=funcs.newConfig.normalize(funcs.fetchBranch(config,"Device.Routing.Tables.")),result=[];_.each(tables,function(elem,key){if(!_.isEmpty(elem.Origin)&&/Group/.test(elem.Origin)||!config.hideTRVoip&&"voip"==elem.Name){var iface=void 0,lan=void 0,vpn=[],wans=[];if(/Group/.test(elem.Origin)){var group=funcs.fetchBranch(config,elem.Origin);lan=group.LAN;var wanList="IPv4"==type?group.WAN:group.WANv6,vpnList=group.VPN;_.each(funcs.newConfig.normalize(wanList),function(obj){var conn=funcs.fetchBranch(config,obj.Link);/Connection/.test(conn.Interface)&&(conn=funcs.fetchBranch(config,conn.Interface)),wans.push(conn.Interface)});for(var key in vpnList){var conn=funcs.fetchBranch(config,vpnList[key].Link);/Interface/.test(conn.Interface)&&vpn.push(conn.Interface)}}result.push({Link:/Group/.test(elem.Origin)?elem.Origin:"Device.Routing.Tables."+key+".",Name:elem.Name,Origin:elem.Origin,Iface:iface,Lan:lan,Wans:wans,VPN:vpn})}});var mainTable=_.findKey(tables,{Name:"main"});return mainTable&&result.push({Link:"Device.Routing.Tables."+mainTable+".",Name:"main",Origin:""}),result}var pattern=T({"->":["$input","Ifaces","Routes","ProtocolList","TableList"],$input:":external",Routes:{"->":["$rule","Source","Dest"],$config:["$parent",function(p){return p.$input.config}],$routesv4:["$parent",function(p){return getRoutes(p.$input.config,"IPv4")}],$routesv6:["$parent",function(p){return getRoutes(p.$input.config,"IPv6")}],"{$rule}":["$routesv4","$routesv6",function(rv4,rv6){return rv4.concat(rv6)}],__id:["$rule*",function(r){return r.__id}],Enable:["$rule*",function(r){return r.Enable}],Iface:["$rule*",function(r){return r.Interface||"auto"}],IfaceName:["$rule*","$config",function(r,cfg){return getIfaceName(r.Interface,cfg)}],IPVersion:["$rule*",function(r){return r.__version}],InitVersion:["$rule*",function(r){return r.__version}],IPAddress:["$rule*",function(r){return r.Destination?"IPv4"==r.__version?r.Destination.split("/")[0]:r.Destination:""}],SubnetMask:["$rule*",function(r){return"IPv4"==r.__version?getSubnetMask(r.Destination):void 0}],GatewayAddress:["$rule*",function(r){return r.GatewayIPAddress}],Subnet:["$rule*",function(r){return r.Destination}],Metric:["$rule*",function(r){return getMetric(r)}],Table:["$rule*",function(r){return r.Table[1]?r.Table[1].Link:null}],Available:["$rule*",function(r){return"Enabled"==r.Status}]},Ifaces:{"->":!0,$config:["$parent",function(p){return p.$input.config}],$ifaces:["$config*",function(config){return ifaceConverter.dsysinitToNative({config:config
})}],"{$iface}":["$ifaces",function(ifaces){return prepareIfaces(ifaces)}],$return:["$iface",function(i){return i}]},ProtocolList:["$input",function(i){return getProtocolList(i)}],TableList:{"->":!0,$config:["$parent",function(p){return p.$input.config}],IPv4:["$config*",function(c){return getTables(c,"IPv4")}],IPv6:["$config*",function(c){return getTables(c,"IPv6")}]}});return pattern.build({$input:input})}function nativeToDsysinit(input){function getDestination(ipversion,addr,mask){var output="";return output+=addr,"255.255.255.255"!=mask&&"IPv4"==ipversion&&(output+="/"+funcs.ipv4.mask["short"](mask)),output}function getID(route,i){return route.InitVersion&&route.IPVersion!=route.InitVersion?"new_inst_"+i:route.__id||"new_inst_"+i}var pattern=T({"->":!0,$input:":external",Device:{Routing:{"->":["?","Routes"],"{$version}":["IPv4","IPv6"],":":["$version",function(v){return v}],$routes:["$root","$version",function(r,v){return _.filter(r.$input.Routes,function(e){return e.IPVersion==v})}],"?":["$routes",function(rs){return!!rs.length}],Routes:{"->":["$route","Table"],"{$route, $index}":["$parent",function(p){return p.$routes}],":":["$route*","$index",function(r,i){return getID(r)}],Enable:["$route*",function(r){return r.Enable}],Interface:["$route*",function(r){return"auto"==r.Iface?"":r.Iface}],Destination:["$route*",function(r){return getDestination(r.IPVersion,r.IPAddress,r.SubnetMask)}],GatewayIPAddress:["$route*",function(r){return r.GatewayAddress}],Table:{"->":["$route","1"],$route:["$parent",function(p){return p.$route}],1:{"->":!0,$route:["$parent",function(p){return p.$route}],ForwardingMetric:["$route",function(r){return r.Metric||0}],Link:["$route",function(r){return r.Table}]}}}}}});return pattern.build({$input:input})}var T=__webpack_require__(122).T,_=__webpack_require__(4),ifaceConverter=__webpack_require__(269),funcs=__webpack_require__(5);module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}}()},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(305)}},function(module,exports,__webpack_require__){"use strict";var T=__webpack_require__(122).T,funcs=(__webpack_require__(4),__webpack_require__(5));module.exports={dsysinitToNative:function(data){var pattern=T({"->":!0,$data:":external","?":["$sessions",function(s){return!!s}],"{$sessions}":["$data",function(d){return funcs.newConfig.normalize(d.Device.Statistics.Sessions)}],$source:["$sessions*",function(s){return s.Source}],$dest:["$sessions*",function(s){return s.Destination}],sourceIp:["$source*",function(s){return s.IPAddress}],sourcePort:["$source*",function(s){return s.Port}],destIp:["$dest*",function(d){return d.IPAddress}],destPort:["$dest*",function(d){return d.Port}],protocol:["$sessions",function(s){return s.Type.toUpperCase()}],exp_time:["$sessions*",function(s){return s.Timeout}]});return pattern.build({$data:data})}}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(307)}},function(module,exports,__webpack_require__){"use strict";!function(){function dsysinitToNative(data){function getStatisticsInfo(data){var stats=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.stats));stats=_.sortBy(stats,"CrossLink");var isAP="AccessPoint"==funcs.fetchBranch(data,"Device.DeviceInfo.DeviceMode"),connections=isAP?{}:getConnectionInfo(data),result={};return _.each(stats,function(elem){result=getExtentInfo(data,elem.Stats,elem.CrossLink,connections,result,elem.MACAddress)}),result}function isIPv4(ip){return funcs.is.ipv4(ip)}function isIPv6(ip,ipv6){return funcs.is.ipv6Network(ip)||!!ipv6}function getRxTxPacketsInfo(item){return item.PacketsReceived+" / "+item.PacketsSent}function getRxTxErrorInfo(item){return item.ErrorsReceived+" / "+item.ErrorsSent}function getConnectionInfo(data){var connection=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.connection));__autoconf.BR2_PACKAGE_ANWEB_USB_MODEM&&(connection.USB=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.usb))),__autoconf.BR2_PACKAGE_ANWEB_OPENVPN&&(connection.OpenVPNServ=funcs.fetchBranch(data,paths.openvpn));var connectionInfo={};return _.each(connection,function(elem,key){"IPsec"!=key&&(elem=funcs.newConfig.normalize(elem),_.each(elem,function(item,index){if("USB"==key||!/Cellular/.test(item.BaseInterface)&&!/Cellular/.test(item.Interface)){item=funcs.newConfig.normalize(item),item.ConnLink=("USB"==key?paths.usb:"OpenVPNServ"==key?paths.openvpn:paths.connection+key+".")+index+".",item.NeedPortState="PPTP"!=key&&"L2TP"!=key&&"GRE"!=key&&"IPIP6"!=key,item.NeedMAC="PPTP"!=key&&"L2TP"!=key&&"OpenVPN"!=key&&"OpenVPNServ"!=key;var number=getIndex(connectionInfo[item.Interface]);if(connectionInfo[item.Interface]||(connectionInfo[item.Interface]={}),"PPPoE"==key||"L2TP"==key){var pppClient=funcs.fetchBranch(data,item.PPPConfiguration);item.isIPv6=pppClient.IPv6,item.IPv6Only=pppClient.IPv6Only;var baseConnection=null,ifaceV6=null;if(item.isIPv6){var dhcpv6=funcs.fetchBranch(data,paths.connection+"DHCPv6.");ifaceV6=_.findWhere(dhcpv6,{Interface:paths.connection+key+"."+index+"."}),baseConnection=paths.connection+"DHCPv6."+_.findKey(dhcpv6,{Interface:paths.connection+key+"."+index+"."})+".",item.ConnectionStatus=item.IPv6Only?ifaceV6.ConnectionStatus:item.ConnectionStatus,item.ConnLink=item.IPv6Only?baseConnection:item.ConnLink,item.ConnectTimeStamp=item.IPv6Only?ifaceV6.ConnectTimeStamp:item.ConnectTimeStamp}}if("USB"!=key){if("OpenVPNServ"==key&&(item.BaseInterface=item.ListenIP),__autoconf.BR2_PACKAGE_ANWEB_ODU_CONTROL){var dwp=funcs.fetchBranch(data,paths.dwp812),dwpConns=dwp.InternetConnections,dwpType=dwp.IPFamily;if("IP"==dwpType&&item.ConnLink==dwpConns.IPv6)return;if("IPV6"==dwpType&&item.ConnLink==dwpConns.IPv4)return}connectionInfo[item.Interface][number]=_.clone(item)}else for(var i in funcs.newConfig.normalize(item.Connections)){var conn=item.Connections[i],connData=funcs.fetchBranch(data,conn.Link),_item=funcs.deepClone(item);_item.ConnectionStatus=connData.ConnectionStatus,_item.ConnectionStatusExt=connData.ConnectionStatusExt,_item.ConnectTimeStamp=connData.ConnectTimeStamp,_item.ConnectionPingErrors=connData.ConnectionPingErrors,_item.ConnLink=conn.Link,_item.isIPv6=/v6/.test(conn.Link),connectionInfo[item.Interface][number++]=_item}}}))}),connectionInfo}function getTxRxInfo(statsList,stats,id){return statsList[id].TX=_.isUndefined(statsList[id].TX)?stats.BytesSent:statsList[id].TX+stats.BytesSent,statsList[id].RX=_.isUndefined(statsList[id].RX)?stats.BytesReceived:statsList[id].RX+stats.BytesReceived,statsList[id].PacketsReceived=_.isUndefined(statsList[id].PacketsReceived)?stats.PacketsReceived:statsList[id].PacketsReceived+stats.PacketsReceived,statsList[id].PacketsSent=_.isUndefined(statsList[id].PacketsSent)?stats.PacketsSent:statsList[id].PacketsSent+stats.PacketsSent,statsList[id].ErrorsReceived=_.isUndefined(statsList[id].ErrorsReceived)?stats.ErrorsReceived:statsList[id].ErrorsReceived+stats.ErrorsReceived,statsList[id].ErrorsSent=_.isUndefined(statsList[id].ErrorsSent)?stats.ErrorsSent:statsList[id].ErrorsSent+stats.ErrorsSent,statsList}function getIndex(obj){return _.size(obj)+1}function getExtentInfo(data,stats,link,connections,statsList,currentMac){var result={},iface=funcs.fetchBranch(data,link);if(!iface)return statsList;if(~link.indexOf("WiFi")&&(result="sta"==iface.Type?getEthernetInfo(data,iface,link,connections,currentMac):getWiFiInfo(iface,currentMac))){var number=_.findKey(statsList,{Name:result.Name});if(number)statsList[number].State="Enabled"==statsList[number].State||"Enabled"==result.State?"Enabled":"Disabled",statsList=getTxRxInfo(statsList,stats,number);else{var count=getIndex(statsList);statsList[count]=_.isArray(result)?result[0]:result,statsList=getTxRxInfo(statsList,stats,count)}}if(/Ethernet|Tunnel|ATM|PTM|Cellular/.test(link)&&(result=getEthernetInfo(data,iface,link,connections,currentMac),result&&result.length&&_.each(result,function(res){var count=getIndex(statsList);statsList[count]=res,statsList=getTxRxInfo(statsList,stats,count)})),~link.indexOf("Bridge")&&(result=getBridgeInfo(data,iface,link,currentMac))){var number=_.findKey(statsList,{Name:result.Name});if(number)statsList[number].State="Enabled"==statsList[number].State||"Enabled"==result.State?"Enabled":"Disabled",statsList=getTxRxInfo(statsList,stats,number);else{var count=getIndex(statsList);statsList[count]=result,statsList=getTxRxInfo(statsList,stats,count)}}if(~link.indexOf("EoGRE")&&(result=getEoGREInfo(data,iface,link,currentMac))){var count=getIndex(statsList);statsList[count]=result,statsList=getTxRxInfo(statsList,stats,count)}if(~link.indexOf("EoIP")&&(result=getEoIPInfo(data,iface,link,currentMac))){var count=getIndex(statsList);statsList[count]=result,statsList=getTxRxInfo(statsList,stats,count)}return statsList}function getConnStatus(status){var list=funcs.getConstateList();return list[status]}function getStatus(status){switch(status){case"Enabled":return"connected";case"Disabled":return"st_disabled";case"Aborted":return"ipsec_status_aborted";default:return"ipsec_status_connecting"}}function getWiFiInfo(iface,currentMac){var result={};return result.State=iface.Status,result.Name=iface.Name,"Enabled"==result.State&&(result.MAC=_.isUndefined(currentMac)?"-":currentMac||"00:00:00:00:00:00"),result}function getEthernetInfo(data,iface,link,connections,currentMac){function getInfoIface(data,ifaceConnection,iface){if(ifaceConnection.BaseInterface&&/Group/.test(ifaceConnection.BaseInterface)){var group=funcs.fetchBranch(data,ifaceConnection.BaseInterface+"WAN.");if(!group)return iface;var order=group.order;if(!order||!order[0])return iface;ifaceConnection=funcs.fetchBranch(data,group[order[0]].Link),iface=funcs.fetchBranch(data,ifaceConnection.Interface)}if(ifaceConnection.BaseInterface){if(~ifaceConnection.BaseInterface.indexOf("Interface")){var baseIface=funcs.fetchBranch(data,ifaceConnection.BaseInterface);if(/Bridge/.test(ifaceConnection.BaseInterface)){var eth=_.filter(baseIface.Members,function(e){return/Ethernet/.test(e.Link)});return eth?__autoconf.BR2_PACKAGE_ANWEB_REALTEK_MODEM&&(eth=_.find(eth,function(e){return""!=e.Name}),!eth)?baseIface:funcs.fetchBranch(data,eth.Link):baseIface}return baseIface}var parentIfaceConn=funcs.fetchBranch(data,ifaceConnection.BaseInterface);return funcs.fetchBranch(data,parentIfaceConn.Interface)}return iface}function getGateway(data,link,addrType){var routePath=paths.routing+("ipv4"==addrType?"IPv4.":"IPv6.")+"Routes.",routes=funcs.newConfig.normalize(funcs.fetchBranch(data,routePath)),route=_.findWhere(routes,{Interface:link,Destination:"ipv4"==addrType?"0.0.0.0/0":"::/0"});return route?route.GatewayIPAddress:void 0}function getIP(data,addrType,ifaceLink,connLink,conns){!_.isUndefined(conns)&&/USB/.test(connLink)&&(conns=_.pluck(funcs.newConfig.normalize(conns),"Link"));var ipAddrs=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.ip)),connection=funcs.fetchBranch(data,connLink);if(_.has(connection,"UnnumberedIP")&&""!=connection.UnnumberedIP)return funcs.fetchBranch(data,connection.UnnumberedIP);var ethIP=_.findWhere(ipAddrs,{LowerLayer:ifaceLink});if(_.isUndefined(ethIP)&&/USB/.test(connLink)){var usbConns=_.map(conns,function(elem){return funcs.fetchBranch(data,elem).Interface});ethIP=_.find(ipAddrs,function(ip){return _.contains(usbConns,ip.LowerLayer)})}if(!_.isUndefined(ethIP)){var addrs=funcs.newConfig.normalize("ipv4"==addrType?ethIP.IPv4Address:ethIP.IPv6Address);return addrs=_.filter(addrs,function(a){return a.Origin==connLink||_.contains(conns,a.Origin)}),addrs.length?addrs[0]:void 0}}iface.Bridged&&(link=iface.BridgeLink);var ifaceConnection=connections[link];return ifaceConnection?_.map(ifaceConnection,function(ifConn){function isModem(iface){return/Cellular/.test(iface)}function isDSL(conn){var iface=conn.BaseInterface||conn.Interface;if(/Bridge/.test(iface)){var bridgeIface=funcs.fetchBranch(data,iface),ifaceList=_.find(bridgeIface.Members,function(e){return/PTM/.test(e.Link)||/ATM/.test(e.Link)});ifaceList&&(iface=ifaceList.Link)}return-1!=iface.indexOf("ATM")||-1!=iface.indexOf("PTM")}var result={};result.Name=ifConn.Name||iface.Ifname.toUpperCase();var infoIface=getInfoIface(data,ifConn,iface);if(result.ServiceName=ifConn.ServerAddress||ifConn.LNS,/OpenVPN/.test(ifConn.ConnLink)&&(result.ServerAddr=ifConn.Remote||ifConn.IPAddress),"sta"!=infoIface.Type&&isModem(ifConn.Interface)||(result.ConnStatus=ifConn.ConnectionStatus),/IPIP6/.test(ifConn.ConnLink))switch(ifConn.Status){case"Enabled":result.ConnStatus="Connected";break;case"Enabling":result.ConnStatus="Connecting";break;case"Aborted":result.ConnStatus="Disconnected";break;default:result.ConnStatus=ifConn.Status}if(/GRE|IPIP6/.test(ifConn.ConnLink)||/VPN.OpenVPN/.test(ifConn.ConnLink)?(result.State=ifConn.Status,result.Status=ifConn.Status):result.State="Connected"==ifConn.ConnectionStatus?"Enabled":"Disabled",ifConn.NeedPortState&&"sta"!=infoIface.Type&&!isModem(ifConn.Interface)){var portState=isDSL(ifConn)?getDSLState(data,ifConn):getState(data,infoIface.LowerLayer);result.PortState="Enabled"==portState?"on":"off",result.State="on"==result.PortState?result.State:"Disabled"}ifConn.NeedMAC&&(result.MAC=infoIface.MACAddress||currentMac);var connLink=ifConn.ConnLink;if(result=getDns(data,result,connLink,ifConn.Connections),"Enabled"==result.State||/GRE/.test(ifConn.ConnLink)){result.Iface=iface.Ifname;var ifLink=funcs.fetchBranch(data,link+"Statistics");if(result.MTU=funcs.fetchBranch(data,ifLink).MTU,~ifConn.ConnLink.indexOf("Static.")){result.IPv4WithMask=ifConn.IPAddress;var ip=ifConn.IPAddress.split("/");result.IPv4=ip[0],result.Mask=funcs.ipv4.mask["long"](ip[1]),result.GW=ifConn.Gateway}if(~ifConn.ConnLink.indexOf("Staticv6.")&&(result.IPv6WithMask=ifConn.IPAddress,result.IPv6=ifConn.IPAddress,result.GW6=ifConn.Gateway),-1==ifConn.ConnLink.indexOf("Static")){if(!ifConn.isIPv6){var ipv4=getIP(data,"ipv4",link,connLink,ifConn.Connections);if(ipv4){result.IPv4WithMask=ipv4.IPAddress;var ip=ipv4.IPAddress.split("/");result.IPv4=ip[0],result.Mask=funcs.ipv4.mask["long"](ip[1]),ipv4.PeerIPAddress&&""!=ipv4.PeerIPAddress&&(result.GW=ipv4.PeerIPAddress.split("/")[0]),result.GW||(result.GW=getGateway(data,link,"ipv4"))}}if(ifConn.isIPv6||_.isUndefined(ifConn.isIPv6)){var ipv6=getIP(data,"ipv6",link,connLink,ifConn.Connections);ipv6&&(result.IPv6WithMask=ipv6.IPAddress,result.IPv6=ipv6.IPAddress,ipv6.PeerIPAddress&&""!=ipv6.PeerIPAddress&&(result.GW6=ipv6.PeerIPAddress),result.GW6||(result.GW6=getGateway(data,link,"ipv6")))}}if(result.IPv4||result.IPv6||/IPIP6/.test(ifConn.ConnLink)||(result.State="Disabled",result.ConnStatus="Connected"!=result.ConnStatus?result.ConnStatus:"Connecting"),-1!=ifConn.ConnLink.indexOf("GRE")){result.PeerIP=ifConn.PeerIP;var staticRoutes=funcs.newConfig.normalize(ifConn.StaticRoutes);if(staticRoutes=_.toArray(staticRoutes),staticRoutes.length&&(result.StaticRouteIP=_.first(staticRoutes).Destination),result.StaticRouteGateway=ifConn.VPNPeerIP,result.GREIface=getIfaceName(data,ifConn.IP),"Enabled"!=result.State){result.IPv4WithMask=ifConn.VPNIP;var ip=ifConn.VPNIP.split("/");result.IPv4=ip[0],result.Mask=funcs.ipv4.mask["long"](ip[1])}}result.DurationS="Enabled"==result.State?ifConn.ConnectTimeStamp:void 0}return result}):void 0}function getDns(data,result,connLink,conns){!_.isUndefined(conns)&&/USB/.test(connLink)&&(conns=_.pluck(funcs.newConfig.normalize(conns),"Link"));var dnsAll=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.dns)),dns=_.findWhere(dnsAll,{Origin:connLink});if(_.isUndefined(dns)&&/USB/.test(connLink)&&(dns=_.find(dnsAll,function(elem){return _.contains(conns,elem.Origin)})),dns){var dnsArray=_.values(funcs.newConfig.normalize(dns.Address));dnsArray[0]&&(funcs.is.ipv4(dnsArray[0].IPAddress)?result.DNSPrimary=dnsArray[0].IPAddress:result.DNSPrimaryV6=dnsArray[0].IPAddress),dnsArray[1]&&(funcs.is.ipv4(dnsArray[1].IPAddress)?result.DNSSecondary=dnsArray[1].IPAddress:result.DNSSecondaryV6=dnsArray[1].IPAddress)}return result}function getState(data,link){var vlan=funcs.fetchBranch(data,link),enabled=_.some(funcs.newConfig.normalize(vlan.Ports),function(port){return"Enabled"==funcs.fetchBranch(data,port.Link).Status});return enabled?"Enabled":"Disabled"}function getDSLState(data,ifconn){var dsl=funcs.fetchBranch(data,paths.dsl);if(!dsl||!dsl.TrainingState||"N/A"==dsl.Modulation)return"Disabled";var typeDsl=~dsl.Modulation.indexOf("VDSL")?"PTM":"ATM",iface=ifconn.BaseInterface||ifconn.Interface;if(/Bridge/.test(iface)){var bridgeIface=funcs.fetchBranch(data,iface),ifaceList=_.find(bridgeIface.Members,function(e){return/PTM/.test(e.Link)||/ATM/.test(e.Link)});ifaceList&&(iface=ifaceList.Link)}return-1!=iface.indexOf(typeDsl)?"Enabled":"Disabled"}function getIfaceName(data,iface){if(_.isEmpty(iface))return"";var greIface=funcs.fetchBranch(data,iface);if(/Group/.test(iface)){var order=greIface.WAN.order;if(!order||0==order.length)return"";greIface=funcs.fetchBranch(data,greIface.WAN[order[0]].Link)}return greIface.Name}function getBridgeInfo(data,iface,link,currentMac){function getIP(data,link,type){var ipAddrs=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.ip)),lanIP=_.findWhere(ipAddrs,{LowerLayer:link});if(lanIP){var ipArray="ipv4"==type?lanIP.IPv4Address:lanIP.IPv6Address;return ipArray=_.filter(ipArray,function(e){return"Enabled"==e.Status||"Enabling"==e.Status}),ipArray=_.pluck(funcs.newConfig.normalize(ipArray),"IPAddress"),ipArray.length?"ipv4"==type?ipArray[0]:ipArray:void 0}}var result={},group=_.find(funcs.fetchBranch(data,"Device.Network.Group."),function(g){return g.LAN===link}),groupName=void 0;if(group){if(group&&group.Name&&data.isGrouping){if("_tech#bridge"===group.Name)return;groupName=group.Name.match("#")?group.Name.split("#")[0]:group.Name}result.Name=iface.Name||groupName||iface.Ifname,result.MAC=_.isEmpty(result.MAC)?currentMac:result.MAC;var ethernet=_.filter(funcs.newConfig.normalize(iface.Members),function(elem){return!!~elem.Link.indexOf("Ethernet")});if(_.isUndefined(ethernet)||(result.State=!1,_.each(ethernet,function(eth){var ethIface=funcs.fetchBranch(data,eth.Link);result.State="Enabled"==result.State||"Enabled"==getState(data,ethIface.LowerLayer)||"Enabled"==ethIface.Status?"Enabled":"Disabled"})),"Enabled"==result.State){var ipv4=getIP(data,link,"ipv4");ipv4&&(result.IPv4WithMask=ipv4,ipv4=ipv4.split("/"),result.IPv4=ipv4[0],result.GW=ipv4[0],result.Mask=funcs.ipv4.mask["long"](ipv4[1]));var ipv6=getIP(data,link,"ipv6");ipv6&&(result.IPv6=_.clone(ipv6))}return result}}function getEoGREInfo(data,iface,link,currentMac){var result={},vconfigIfaces=funcs.fetchBranch(data,paths.vconfig),vconfigCur=_.find(vconfigIfaces,{LowerLayer:link});return result.Name=iface.Name,result.MAC=vconfigCur?vconfigCur.MACAddress:currentMac,result.State=vconfigCur?vconfigCur.Status:iface.Status,result.Status=vconfigCur?vconfigCur.Status:iface.Status,result.MTU=iface.MTU,result.PeerIP=iface.PeerIP,result.VID=vconfigCur?vconfigCur.VID:void 0,result.GREIface=getIfaceName(data,iface.IP),result}function getEoIPInfo(data,iface,link,currentMac){var result={},vconfigIfaces=funcs.fetchBranch(data,paths.vconfig),vconfigCur=_.find(vconfigIfaces,{LowerLayer:link});return result.Name=iface.Name,result.MAC=vconfigCur?vconfigCur.MACAddress:currentMac,result.State=vconfigCur?vconfigCur.Status:iface.Status,result.Status=vconfigCur?vconfigCur.Status:iface.Status,result.MTU=iface.MTU,result.PeerIP=iface.PeerIP,result.VID=vconfigCur?vconfigCur.VID:void 0,result.GREIface=getIfaceName(data,iface.IP),result}var pattern=T({"->":["?"],$data:":external",$uptime:["$data",function(d){return d.Device.DeviceInfo?d.Device.DeviceInfo.Uptime:void 0}],NeedTime:!0,"{$info}":["$data",function(d){return getStatisticsInfo(d)}],"?":["$info",function(i){return!!i}],Name:["$info*",function(i){return i.Name}],State:["$info*",function(i){return"Enabled"==i.State?"up":"down"}],RxTxPacket:["$info*","State",function(s,st){return"up"==st?getRxTxPacketsInfo(s):void 0}],RxTxErrors:["$info*","State",function(s,st){return"up"==st?getRxTxErrorInfo(s):void 0}],RX:["$info*",function(s){return s.RX}],TX:["$info*",function(s){return s.TX}],IPv4:["$info*",function(i){return i.IPv4}],IPv4WithMask:["$info*",function(i){return i.IPv4WithMask}],IPv6:["$info*",function(i){return i.IPv6}],IPv6WithMask:["$info*",function(i){return i.IPv6}],IsIPv4:["$info*",function(i){return isIPv4(i.IPv4)}],IsIPv6:["$info*",function(i){return isIPv6(i.IPv4,i.IPv6)}],Mask:["$info*",function(i){return i.Mask}],MTU:["$info*",function(i){return i.MTU}],GW:["$info*",function(i){return i.GW}],GW6:["$info*",function(i){return i.GW6}],MAC:["$info*",function(i){return i.MAC}],DNSPrimary:["$info*",function(i){return i.DNSPrimary}],DNSSecondary:["$info*",function(i){return i.DNSSecondary}],DNSPrimaryV6:["$info*",function(i){return i.DNSPrimaryV6}],DNSSecondaryV6:["$info*",function(i){return i.DNSSecondaryV6}],PortStatus:["$info*",function(i){return i.PortState}],ConnStatus:["$info*",function(i){return getConnStatus(i.ConnStatus)}],ServiceName:["$info*",function(i){return i.ServiceName}],ServerAddr:["$info*",function(i){return i.ServerAddr}],DurationS:["$info*","$uptime",function(i,uptime){return!_.isUndefined(i.DurationS)&&uptime?uptime-i.DurationS:void 0}],PeerIP:["$info*",function(i){return i.PeerIP}],StaticRouteIP:["$info*",function(i){return i.StaticRouteIP}],StaticRouteGateway:["$info*",function(i){return i.StaticRouteGateway}],GREIface:["$info*",function(i){return i.GREIface}],VID:["$info*",function(i){return i.VID}],Status:["$info*",function(i){return i.Status?getStatus(i.Status):void 0}]});return pattern.build({$data:data})}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),__autoconf="undefined"!=typeof autoconf?autoconf:{},paths={stats:"Device.Statistics.Interface.",bridge:"Device.Network.Interface.Bridge.",dhcp:"Device.Network.Connection.DHCP.1.",dns:"Device.Network.DNS.Current.",dnsServer:"Device.Network.Server.DNS.Array.1.",routing:"Device.Routing.",ip:"Device.Network.IP.",connection:"Device.Network.Connection.",dsl:"Device.Statistics.xDSL.",vconfig:"Device.Network.Interface.Vconfig.",usb:"Device.USB.Connection.",openvpn:"Device.Network.Server.VPN.OpenVPN.",dwp812:"Device.USB.ODUControl."};module.exports={dsysinitToNative:dsysinitToNative}}()},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(309)}},function(module,exports,__webpack_require__){"use strict";var T=__webpack_require__(122).T,_=__webpack_require__(4),path="Device.Statistics.Multicast.Groups.",funcs=__webpack_require__(5);module.exports={dsysinitToNative:function(data){function getIPGroup(groups,ipType){return _.filter(groups,function(elem){var addr="IPv4"==ipType?elem.IPAddress.split("."):funcs.ipv6.address.full(elem.IPAddress).split(":");return elem.AddressFamily==ipType&&""!=elem.InterfaceLink&&("IPv4"==ipType?~elem.InterfaceLink.indexOf("Ethernet")&&"239"==addr[0]||~elem.InterfaceLink.indexOf("Bridge")&&"224"!=addr[0]:~elem.InterfaceLink.indexOf("Bridge"))})}function getIfaceGroups(ipGroups){var groups=_.groupBy(ipGroups,"InterfaceLink"),ifaceGroups={};return _.each(groups,function(elem,key){var iface=funcs.fetchBranch(data,key);if(iface)if(~key.indexOf("WiFi")){var index=iface.Support24GHz?"WIFI_2.4GHz":"WIFI_5GHz";ifaceGroups[index]=elem}else{if(iface.Bridged)return;~key.indexOf("Bridge")&&(ifaceGroups.LAN=elem),~key.indexOf("Ethernet")&&(ifaceGroups.WAN=elem)}}),ifaceGroups}function getAddrs(ifaceGroup){var addrs=[];return _.each(ifaceGroup,function(elem){addrs.push(elem.IPAddress)}),addrs}var pattern=T({"->":["$multicast","ipv4","ipv6"],$data:":external","?":["$multicast",function(m){return!!m}],$multicast:["$data",function(d){return funcs.newConfig.normalize(funcs.fetchBranch(d,path))}],ipv4:{"->":!0,$ipv4:["$parent",function(p){return getIPGroup(p.$multicast,"IPv4")}],"{$ifaceGroup, name}":["$ipv4",function(ip){return getIfaceGroups(ip)}],maddr:["$ifaceGroup",function(ig){return getAddrs(ig)}]},ipv6:{"->":!0,$ipv6:["$parent",function(p){return getIPGroup(p.$multicast,"IPv6")}],"{$ifaceGroup, name}":["$ipv6",function(ip){return getIfaceGroups(ip)}],maddr:["$ifaceGroup",function(ig){return getAddrs(ig)}]}});return pattern.build({$data:data})}}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(311)}},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function dsysinitToNative(data){function getSSID(link){var apLink=funcs.fetchBranch(data,link);if(apLink){var ap=funcs.fetchBranch(data,apLink.Profile);return ap?ap.SSID:void 0}}function getBand(link){var ap=link.indexOf("AccessPoint");link=link.substring(0,ap);var radio=funcs.fetchBranch(data,link);return radio?radio.OperatingFrequencyBand:void 0}function formMode(value){var modes={ac:"802.11 AC",n:"802.11 N",b:"802.11 B",g:"802.11 G",a:"802.11 A"};return modes[value]}function is5G(radio){return radio=funcs.newConfig.normalize(radio),_keys2["default"](radio).length>1}function getHostname(data,hostMAC){var hostname,ip,servers=funcs.fetchBranch(data,paths.servers),hostnames=funcs.fetchBranch(data,paths.hostnames),dhcps=["DHCP","DHCPv6"];_.every(dhcps,function(dhcp){var server=funcs.newConfig.normalize(servers[dhcp]);return _.every(server,function(elem){var clients=funcs.newConfig.normalize(elem.Statistic.Client);return clients=_.filter(clients,function(e){return e.MAC==hostMAC}),clients[0]&&(ip=clients[0].IP),!ip}),!ip});var host=_.find(hostnames,function(elem){return elem.MAC&&elem.MAC.toUpperCase()==hostMAC.toUpperCase()});return host&&(hostname=host.Alias||host.Hostname),{Hostname:hostname,IP:ip}}var pattern=T({"->":["$data","Clients"],$data:":external",Support5G:["$data",function(d){return is5G(funcs.fetchBranch(d,paths.wifiStatistics))}],Clients:{"->":["?"],"{$radio}":["$root",function(r){return funcs.newConfig.normalize(funcs.fetchBranch(r.$data,paths.wifiStatistics))}],"{$points}":["$radio*",function(r){return funcs.newConfig.normalize(r.AccessPoint)}],"{$devices}":["$points*",function(p){return funcs.newConfig.normalize(p.AssociatedDevice)}],"?":["$devices",function(d){return!!d}],$client:["$root","$devices*",function(r,d){return getHostname(r.$data,d.MACAddress)}],Hostname:["$client*",function(c){return c.Hostname||""}],IPv4:["$client*",function(c){return funcs.is.ipv4(c.IP)?c.IP:void 0}],IPv6:["$client*",function(c){return funcs.is.ipv6(c.IP)?c.IP:void 0}],Link:["$devices*","$points*",function(d,p){return _.isUndefined(d)?void 0:p.CrossLink}],MAC:["$devices*",function(d){return d.MACAddress.toUpperCase()}],Online:["$devices*",function(d){return d.ConnectTime}],Signal:["$devices*",function(d){return d.SignalStrength}],RateUpLink:["$devices*",function(d){return d.LastDataUplinkRate}],RateDownLink:["$devices*",function(d){return d.LastDataDownlinkRate}],RxBytes:["$devices*",function(d){return d.TotalBytesReceived}],TxBytes:["$devices*",function(d){return d.TotalBytesTransmitted}],Active:["$devices*",function(d){return d.Active}],AuthState:["$devices*",function(d){return d.AuthenticationState}],Mode:["$devices*",function(d){return formMode(d.OperatingStandard)}],RSSI:["$devices*",function(d){return d.SignalStrength+"%"}],SSID:["$devices*","$points*",function(d,p){return _.isUndefined(d)?void 0:getSSID(p.CrossLink)}],Band:["$devices*","$points*",function(d,p){return _.isUndefined(d)?void 0:getBand(p.CrossLink)}]}});return pattern.build({$data:data})}var _keys=__webpack_require__(78),_keys2=_interopRequireDefault(_keys),T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),paths={wifiStatistics:"Device.Statistics.WiFi.Radio.",servers:"Device.Network.Server.",hostnames:"Device.Hostnames."};module.exports={dsysinitToNative:dsysinitToNative}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(313)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(input){var pattern=T({"->":["$au","Server"],$input:":external",$config:["$input",function(i){return i.config}],$au:["$config",function(cfg){return funcs.fetchBranch(cfg,"Device.Services.Autoupdate.")}],Enable:["$au",function(au){return au.Enable}],IsMultiServer:!0,Server:{"->":!0,"{$raw}":["$parent",function(p){return funcs.newConfig.normalize(p.$au.Server)}],$return:["$raw*",function(r){return r.Address}]},Period:["$au",function(au){return au.Period}],minPeriod:3600,Version:["$au",function(au){return au.FirmwareVersion}],URL:["$au",function(au){return au.FirmwareURL}],MD5:["$au",function(au){return au.FirmwareMD5}],Status:["$au",function(au){return au.FirmwareStatus}]});return pattern.build({$input:input})}function nativeToDsysinit(input){var pattern=T({"->":!0,$input:":external",Device:{Services:{Autoupdate:{"->":["$input","Server"],$input:["$root",function(r){return r.$input}],Enable:["$input",function(i){return i.Enable}],Check:["$input",function(i){return i.Check}],Server:{"->":!0,"{$raw, $index}":["$parent",function(p){return p.$input.Server}],":":["$index",function(i){return(i+1).toString()}],Address:["$raw",function(r){return r}]},Period:["$input",function(i){return i.Enable?i.Period:void 0}]}}}});return pattern.build({$input:input})}var T=(__webpack_require__(4),__webpack_require__(122).T),funcs=__webpack_require__(5);module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}},function(module,exports,__webpack_require__){"use strict";function __pull(){function success(response){var tree=funcs.buildTree(response.result.ParameterList),branches=funcs.fetchBranch(tree,pathConfig+".");data=branches}return cpe.GetParameterValues([pathConfig]).then(success)}function existsLinkInBranches(link){function existsBranch(schedule){return _.some(schedule.Branches,function(branch){return branch.Link&&regExp.test(branch.Link)})}var strRegExp="^"+link.replace(/\./g,"\\.")+"$",regExp=new RegExp(strRegExp);return _.some(data,existsBranch)}var helper=__webpack_require__(315),cpe=__webpack_require__(3),funcs=__webpack_require__(5),pathConfig="Device.System.Scheduler.Config",data=[];module.exports={data:data,pull:__pull,helper:helper,existsLink:existsLinkInBranches}},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function Helper(scheduleRules){function convertRules(){var initRules=funcs.newConfig.normalize(scheduleRules);if(_.keys(initRules).length){var rules={};return _.each(initRules,function(rule,inx){rules[inx]={id:inx,status:getStatus(rule.Active),state:getState(rule.Enable),interval:cronStr.convert(rule.Cron),duration:funcs.lookTime(rule.Duration),tasks:_.keys(rule.Branches).length-1,cronWithDuration:rule.Cron+" "+rule.Duration,name:rule.Name,genInfo:{cron:rule.Cron,duration:rule.Duration,tasks:rule.Branches}}}),rules}return-1}function getState(state){return state?"on":"off"}function getStatus(status){return status?"sched_rule_active":"sched_rule_not_active"}function getRule(initRule,branches,schedule){var result={};return initRule&&(result={Enable:initRule.enable,Cron:validation.sort(initRule.min)+" "+validation.sort(initRule.hour)+" "+validation.sort(initRule.day)+" "+validation.sort(initRule.month,"month")+" "+validation.sort(initRule.weekDay,"weekDay"),Duration:parseInt(initRule.duration),Name:initRule.name}),branches&&(result.Branches={},_.each(branches,function(branch,inx){var inxBranch=schedule?_.findKey(schedule.Branches,{Link:branch.Link}):null,index=inxBranch?inxBranch:"new_inst_"+inx;result.Branches[index]=branch}),_.isEmpty(result.Branches)&&delete result.Branches),result}function getConfig(rule,config,id){var newConfig=funcs.deepClone(config);if(rule){var ruleId=id?id:"+1";if("+1"==ruleId)funcs.setValue(paths.schedules+ruleId,rule,newConfig);else{for(var keysRule=_keys2["default"](rule),j=0;j<keysRule.length;j++)"Branches"!=keysRule[j]&&funcs.setValue(paths.schedules+ruleId+"."+keysRule[j],rule[keysRule[j]],newConfig);

for(var keysBranch=_keys2["default"](rule.Branches||{}),i=0;i<keysBranch.length;i++){var ind=keysBranch[i],pathTo=paths.schedules+ruleId+".Branches."+ind,applyObject=rule.Branches[ind];funcs.setValue(pathTo,applyObject,newConfig)}}}return newConfig}function getRemoveBranchConfig(config,schedules,branches){var newConfig=funcs.deepClone(config);return _.each(schedules,function(schedule,inxSchedule){_.each(schedule.Branches,function(branch,inxBranch){-1!==branches.indexOf(branch.Link)&&funcs.cutBranch(newConfig,""+paths.schedules+inxSchedule+".Branches."+inxBranch+".")})}),newConfig}function getRemoveScheduleConfig(config,items){var newConfig=funcs.deepClone(config);return _.each(items,function(id){funcs.cutBranch(newConfig,paths.schedules+id)}),newConfig}function getUsedBranchSchedules(config,branches){var result={},schedules=funcs.fetchBranch(config,paths.schedules);return schedules&&_.each(schedules,function(schedule,inxSchedule){var scheduleBranchesArr=funcs.newConfig.instanceObjectToArray(schedule.Branches),isHasAllBranches=_.some(branches,function(branch){return _.findWhere(scheduleBranchesArr,{Link:branch})});isHasAllBranches&&(result[inxSchedule]=schedule)}),result}function getDeleteBranchConfig(schedules,selectId){var result={};return _.each(schedules,function(item){(selectId&&selectId!=item.numSchedule||!selectId)&&(resultObj[item.numSchedule]||(resultObj[item.numSchedule]={Branches:{}}),resultObj[item.numSchedule].Branches["-"+item.numBranch]={})}),result}function getDiffRule(oldRule,newRule,attrs){return funcs.newConfig.makeDiff(oldRule,newRule,attrs)}function checkRangeNumbersSchedule(value,start,end,type){function checkRangeNums(start,end,arr){var result=!0;return _.each(arr,function(item){(start>item||item>end)&&(result=!1)}),result}function checkRangeStrings(val,arr){var result=!0;return _.each(val,function(item){var find=_.find(arr,function(str){return str==item.replace(/\s/g,"")});"undefined"==typeof find&&(result=!1)}),result}var regExpNum=/^[0-9]{1,2}(\,\s*[0-9]{1,2})*$/,regExpAnother=/^(\*\/([0-9]{1,2}))$|^(\*)$/,numsComma=regExpNum.exec(value),numsEvery=regExpAnother.exec(value);if(numsComma)return checkRangeNums(start,end,numsComma[0].split(","))?null:"invalid_range";if(numsEvery){var num=numsEvery[0].split("/")[1];return start>num||num>end?" invalid_range":null}if("undefined"!=typeof type&&isNaN(value)){if("m"==type){var arrMonths=["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec"];return checkRangeStrings(value.split(","),arrMonths)?null:"invalid_range"}if("w"==type){var arrWeek=["sun","mon","tue","wed","thu","fri","sat"];return checkRangeStrings(value.split(","),arrWeek)?null:"invalid_range"}return"invalid_value"}return"invalid_value"}var paths={schedules:"Device.System.Scheduler.Config."},cronStr=cronToString();return{convertRules:convertRules,convertCronToUserString:cronStr.convert,checkRange:checkRangeNumbersSchedule,getDiffRule:getDiffRule,getRule:getRule,getConfig:getConfig,getRemoveScheduleConfig:getRemoveScheduleConfig,getRemoveBranchConfig:getRemoveBranchConfig,getUsedBranchSchedules:getUsedBranchSchedules,getDeleteBranchConfig:getDeleteBranchConfig,commands:commands,date:cronStr,valid:validation,getDuration:funcs.lookTime}}var _keys=__webpack_require__(78),_keys2=_interopRequireDefault(_keys),_=__webpack_require__(4),funcs=__webpack_require__(5),cronToString=__webpack_require__(316),commands=__webpack_require__(317),validation=__webpack_require__(318);module.exports=Helper},function(module,exports){"use strict";function cronToString(){function timeDoubleFormat(t){return 1==t.length?"0"+t:t}function getNameMonth(n){if(isNaN(n)){var arrMonthStr={jan:"month_1",feb:"month_2",mar:"month_3",apr:"month_4",may:"month_5",jun:"month_6",jul:"month_7",aug:"month_8",sep:"month_9",oct:"month_10",nov:"month_11",dec:"month_12"};return arrMonthStr[n]}n=rmZero(n);var arrMonthNum=["","month_1","month_2","month_3","month_4","month_5","month_6","month_7","month_8","month_9","month_10","month_11","month_12"];return arrMonthNum[n]}function getWeekDay(n){if(isNaN(n)){var arrWeekDayStr={sun:"sunday",mon:"monday",tue:"tuesday",wed:"wednesday",thu:"thursday",fri:"friday",sat:"saturday"};return arrWeekDayStr[n]}n=rmZero(n);var arrWeekDayNum=["sunday","monday","tuesday","wednesday","thursday","friday","saturday"];return arrWeekDayNum[n]}function rmZero(n){return"0"==n[0]&&n.length>1&&(n=n.slice(1,n.length)),n}function convert(cron,addingSchedules){var findEveryVal,arrCron=cron.split(" "),every=!1,stringForUser="",regEveryVal=/^\*\/([0-9]{1,2})$/,regSeveralVal=/^[0-9]+(\,[0-9]+)*$/,tmpStr="",tmpArr=[];return"*"==arrCron[3]?("*"!=arrCron[2]?stringForUser="every_month ":(stringForUser="every_month ","*"!=arrCron[2]&&"*"!=arrCron[1]&&"*"!=arrCron[0]||(stringForUser="")),every=!0):(findEveryVal=regEveryVal.exec(arrCron[3]),stringForUser="every_month "),"*"==arrCron[2]&&(every?"*"==arrCron[1]||"*"==arrCron[0]||regEveryVal.test(arrCron[1])||"*"!=arrCron[4]||(stringForUser=" every_day "):"*"!=arrCron[1]&&"*"!=arrCron[0]&&"*"==arrCron[4]&&(stringForUser=" every_day "+stringForUser)),"*"==arrCron[1]?"*"==arrCron[0]||regEveryVal.test(arrCron[0])||(stringForUser=every?"every_hour":"*"==arrCron[2]&&""!=arrCron[3]?"every_hour "+stringForUser:"every_hour "+stringForUser):(findEveryVal=regEveryVal.exec(arrCron[1]),regSeveralVal.test(arrCron[1])?(tmpArr=arrCron[1].split(","),tmpStr="",_.each(tmpArr,function(item,i){tmpStr+=timeDoubleFormat(item),i!=tmpArr.length-1&&(tmpStr+=", ")}),stringForUser=stringForUser+"in "+tmpStr):findEveryVal?stringForUser="every_x "+findEveryVal[1]+"st hour "+stringForUser:"*"==arrCron[0]?stringForUser=" between "+timeDoubleFormat(arrCron[1])+":00 and "+timeDoubleFormat(arrCron[1])+":59 "+stringForUser:regEveryVal.test(arrCron[0])&&(stringForUser=" at "+timeDoubleFormat(arrCron[1])+":00 "),every=!1),"*"==arrCron[0]?stringForUser=every?"every_minute":"every_minute "+stringForUser:(findEveryVal=regEveryVal.exec(arrCron[0]),regSeveralVal.test(arrCron[0])&&"*"!=arrCron[1]&&(tmpArr=arrCron[0].split(","),tmpStr="",_.each(tmpArr,function(item,i){tmpStr+=timeDoubleFormat(item),i!=tmpArr.length-1&&(tmpStr+=", ")}),stringForUser=stringForUser+":"+tmpStr)),"*"!=arrCron[4]&&(stringForUser=stringForUser.replace(/\s$/,""),stringForUser="every_week "+stringForUser),arrCron[5]&&(stringForUser="*"!=arrCron[4]||"*"!=arrCron[2]?stringForUser+" "+convertDurationToUserKnown(arrCron[5])+" ("+getWeekMonthIndexCounter(addingSchedules,cron)+")":stringForUser+" "+convertDurationToUserKnown(arrCron[5])),stringForUser}function convertDurationToUserKnown(duration){if(duration){var days=0,hours=0,sec=0,min=0;duration>=86400&&(days=parseInt(duration/86400),duration%=86400),duration>=3600&&(hours=parseInt(duration/3600),duration%=3600),duration>=60&&(min=parseInt(duration/60),duration%=60),duration>0&&(sec=duration);var tmpDays=days>0?days+":":"";return"on "+tmpDays+timeDoubleFormat(hours.toString())+":"+timeDoubleFormat(min.toString())+":"+timeDoubleFormat(sec.toString())}}function getWeekMonthIndexCounter(addingSchedules,cron){var weeks=[],arrCron="";return _.each(addingSchedules,function(elem){arrCron=elem.Cron.split(" "),"*"==arrCron[4]&&"*"==arrCron[2]||weeks.push(elem.Cron)}),weeks.indexOf(cron.slice(0,cron.lastIndexOf(" ")))+1}return{convert:convert,getNameMonth:getNameMonth,getWeekDay:getWeekDay,doubleFormat:timeDoubleFormat}}module.exports=cronToString},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function commands(){function getCommand(commandsConf,tree,commandType,modemKey){var result=[];return _.each(commandsConf,function(item,idRule){"object"==("undefined"==typeof item?"undefined":_typeof3["default"](item))&&_.each(item.Commands,function(cmd,idCommand){var command=funcs.fetchBranch(tree,cmd.Link);if(command.Command==commandType){if(!_.isEmpty(modemKey)&&"exec"==commandType){var args=command.Arguments.split(" "),modemPath="Device.USB.Modem."+modemKey+".";if(!args[0]||!args[1]||"usbmodem_restore"!=args[0]||args[1]!=modemKey&&args[1]!=modemPath||command.Origin!=modemPath)return}result.push({Enable:item.Enable,Cron:item.Cron,idRule:idRule,idCommand:idCommand,idCommandLink:getId(cmd.Link)})}})}),!!_keys2["default"](result).length&&result}function getId(link){var id=link?link.match(/\.\d+\.$/g,""):void 0;return id?id[0].replace(/\./g,""):""}function getConfigCmd(schedule,config,rules,nameCmd){var newConfig=funcs.deepClone(config),cron=schedule.min+" "+schedule.hour+" "+schedule.day+" "+schedule.month+" "+schedule.weekDay,addToExistRule=null,scheduleExist=null,deleteData=null;return rules&&rules.length&&(addToExistRule=_.find(rules,function(rule){return cron==rule.Cron}),deleteData=getDeleteCmdData(rules,addToExistRule,config)),addToExistRule||_.each(config.Device.System.Scheduler.Commands,function(rule,idSchedule){rule.Cron==cron&&(scheduleExist=idSchedule)}),setConfig(newConfig,addToExistRule,scheduleExist,deleteData,cron,nameCmd,schedule),newConfig}function setConfig(config,existRule,scheduleExist,deleteData,cron,nameCmd,schedule){var path="Device.System.Scheduler.Commands",pathCommand="Device.System.Command.",i=1,j=1;if(!existRule&&!scheduleExist){var settNew={Enable:!0,Cron:cron,Commands:{}},commandNew={Command:nameCmd};if(schedule.args&&schedule.args.modem){var modemPath="Device.USB.Modem."+schedule.args.modem+".";commandNew.Arguments="usbmodem_restore "+modemPath+" "+schedule.args.restoreCount,commandNew.Origin=modemPath}settNew.Commands["+"+i++]={Link:pathCommand+"+"+j+"."},funcs.setValue(path+".+"+i++,settNew,config),funcs.setValue(pathCommand+"+"+j,commandNew,config)}if(scheduleExist){var settCmd={Link:pathCommand+"+"+j+"."},commandSet={Command:nameCmd};if(schedule.args&&schedule.args.modem){var modemPath="Device.USB.Modem."+schedule.args.modem+".";commandSet.Arguments="usbmodem_restore "+modemPath+" "+schedule.args.restoreCount,commandSet.Origin=modemPath}funcs.setValue(path+"."+scheduleExist+".Commands.+"+i,settCmd,config),funcs.setValue(pathCommand+"+"+j,commandSet,config)}if(existRule&&!scheduleExist){var commandSet={Command:nameCmd};if(schedule.args&&schedule.args.modem){var modemPath="Device.USB.Modem."+schedule.args.modem+".";commandSet.Arguments="usbmodem_restore "+modemPath+" "+schedule.args.restoreCount,commandSet.Origin=modemPath}funcs.setValue(pathCommand+existRule.idCommandLink,commandSet,config)}deleteData&&_.each(deleteData,function(data){var deletePath=path;data.deleteSchedule?(funcs.cutBranch(config,deletePath+"."+data.idSchedule),funcs.cutBranch(config,pathCommand+data.idCommandLink)):(funcs.cutBranch(config,deletePath+"."+data.idSchedule+".Commands."+data.idCommand),funcs.cutBranch(config,pathCommand+data.idCommandLink))})}function getDeleteCmdData(rules,existSchedule,config){function mayDeleteSchedule(idSchedule,config){var Commands=funcs.fetchBranch(config,"Device.System.Scheduler.Commands.");return _keys2["default"](Commands[idSchedule].Commands).length<=2}var deleteData=[],mayDeleteSchedule=mayDeleteSchedule;return _.each(rules,function(rule){if(!existSchedule||existSchedule&&rule.Cron!=existSchedule.Cron){var deleteSchedule=mayDeleteSchedule(rule.idRule,config);deleteData.push({idSchedule:rule.idRule,idCommand:rule.idCommand,deleteSchedule:deleteSchedule,idCommandLink:rule.idCommandLink})}}),deleteData}function getDeleteCmdConfig(config,rules){var newConfig=funcs.deepClone(config),path="Device.System.Scheduler.Commands",pathCommand="Device.System.Command.",deleteData=getDeleteCmdData(rules,null,config);return _.each(deleteData,function(item){item.deleteSchedule?(funcs.cutBranch(newConfig,path+"."+item.idSchedule),funcs.cutBranch(newConfig,pathCommand+item.idCommandLink)):(funcs.cutBranch(newConfig,path+"."+item.idSchedule+".Commands."+item.idCommand),funcs.cutBranch(newConfig,pathCommand+item.idCommandLink))}),newConfig}return{getCommand:getCommand,getConfigCmd:getConfigCmd,getDeleteCmdConfig:getDeleteCmdConfig}}var _keys=__webpack_require__(78),_keys2=_interopRequireDefault(_keys),_typeof2=__webpack_require__(82),_typeof3=_interopRequireDefault(_typeof2),funcs=__webpack_require__(5);module.exports=commands},function(module,exports,__webpack_require__){"use strict";function checkRangeNumbersSchedule(value,start,end,type,date){function checkRangeNums(start,end,arr){var result=!0;return _.each(arr,function(item){(start>item||item>end)&&(result=!1)}),result}function checkRangeStrings(val,arr){var result=!0;return _.each(val,function(item){var find=_.find(arr,function(str){return str==item.replace(/\s/g,"")});"undefined"==typeof find&&(result=!1)}),result}var regExpNum=/^[0-9]{1,2}(\,\s*[0-9]{1,2})*$/,regExpAnother=/^(\*\/([0-9]{1,2}))$|^(\*)$/,numsComma=regExpNum.exec(value),numsEvery=regExpAnother.exec(value);if(numsComma)return checkRangeNums(start,end,numsComma[0].split(","))?null:"invalid_range";if(numsEvery){var num=numsEvery[0].split("/")[1];return start>num||num>end?" invalid_range":null}return"undefined"!=typeof type&&isNaN(value)?"m"==type?checkRangeStrings(value.split(","),arrMonths)?null:"invalid_range":"w"==type?checkRangeStrings(value.split(","),arrWeek)?null:"invalid_range":"invalid_value":"invalid_value"}function checkCorrectDate(day,month){return"*"!=month&&3==month.length&&isNaN(month)&&(month=getMonthNumberFromName(month)),day=parseInt(day),month=parseInt(month),0>day||day>monthDay[month]?"sched_incorrect_date":null}function getMonthNumberFromName(name){var result=0;return _.each(arrMonths,function(el,i){el==name&&(result=i+1)}),result}function sortParamDate(str,type){function trim(str){return str.replace(/\s/g,"")}function sort(arr,type){function compareNumber(a,b){return a-b}function prepareMouth(str){var index=arrMonths.indexOf(str);return-1!==index?index+1:+str}function prepareWeekDay(str){var index=arrWeek.indexOf(str);return-1!==index?index:+str}return"month"===type?arr=_.map(arr,prepareMouth):"weekDay"===type&&(arr=_.map(arr,prepareWeekDay)),arr=_.uniq(arr),arr.sort(compareNumber)}var str=trim(str),arr=str.split(",");return arr.length>1&&(arr=sort(arr,type),str=arr.join(",")),str}var _=__webpack_require__(4);module.exports={checkRange:checkRangeNumbersSchedule,checkCorrectDate:checkCorrectDate,sort:sortParamDate};var arrMonths=["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec"],arrWeek=["sun","mon","tue","wed","thu","fri","sat"],monthDay={1:31,2:29,3:31,4:30,5:31,6:30,7:31,8:31,9:30,10:31,11:30,12:31}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(301)}},function(module,exports,__webpack_require__){"use strict";function isChanged(){var path,changes=status();for(path in changes)if(!path.indexOf("Device.WiFiMACFilter"))return!0;return!1}function status(){return dms.data?_.extend(funcs.getChanges(dms.data,dms.__initialData),funcs.getChanges(dms.__initialData,dms.data)):{}}function data(){return dms.data?dms.data.Device.WiFiMACFilter:{}}var dms=__webpack_require__(163).get().wifiMacFilter,funcs=__webpack_require__(5),_=__webpack_require__(4);module.exports={pull:dms.pull,push:dms.push,status:status,isChanged:isChanged,data:data,cut:function(inx){return funcs.cutInstance(dms.data.Device.WiFiMACFilter,"Rules."+inx)},set:function(inx,obj){return funcs.setInstance(dms.data.Device.WiFiMACFilter,"Rules."+inx,obj)},add:function(obj){return funcs.addInstance(dms.data.Device.WiFiMACFilter,"Rules",obj)}},dms.isChanged=isChanged,dms.status=status},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(322)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getRaccess(firewall){firewall=funcs.newConfig.normalize(firewall);var key=_.findKey(firewall,function(rule){return"(RA)Transmission"==rule.Pattern&&"DNAT"==rule.Action});if(key){var rule=firewall[key];return rule.__id=key,rule}}var pattern=T({"->":["$data","UsbStorageList","$listFirst","Transsmission"],$data:":external",UsbStorage:["$data*",function(d){return _.isEmpty(funcs.newConfig.normalize(funcs.fetchBranch(data,paths.usb)))?null:funcs.newConfig.normalize(funcs.fetchBranch(data,paths.usb))}],UsbStorageList:{"->":!0,"{$usb, $key}":["$root",function(r){return funcs.newConfig.normalize(funcs.fetchBranch(r.$data,paths.usb))}],Name:["$usb*",function(usb){return usb.Device}],Value:["$usb*",function(usb){return usb.Mountpoint.replace("/mnt","")}]},$listFirst:["UsbStorageList",function(ul){return ul[0]?ul[0].Value:""}],Transmission:{"->":["?"],$transmission:["$root",function(r){return funcs.fetchBranch(r.$data,paths.transsmission)}],$usbStart:["$root",function(r){return _.first(_.values(funcs.newConfig.normalize(funcs.fetchBranch(r.$data,paths.usb))))}],$firewall:["$root",function(r){return getRaccess(funcs.fetchBranch(r.$data,paths.firewall))}],"?":["$transmission",function(t){return!!t}],Enable:["$transmission*",function(t){return t.Enable}],__idRaccess:["$firewall*",function(f){return f?f.__id:void 0}],PeerPort:["$transmission*",function(t){return t.PeerPort}],DeviceDir:["$transmission*",function(t){return t.MainDir}],MainDir:["$transmission*",function(t){return t.TorrentsDir}],DownloadQueue:["$transmission*",function(t){return t.DownloadQueue.Enable}],DownloadQueueSize:["$transmission*",function(t){return t.DownloadQueue.Size}],PeerLimit:["$transmission*",function(t){return t.PeerLimit}],defaultPeerNumber:["$transmission*",function(t){return t.DefaultPeerNumber}],RpcPort:["$transmission*",function(t){return t.RPCPort}],UsingAuth:["$transmission*",function(t){return t.Auth.Enable}],User:["$transmission*",function(t){return t.Auth.Username}],Pass:["$transmission*",function(t){return t.Auth.Password}],InvalidPath:["$transmission*",function(t){return""!=t.MainDir&&!t.ValidPath}],UTP:["$transmission*",function(t){return t.UTP}],EnableSpeedLimit:["$transmission*",function(t){return t.DownloadSpeedLimit.Enable}],SpeedLimit:["$transmission*",function(t){return t.DownloadSpeedLimit.SpeedLimit}]}});return pattern.build({$data:data})}function nativeToDsysinit(data){var pattern=T({"->":["$data","Device"],$data:":external",Device:{"->":!0,Services:{Transmission:{"->":["$data","Auth","DownloadQueue","DownloadSpeedLimit"],$data:["$root",function(p){return p.$data}],Auth:{"->":!0,$data:["$parent",function(p){return p.$data}],Enable:["$data",function(d){return d.UsingAuth}],Username:["$data",function(d){return d.User}],Password:["$data",function(d){return d.Pass}]},DownloadQueue:{"->":!0,$data:["$parent",function(p){return p.$data}],Enable:["$data",function(d){return d.DownloadQueue}],Size:["$data",function(d){return d.DownloadQueueSize}]},Enable:["$data",function(d){return d.Enable}],MainDir:["$data",function(d){return d.DeviceDir}],TorrentsDir:["$data",function(d){return d.MainDir}],PeerLimit:["$data",function(d){return d.PeerLimit}],PeerPort:["$data",function(d){return d.PeerPort}],RPCPort:["$data",function(d){return d.RpcPort}],UTP:["$data",function(d){return d.UTP}],DownloadSpeedLimit:{"->":!0,$data:["$parent",function(p){return p.$data}],Enable:["$data",function(d){return d.EnableSpeedLimit}],SpeedLimit:["$data",function(d){return d.SpeedLimit}]}}},Firewall:{"->":["?"],"?":["$root",function(r){return r.$data.__idRaccess}],IPv4:{Rules:{"->":["$data","NATPort"],$data:["$root",function(r){return r.$data}],":":["$data",function(d){return d.__idRaccess}],NATPort:{"->":!0,$data:["$parent",function(p){return p.$data}],PortStart:["$data",function(d){return d.RpcPort}]}}}}}});return pattern.build({$data:data})}var _=__webpack_require__(4),T=__webpack_require__(122).T,funcs=__webpack_require__(5),paths={usb:"Device.USB.Storage.",transsmission:"Device.Services.Transmission.",firewall:"Device.Firewall.IPv4.Rules."};module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}},function(module,exports,__webpack_require__){"use strict";module.exports=__webpack_require__(324)},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(input){function getCpu(newCpu,oldCpu){var total=Math.abs(getParam(newCpu,"Total")-getParam(oldCpu,"Total")),busy=Math.abs(getParam(newCpu,"Busy")-getParam(oldCpu,"Busy")),loadCpu=total?Math.round(busy/total*100):0;return 100>loadCpu?loadCpu:"100"}function getParam(input,param){input=funcs.newConfig.normalize(input);var data=_.pluck(input,param),sum=0;return _.each(data,function(elem){sum+=elem}),sum}function getRate(ram){var usedRam=ram.MemTotal-ram.MemFree-ram.Shmem-ram.Buffers,totalRam=ram.MemTotal;return Math.round(usedRam/totalRam*100)}var pattern=T({"->":["$newData","$oldData","cpu","ram"],$input:":external",$newData:["$input",function(i){return funcs.fetchBranch(i.newData,paths.cpu)}],$oldData:["$input",function(i){return funcs.fetchBranch(i.oldData,paths.cpu)}],$ramData:["$input",function(i){return funcs.fetchBranch(i.memory,paths.ram)}],backup:["$input",function(i){return i.newData}],cpu:{"->":!0,$newCpu:["$parent",function(p){return p.$newData}],$oldCpu:["$parent",function(p){return p.$oldData}],cpu:["$newCpu","$oldCpu",function(newCpu,oldCpu){return getCpu(newCpu.Stats,oldCpu.Stats)}],cpuString:["cpu",function(cpu){return cpu+"%"}]},ram:{"->":["$ramData","rate","string"],$ramData:["$parent",function(p){return p.$ramData}],rate:{"->":!0,used:["$parent",function(p){return getRate(p.$ramData)}]},string:{"->":!0,$ram:["$parent",function(p){return p.$ramData}],total:["$ram*",function(r){return 1024*r.MemTotal}],buf:["$ram",function(r){return 1024*r.Buffers}],shared:["$ram",function(r){return 1024*r.Shmem}],free:["$ram",function(r){return 1024*r.MemFree}],used:["$ram",function(r){return 1024*(r.MemTotal-r.Buffers-r.Shmem-r.MemFree)}]}}});return pattern.build({$input:input})}var _=__webpack_require__(4),T=__webpack_require__(122).T,funcs=__webpack_require__(5),paths={cpu:"Device.Statistics.CPU.",ram:"Device.Statistics.Meminfo."};module.exports={dsysinitToNative:dsysinitToNative}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(326)}},function(module,exports,__webpack_require__){"use strict";!function(){function dsysinitToNative(data){function getPort(port,attrs){return _.pick(port,function(elem,inx){return elem!=attrs[inx].offValue})}function getOrder(){var order=funcs.fetchBranch(data.value,pathPorts);return order.order}var pattern=T({"->":["$data","ports"],$data:":external",order:getOrder(),ports:{"->":!0,$data:["$parent",function(p){return p.$data}],$attrs:["$parent",function(p){return funcs.fetchBranch(p.$data.attrs,path+"#template.Statistics.")}],$values:["$parent",function(p){return funcs.newConfig.normalize(funcs.fetchBranch(p.$data.value,path))}],"{$ports}":["$values",function(v){return v}],$port:["$ports","$attrs",function(p,a){return getPort(p.Statistics,a)}],$portInfo:["$data","$ports",function(d,p){return funcs.fetchBranch(d.value,p.CrossLink)}],__id:["$ports",function(o){return/Device\.Switch\.Ports\.(.*)\./.exec(o.CrossLink)[1]}],alias:["$portInfo*",function(pi){return pi.Alias}],status:["$portInfo*",function(pi){return"Enabled"==pi.Status}],BroadcastPacketsReceived:["$port*",function(p){return p.BroadcastPacketsReceived}],BroadcastPacketsSent:["$port*",function(p){return p.BroadcastPacketsSent}],BytesReceived:["$port*",function(p){return p.BytesReceived}],BytesSent:["$port*",function(p){return p.BytesSent}],CRCErroredPackets:["$port*",function(p){return p.CRCErroredPacketsReceived}],Collisions:["$port*",function(p){return p.CollisionsSent}],DiscardPacketsReceived:["$port*",function(p){return p.DiscardPacketsReceived}],DiscardPacketsSent:["$port*",function(p){return p.DiscardPacketsSent}],DropEvents:["$port*",function(p){return p.DropPacketsReceived}],ErrorsReceived:["$port*",function(p){return p.ErrorsReceived}],ErrorsSent:["$port*",function(p){return p.ErrorsSent}],ExcessiveCollisions:["$port*",function(p){return p.ExcessiveCollisionsSent}],Fragments:["$port*",function(p){return p.FragmentationErrorPacketsReceived}],Jabbers:["$port*",function(p){return p.JabbersPacketsReceived}],LateCollisions:["$port*",function(p){return p.LateCollisionsSent}],MulticastPacketsReceived:["$port*",function(p){return p.MulticastPacketsReceived}],MulticastPacketsSent:["$port*",function(p){return p.MulticastPacketsSent}],OversizePackets:["$port*",function(p){return p.OversizePacketsReceived}],Packets1024to1518Bytes:["$port*",function(p){return p.Packets1024To1518BytesReceived}],Packets128to255Bytes:["$port*",function(p){return p.Packets128To255BytesReceived}],Packets256to511Bytes:["$port*",function(p){return p.Packets256To511BytesReceived}],Packets512to1023Bytes:["$port*",function(p){return p.Packets512To1023BytesReceived}],Packets64Bytes:["$port*",function(p){return p.Packets64BytesReceived}],Packets65to127Bytes:["$port*",function(p){return p.Packets65To127BytesReceived}],PacketsReceived:["$port*",function(p){return p.PacketsReceived}],PacketsSent:["$port*",function(p){return p.PacketsSent}],PauseFramesReceived:["$port*",function(p){return p.PauseFramesReceived}],PauseFramesSent:["$port*",function(p){return p.PauseFramesSent}],UndersizePackets:["$port*",function(p){return p.UndersizePacketsReceived}],UnicastPacketsReceived:["$port*",function(p){return p.UnicastPacketsReceived}],UnicastPacketsSent:["$port*",function(p){return p.UnicastPacketsSent}],UnknownProtoPacketsReceived:["$port*",function(p){return p.UnknownProtoPacketsReceived}],InPortUtilization:["$port*",function(p){return p.InboundPortUtilization}],OutPortUtilization:["$port*",function(p){return p.OutboundPortUtilization}],BidirectPortUtilization:["$port*",function(p){return p.BidirectPortUtilization}],LinkPortUptime:["$port*",function(p){return p.LinkPortUptime}],CurrentRxSpeed:["$port*",function(p){return p.CurrentRxSpeed?p.CurrentRxSpeed/1e6:void 0}],CurrentTxSpeed:["$port*",function(p){return p.CurrentTxSpeed?p.CurrentTxSpeed/1e6:void 0}]}});return pattern.build({$data:data})}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),path="Device.Statistics.Port.",pathPorts="Device.Switch.Ports.";module.exports={dsysinitToNative:dsysinitToNative}}()},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(328)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getIfaces(data){var unuseTypes=["IPsec","GRE","OpenVPN"],conns=funcs.newConfig.normalize(data.Device.Network.Connection),bridges=funcs.newConfig.normalize(data.Device.Network.Interface.Bridge),connPath="Device.Network.Connection.",bridgePath="Device.Network.Interface.Bridge.",result=[];return _.each(bridges,function(br,inx){var name=1==inx?"LAN":br.Ifname;result.push({name:name,value:bridgePath+inx+"."})}),_.each(conns,function(conn,type){_.contains(unuseTypes,type)||_.each(funcs.newConfig.normalize(conn),function(elem,inx){elem.Interface&&-1==elem.Interface.indexOf("Connection")&&result.push({name:elem.Name,value:connPath+type+"."+inx+"."})})}),result.push({name:"wan_auto",value:""}),result}function getCurrentIface(tr,ifaces){var iface=_.findWhere(ifaces,{value:tr.Iface});return iface.name}var pattern=T({"->":["$data","$ifaces","$tr","tr69","tmp"],$data:":external",$tr:["$data",function(d){return d.Device.Services.TR069}],requiredUrl:!1,tr69:{"->":!0,$tr:["$parent",function(p){return p.$tr}],$manageServer:["$tr",function(tr){return tr.ManagementServer}],Enable:["$tr",function(tr){return tr.Enable}],iface:["$tr",function(tr){return tr.Iface}],AcsURL:["$manageServer",function(ms){return ms.URL}],AcsUser:["$manageServer",function(ms){return ms.Username}],AcsPwd:["$manageServer",function(ms){return ms.Password}],InformEnable:["$manageServer",function(ms){return ms.PeriodicInformEnable}],InformInterval:["$manageServer",function(ms){return ms.PeriodicInformInterval}],InformTime:["$manageServer",function(ms){return ms.PeriodicInformTime}],ConnReqUser:["$manageServer",function(ms){return ms.ConnectionRequestUsername}],ConnReqPwd:["$manageServer",function(ms){return ms.ConnectionRequestPassword}],ConnReqPort:["$tr",function(tr){return tr.ConnectionRequestPort}],ConnReqPath:["$tr",function(tr){return tr.ConnectionRequestPath}],DSCPMark:["$tr",function(tr){return tr.DSCPMARK}],DHCPURL:["$manageServer",function(ms){return ms.DHCPOptionEnable}]},ifaces:["$data",function(d){return getIfaces(d)}],$ifaces:["ifaces",function(i){return i}],ifacesList:["ifaces",function(i){return _.pluck(i,"name")}],tmp:{"->":!0,iface:["$parent",function(p){return getCurrentIface(p.$tr,p.ifaces)}]},isStun:!1});return pattern.build({$data:data})}function nativeToDsysinit(data){function getIface(tmpIface,ifaces){var iface=_.findWhere(ifaces,{name:tmpIface});return iface.value}var pattern=T({"->":["$data","Device"],$data:":external",Device:{Services:{TR069:{"->":["$tr","ManagementServer"],$tr:["$root",function(r){return r.$data.tr69}],$ifaces:["$root",function(r){return r.$data.ifaces}],$tmpIface:["$root",function(r){return r.$data.tmp.iface}],ConnectionRequestPath:["$tr",function(tr){return tr.ConnReqPath}],ConnectionRequestPort:["$tr",function(tr){return tr.ConnReqPort}],Enable:["$tr",function(tr){return tr.Enable}],Iface:["$tmpIface","$ifaces",function(tmp,ifaces){return getIface(tmp,ifaces)}],DSCPMARK:["$tr",function(tr){return tr.DSCPMark}],ManagementServer:{"->":!0,$tr:["$parent",function(p){return p.$tr}],ConnectionRequestPassword:["$tr",function(tr){return tr.ConnReqPwd}],ConnectionRequestUsername:["$tr",function(tr){return tr.ConnReqUser}],URL:["$tr",function(tr){return tr.AcsURL}],Username:["$tr",function(tr){return tr.AcsUser}],Password:["$tr",function(tr){return tr.AcsPwd}],PeriodicInformEnable:["$tr",function(tr){return tr.InformEnable}],PeriodicInformInterval:["$tr",function(tr){return tr.InformInterval}],DHCPOptionEnable:["$tr",function(tr){return tr.DHCPURL}]}}}}});return pattern.build({$data:data})}var _=__webpack_require__(4),T=__webpack_require__(122).T,funcs=(__webpack_require__(284),__webpack_require__(5));module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(330)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getState(state){switch(state){case"Enabled":return"on";case"Aborted":return"off";case"Disabled":return"off";case"Enabling":return"pending";case"Disabling":return"pending"}}var pattern=T({"->":["?","$data","$mode","Rules","Leases"],$data:":external",Mode:["$data",function(d){return funcs.fetchBranch(d,modePath)}],Enable:["$data","Mode",function(data,mode){return"Firewall"!=mode?funcs.fetchBranch(data,path+"1.Enable"):void 0}],__index:["$data","Mode",function(data,mode){return"Firewall"!=mode?"1":void 0}],IfaceType:["Mode",function(mode){return"Firewall"!=mode?"wan_group":void 0}],WANGroup:["Mode",function(mode){return"Firewall"!=mode?"Device.Network.Group.1.":void 0}],$mode:["Mode",function(m){return m}],Leases:{"->":"?",$mode:["$parent",function(p){return p.$mode}],"?":["$mode",function(m){return"Firewall"!=m}],$data:["$parent",function(p){return p.$data}],$portMapping:["$data",function(d){return funcs.fetchBranch(d,path+"1.")}],"{$leases}":["$portMapping",function(pm){return pm?funcs.newConfig.normalize(pm.Leases):[]}],Protocol:["$leases*",function(l){return l.Proto}],InternalPort:["$leases*",function(l){return l.InternalPort}],ExternalPort:["$leases*",function(l){return l.ExternalPort}],InternalAddr:["$leases*",function(l){return l.InternalIPAddress}],Description:["$leases*",function(l){return l.Description}],TimeStamp:["$leases*",function(l){return l.TimeStamp}]},Rules:{"->":["?","$rules","NATPMP","UPnP","PCP","Permissions","Leases"],"?":["$parent",function(p){return"Firewall"==p.$mode}],"{$rules, __index}":["$parent",function(p){return funcs.newConfig.normalize(funcs.fetchBranch(p.$data,path))}],DefaultPolicy:["$rules*",function(r){return r.DefaultPolicy}],Enable:["$rules*",function(r){
return r.Enable}],NATPMP:{"->":!0,$rules:["$parent",function(p){return p.$rules}],Enable:["$rules*",function(r){return r.NATPMP.Enable}]},ExternalInterface:["$rules*",function(r){return r.ExternalInterface}],InternalInterface:["$rules*",function(r){return r.InternalInterface}],PCP:{"->":!0,$rules:["$parent",function(p){return p.$rules}],MaxLifeTime:["$rules*",function(r){return r.PCP.MaxLifetime}],MinLifeTime:["$rules*",function(r){return r.PCP.MinLifetime}]},UPnP:{"->":!0,$rules:["$parent",function(p){return p.$rules}],Enable:["$rules*",function(r){return r.UPnP.Enable}],SecureMode:["$rules*",function(r){return r.UPnP.SecureMode}]},WANGroup:["$rules*",function(r){return r.WANGroup}],IfaceType:["WANGroup",function(wg){return""==wg?"iface":"wan_group"}],Permissions:{"->":!0,$rules:["$parent",function(p){return p.$rules}],"{$permissions, $i}":["$rules*",function(r){return funcs.newConfig.normalize(r.Permissions)}],__id:["$i",function(i){return i}],ExternalPortStart:["$permissions*",function(p){return-1!=p.ExternalPortStart?p.ExternalPortStart:""}],ExternalPortEnd:["$permissions*",function(p){return-1!=p.ExternalPortEnd?p.ExternalPortEnd:""}],InternalPortStart:["$permissions*",function(p){return-1!=p.InternalPortStart?p.InternalPortStart:""}],InternalPortEnd:["$permissions*",function(p){return-1!=p.InternalPortEnd?p.InternalPortEnd:""}],InternalAddress:["$permissions*",function(p){return p.InternalAddress}],Policy:["$permissions*",function(p){return p.Policy}]},Leases:{"->":["?"],$rules:["$parent",function(p){return p.$rules}],"?":["$rules",function(r){return _.has(r,"Leases")}],"{$leases, $i}":["$rules",function(r){return funcs.newConfig.normalize(r.Leases)}],Protocol:["$leases*",function(l){return l.Proto}],InternalPort:["$leases*",function(l){return l.InternalPort}],ExternalPort:["$leases*",function(l){return l.ExternalPort}],InternalAddr:["$leases*",function(l){return l.InternalIPAddress}],Description:["$leases*",function(l){return l.Description}],TimeStamp:["$leases*",function(l){return l.TimeStamp}]},State:["$rules*",function(r){return getState(r.Status)}],StateText:["$rules*",function(r){return r.Status}]}});return pattern.build({$data:data})}function nativeToDsysinit(data){var pattern=T({"->":["$data","Device"],$data:":external",Device:{Services:{DynamicPortMapping:{"->":["$rule","NATPMP","PCP","UPnP","Permissions"],$rule:["$root",function(r){return r.$data}],":":["$rule*",function(r){return r.__index||"new_inst_1"}],Enable:["$rule",function(r){return r.Enable}],DefaultPolicy:["$rule",function(r){return r.DefaultPolicy}],NATPMP:{"->":!0,$rule:["$parent",function(p){return p.$rule.NATPMP}],Enable:["$rule*",function(r){return r.Enable}]},PCP:{"->":!0,$rule:["$parent",function(p){return p.$rule.PCP}],MaxLifetime:["$rule*",function(r){return r.MaxLifeTime}],MinLifetime:["$rule*",function(r){return r.MinLifeTime}]},UPnP:{"->":!0,$rule:["$parent",function(p){return p.$rule.UPnP}],Enable:["$rule*",function(r){return r.Enable}],SecureMode:["$rule*",function(r){return r.SecureMode}]},WANGroup:["$rule",function(r){return"wan_group"==r.IfaceType?r.WANGroup:""}],ExternalInterface:["$rule",function(r){return r.ExternalInterface}],InternalInterface:["$rule",function(r){return r.InternalInterface}],Permissions:{"->":["?"],$rules:["$parent",function(p){return p.$rule}],"?":["$rules",function(r){return"Firewall"==r.Mode}],"{$permissions, $i}":["$rules",function(r){return r.Permissions}],":":["$permissions*","$i*",function(p,i){return p.__id||"new_inst_"+i}],ExternalPortStart:["$permissions*",function(p){return Number(p.ExternalPortStart)||-1}],ExternalPortEnd:["$permissions*",function(p){return Number(p.ExternalPortEnd)||-1}],InternalPortStart:["$permissions*",function(p){return Number(p.InternalPortStart)||-1}],InternalPortEnd:["$permissions*",function(p){return Number(p.InternalPortEnd)||-1}],InternalAddress:["$permissions*",function(p){return p.InternalAddress}],Policy:["$permissions*",function(p){return p.Policy}]}}}}});return pattern.build({$data:data})}function attrs(attrs,data){function getList(arr){return _.map(arr,function(value){return{name:value,value:value}})}function getWanGroup(){var group=funcs.newConfig.normalize(funcs.fetchBranch(data,networkPath+"Group.")),result=[{name:"st_not_selected",value:""}];return result=result.concat(_.map(group,function(item,key){return{name:key,value:networkPath+"Group."+key+"."}}))}function getIfaces(){var group=funcs.newConfig.normalize(funcs.fetchBranch(data,networkPath+"Group.")),result={InternalInterface:[{name:"st_not_selected",value:""}],ExternalInterface:{"":[{name:"st_not_selected",value:""}]}};return _.each(group,function(wanGr,key){result.InternalInterface=result.InternalInterface.concat(getIntIface(wanGr)),_.has(result.ExternalInterface,wanGr.LAN)||(result.ExternalInterface[wanGr.LAN]=[{name:"st_not_selected",value:""}]),result.ExternalInterface[wanGr.LAN]=result.ExternalInterface[wanGr.LAN].concat(getExtIface(wanGr))}),result}function getIntIface(wanGr){var iface=funcs.fetchBranch(data,wanGr.LAN);return[{name:iface.Name||iface.Ifname,value:wanGr.LAN}]}function getExtIface(wanGr){var wans=funcs.newConfig.normalize(wanGr.WAN),result=[];return result=result.concat(_.map(wans,function(elem,key){if(-1==elem.Link.indexOf("IPsec")&&-1==elem.Link.indexOf("GRE")){var link=funcs.fetchBranch(data,elem.Link).Interface,iface=funcs.fetchBranch(data,link);return{name:iface.Name||iface.Ifname,value:elem.Link}}}))}var pattern=T({"->":!0,$attrs:":external",$attrPort:["$attrs",function(a){return funcs.fetchBranch(a,path+"#template.")}],DefaultPolicy:["$attrPort",function(a){return getList(a.DefaultPolicy["enum"])}],IfaceType:["$attrPort",function(a){return getList(["iface","wan_group"])}],WANGroup:["$attrs",function(a){return getWanGroup()}],Ifaces:["$attrs",function(a){return getIfaces()}]});return pattern.build({$attrs:attrs})}function defaultRule(attrs){var pattern=T({"->":["?","$rule","NATPMP","UPnP","PCP","Permissions"],$attrs:":external",$rule:["$attrs",function(a){return funcs.fetchBranch(a,path+"#template.")}],DefaultPolicy:["$rule*",function(r){return r.DefaultPolicy["default"]}],Enable:["$rule*",function(r){return r.Enable["default"]}],NATPMP:{"->":!0,$rule:["$parent",function(p){return p.$rule}],Enable:["$rule*",function(r){return r.NATPMP.Enable["default"]}]},ExternalInterface:["$rule*",function(r){return r.ExternalInterface["default"]}],InternalInterface:["$rule*",function(r){return r.InternalInterface["default"]}],PCP:{"->":!0,$rule:["$parent",function(p){return p.$rule}],MaxLifeTime:["$rule*",function(r){return r.PCP.MaxLifetime["default"]}],MinLifeTime:["$rule*",function(r){return r.PCP.MinLifetime["default"]}]},UPnP:{"->":!0,$rule:["$parent",function(p){return p.$rule}],Enable:["$rule*",function(r){return r.UPnP.Enable["default"]}],SecureMode:["$rule*",function(r){return r.UPnP.SecureMode["default"]}]},WANGroup:["$rule*",function(r){return r.WANGroup["default"]}],IfaceType:["WANGroup",function(wg){return""==wg?"iface":"wan_group"}],Permissions:{"->":!0,$rule:["$parent",function(p){return p.$rule}],"{$permissions, $i}":["$rule*",function(r){return funcs.newConfig.normalize(r.Permissions["#attr"]["default"])}],__id:["$i",function(i){return i}],ExternalPortStart:["$permissions*",function(p){return-1!=p.ExternalPortStart?p.ExternalPortStart:""}],ExternalPortEnd:["$permissions*",function(p){return-1!=p.ExternalPortEnd?p.ExternalPortEnd:""}],InternalPortStart:["$permissions*",function(p){return-1!=p.InternalPortStart?p.InternalPortStart:""}],InternalPortEnd:["$permissions*",function(p){return-1!=p.InternalPortEnd?p.InternalPortEnd:""}],InternalAddress:["$permissions*",function(p){return p.InternalAddress}],Policy:["$permissions*",function(p){return p.Policy}]}});return pattern.build({$attrs:attrs})}var _=__webpack_require__(4),T=__webpack_require__(122).T,funcs=__webpack_require__(5),path="Device.Services.DynamicPortMapping.",modePath="Device.DeviceInfo.DeviceMode",networkPath="Device.Network.";module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit,defaultRule:defaultRule,attrs:attrs}},function(module,exports,__webpack_require__){"use strict";function isChanged(protocol){var path,changes=status();for(path in changes)if(!path.indexOf("Device.DNS."+protocol))return!0;return!1}function status(){return dms.data?_.extend(funcs.getChanges(dms.data,dms.__initialData),funcs.getChanges(dms.__initialData,dms.data)):{}}function data(){return dms.data?dms.data.Device.DNS:{}}var dms=__webpack_require__(163).get().dns,funcs=__webpack_require__(5),_=__webpack_require__(4);module.exports={pull:dms.pull,push:dms.push,status:status,isChanged:isChanged,data:data},dms.isChanged=isChanged,dms.status=status},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(333)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){var pattern=T({"->":["$modem","Modems"],$data:":external",$modem:["$data",function(d){return funcs.fetchBranch(d,path)}],Modems:{"->":!0,"{$modem, $key}":["$parent",function(p){return funcs.newConfig.normalize(p.$modem)}],vendor:["$modem*",function(m){return m.Vendor}],model:["$modem*",function(m){return m.Model}],revision:["$modem*",function(m){return m.Revision}],imei:["$modem*",function(m){return m.IMEI}],name:["$modem*",function(m){return m.Name}],vid:["$modem*",function(m){return m.VID}],pid:["$modem*",function(m){return m.PID}],descriptor:["$modem*",function(m){return m.Descriptor}],iface:["$modem*",function(m){return m.Interface}],path:["$modem*",function(m){return m.Path}],status:["$modem*",function(m){return m.State}],serial:["$modem*",function(m){return m.Serial}],nodeAT:["$modem*",function(m){return m.NodeAT}],nodePPP:["$modem*",function(m){return m.NodePPP}],nodes:["$modem*",function(m){return funcs.newConfig.normalize(m.Nodes)}],actual_mode:["$modem*",function(m){return m.Type}],__id:["$key*",function(k){return k}],percent:["$modem*",function(m){return m.Cell.Percent+"%"}]}});return pattern.build({$data:data})}function nativeToDsysinit(data){var pattern=T({"->":!0,$data:":external"});return pattern.build({$data:data})}var T=(__webpack_require__(4),__webpack_require__(122).T),funcs=__webpack_require__(5),path="Device.USB.Modem.";module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}},function(module,exports,__webpack_require__){"use strict";var dir=__webpack_require__(335),dsl=__webpack_require__(336);module.exports=function(){var obj={};return dir.pull&&dsl.pull&&autoconf?autoconf.BR2_PACKAGE_ANWEB_SUPPORT_ADSL?dsl:dir:(dir.pull&&!dsl.pull?obj=dir:dsl.pull&&!dir.pull&&(obj=dsl),obj)}},function(module,exports,__webpack_require__){"use strict";var _=__webpack_require__(4),dms=(__webpack_require__(5),__webpack_require__(163).get().portAllocation);module.exports=function(){function updateAvailableSourcesList(){availableSources=_.reduce(dms.data.sources,function(memo,source,index){return sourceMayBeGrouped(source)&&(memo[index]=source),memo},{})}function updateType(source,id,isDsysinit){if("wan"==source.type&&source.vid)throw"Cannot create or update tagged NAT";if(!id||"wan"!=source.type){if(!hasDefaultWanSource()&&!source.vid)return void(source.type="wan");if(hasDefaultWanSource()&&source.vid&&(source.type=isDsysinit?"wan_tag":"bridge"),hasDefaultWanSource()&&!source.vid)throw"Cannot create or update bridge without tag"}}function addSource(source,isDsysinit){if(!source.name)throw"source name must be specified";updateType(source,void 0,isDsysinit);var maxId=_.max(_.keys(dms.data.sources))||-1,newId=Number(maxId)+1;dms.data.sources[newId]=source;var internetPort=_.findWhere(dms.data.wanPorts,{name:"internet"})||_.findWhere(dms.data.wanPorts,{name:"port5"});return internetPort&&internetPort.bridge.push(newId),updateAvailableSourcesList(),source}function getDefaultWanSourceId(){var defaultSource=_.find(_.pairs(getAvailableSources()),function(pair){return"wan"==pair[1].type&&!pair[1].vid});return defaultSource?defaultSource[0]:null}function hasDefaultWanSource(){return!!getDefaultWanSourceId()}function updateSource(id,source,isDsysinit){updateType(source,id,isDsysinit),_.extend(dms.data.sources[id],source),updateAvailableSourcesList()}function removeSource(id){var source=dms.data.sources[id];_.each(dms.data.lanPorts,function(port){source&&port.bridge==source.name&&(port.bridge=null)}),delete dms.data.sources[id],updateAvailableSourcesList()}function getAvailableSources(){return availableSources||updateAvailableSourcesList(),availableSources}function filterBridges(){return _.omit(getAvailableSources(),function(source){return"bridge"!=source.type})}function portInBridge(port){return!!port.bridge&&!!filterBridges()[port.bridge]}function sourceMayBeGrouped(source){return"bridge"==source.type||"wan"==source.type&&!source.vid||"wan_tag"==source.type}function sourceIsEditable(source){return!source||"bridge"==source.type||"wan_tag"==source.type}function getReservedNames(){return _.pluck(dms.data.sources,"name")}function getReservedVlans(params){return _.compact(_.pluck(dms.data.sources,"vid"))}function getDefaultSourceId(){var wanSourceId=getDefaultWanSourceId();return isNull(wanSourceId)?null:wanSourceId}function getDefaultSource(){var defaultSourceId=getDefaultWanSourceId();return isNull(defaultSourceId)?null:getAvailableSources()[defaultSourceId]}function isNull(value){return _.isUndefined(value)||_.isNull(value)}function portInDefaultGroup(port){var defaultSourceId=getDefaultSourceId();return!isNull(defaultSourceId)&&defaultSourceId==port.bridge}function pull(constants){var promise=dms.pull(null,constants);return promise.then(updateAvailableSourcesList),promise}var availableSources=null;return{pull:pull,push:dms.push,sources:getAvailableSources,connections:function(){return[]},deletedSources:function(){return[]},ports:function(){return dms.data.lanPorts},availIfaces:function(){return[]},getBusyPVC:function(){return[]},addSource:addSource,updateSource:updateSource,removeSource:removeSource,sourceIsEditable:sourceIsEditable,getDeviceClass:function(){return"DIR"},getReservedNames:getReservedNames,getReservedVlans:getReservedVlans,getDefaultSource:getDefaultSource,getDefaultSourceId:getDefaultSourceId,portInDefaultGroup:portInDefaultGroup,hasDefaultWanSource:hasDefaultWanSource,portInBridge:portInBridge,isChanged:dms.isChanged}}()},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(340)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){var pattern=T({"->":["$data","printerList"],$data:":external",$printserver:["$data",function(d){return funcs.fetchBranch(d,paths.printserver)}],enable:["$printserver*",function(ps){return ps.Enable}],connected:["$printserver*",function(ps){return"Enabled"==ps.Status}],printer:["$printserver*",function(ps){return ps.Printer}],printerList:{"->":!0,"{$printers, $i}":["$parent",function(p){return funcs.newConfig.normalize(funcs.fetchBranch(p.$data,paths.printer))}],name:["$printers*",function(p){return p.Model+" "+p.Vendor}],value:["$i*",function(i){return paths.printer+i+"."}]}});return pattern.build({$data:data})}var T=(__webpack_require__(4),__webpack_require__(122).T),funcs=__webpack_require__(5),paths={printserver:"Device.Services.PrintServer.",printer:"Device.USB.Printer."};module.exports={dsysinitToNative:dsysinitToNative}},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(343)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getModemList(modems){var result=[],allModems=funcs.newConfig.normalize(modems);for(var key in allModems)result.push({name:allModems[key].Vendor+" "+allModems[key].Model,key:allModems[key].__inx});return result}function getModems(config,data){function getGW(config){function getGWLink(group){if(group&&group.order.length){var order=group.order,key=order[0],conn=group[key].Link,usbConn=funcs.newConfig.normalize(funcs.fetchBranch(config,"Device.USB.Connection.")),gw=_.findKey(usbConn,function(elem,key){var connections=_.pluck(funcs.newConfig.normalize(elem.Connections),"Link");return _.contains(connections,conn)||conn=="Device.USB.Connection."+key+"."});return gw?"Device.USB.Connection."+gw+".":conn}}var group=funcs.fetchBranch(config,"Device.Network.Group.1.");if(!group)return{};var result={};return result.v4=getGWLink(group.WAN),_.has(group,"WANv6")&&(result.v6=getGWLink(group.WANv6)),result}var modems=funcs.newConfig.normalize(data),gw=getGW(config),result=[];return _.each(modems,function(elem,key){"Unknown"!=elem.State&&(elem.__inx=key,elem.isGW=elem.Connection==gw.v4||elem.Connection==gw.v6,result.push(elem))}),result}function getStatus(status){switch(status){case"Registered":return"usb_modem_basic_state_registered";case"Not registered":return"usb_modem_basic_state_not_registered";case"Registration denied":return"usb_modem_basic_state_denied_registered";case"Searching":return"usb_modem_basic_state_searching"}}function getRoamingState(roaming){if(roaming)switch(roaming){case"On":return"ipsec_status_enabled";case"Off":return"wifi_wds_mode_disabled";default:return roaming}}function getScheduleInx(data,modemKey){if(__autoconf.BR2_PACKAGE_ANWEB_USBMODEM_RESTORE){var commands=funcs.newConfig.normalize(funcs.fetchBranch(data,commandPath)),sched=funcs.newConfig.normalize(funcs.fetchBranch(data,schedPath)),modemPath=path+modemKey+".",modemCommand=_.findKey(commands,function(elem){var args=elem.Arguments.split(" ");return"exec"==elem.Command&&args[0]&&args[1]&&"usbmodem_restore"==args[0]&&(args[1]==modemKey||args[1]==modemPath)&&elem.Origin==modemPath});if(modemCommand){var schedKey=_.findKey(sched,function(elem){var schedCommands=_.pluck(funcs.newConfig.normalize(elem.Commands),"Link");return _.contains(schedCommands,commandPath+modemCommand+".")});return schedKey}}}var pattern=T({"->":["$data","$modems","Modems"],$data:":external",$modems:["$data",function(d){return funcs.fetchBranch(d,path)}],Autoconnect:["$data",function(d){return __autoconf&&(__autoconf.BR2_PACKAGE_ANWEB_CUSTOM_HQ_31892||__autoconf.BR2_PACKAGE_ANWEB_CUSTOM_MEGAFON_33808)?funcs.fetchBranch(d,autoconnectPath):void 0}],modemsList:["$modems",function(m){return getModemList(m)}],Modems:{"->":["$modem","$key","SIM","Cell"],"{$modem, $key}":["$parent",function(p){return getModems(p.$data,p.$modems)}],__inx:["$modem*",function(m){return m.__inx}],Title:["$key*",function(k){return k+1}],Vendor:["$modem*",function(m){return m.Vendor}],Model:["$modem*",function(m){return m.Model}],Revision:["$modem*",function(m){return m.Revision}],IMEI:["$modem*",function(m){return m.IMEI}],Iface:["$modem*",function(m){return m.Ifname}],Status:["$modem*",function(m){return m.State}],Serial:["$modem*",function(m){return m.Serial}],ActiveSIM:["$modem*",function(m){return m.ActiveSIM.toString()}],Type:["$modem*",function(m){return"3g"==m.Type?"usb_modem_basic_3g_modem":"usb_modem_basic_lte_modem"}],Location:["$modem*",function(m){return m.Internal?"usb_modem_basic_internal":"usb_modem_basic_external"}],isGW:["$modem*",function(m){return m.isGW}],Internal:["$modem*",function(m){return m.Internal}],Power:["$modem*",function(m){return"Removed"!=m.State}],Scheduler:["$modem*","$parent",function(m,p){return getScheduleInx(p.$data,m.__inx)}],Cell:{"->":!0,$cell:["$parent",function(p){return p.$modem?p.$modem.Cell:void 0}],ActualMode:["$cell*",function(c){return c.ActualMode}],Band:["$cell*",function(c){return c.Band}],CellID:["$cell*",function(c){return c.CellID}],EcIo:["$cell*",function(c){return c.EcIo}],LAC:["$cell*",function(c){return c.LAC}],TAC:["$cell*",function(c){return c.TAC}],RSSI:["$cell*",function(c){return c.RSSI}],RSCP:["$cell*",function(c){return c.RSCP}],RSRP:["$cell*",function(c){return c.RSRP}],RSRQ:["$cell*",function(c){return c.RSRQ}],SINR:["$cell*",function(c){return c.SINR}],Percent:["$cell*",function(c){return c.Percent+"%"}],Operator:["$cell*",function(c){return c.Operator}],Roaming:["$cell*",function(c){return getRoamingState(c.Roaming)}],State:["$cell*",function(c){return getStatus(c.State)}]},SIM:{"->":["$sim","PIN","SMS"],"{$sim, $id}":["$parent",function(p){return p.$modem?funcs.newConfig.normalize(p.$modem.SIM):{}}],__inx:["$id*",function(id){return id}],IMSI:["$sim*",function(s){return s.IMSI||"-"}],Inserted:["$sim*",function(s){return s.Inserted}],Name:["$sim*","$id*",function(s,id){return"SIM "+(s.Name||id)}],Link:["$id*","$parent",function(id,p){return path+p.$modem.__inx+".SIM."+id+"."}],PIN:{"->":!0,$pin:["$parent",function(p){return p.$sim?p.$sim.PIN:void 0}],Locked:["$pin*",function(p){return p.Locked}],PIN:["$pin*",function(p){return p.PINLeft}],PUK:["$pin*",function(p){return p.PUKLeft}],Status:["$pin*",function(p){return p.Status}]},SMS:{"->":["?"],"?":["$parent",function(p){return p.$sim&&_.has(p.$sim,"SMS")}],$sms:["$parent",function(p){return p.$sim&&p.$sim.SMS?p.$sim.SMS.Statistics:void 0}],Read:["$sms*",function(s){return s.Read}],Sent:["$sms*",function(s){return s.Sent}],Unread:["$sms*",function(s){return s.Unread}],Unsent:["$sms*",function(s){return s.Unsent}],StorageCapacity:["$sms*",function(s){return s.StorageCapacity}],StorageUsed:["$sms*",function(s){return s.StorageUsed}]}}}});return pattern.build({$data:data})}function nativeToDsysinit(data){var pattern=T({"->":!0,$data:":external"});return pattern.build({$data:data})}function attrsToNative(attrs){var pattern=T({"->":!0,$attrs:":external",$modem:["$attrs",function(a){return funcs.fetchBranch(a,path+"#template.")}],$cell:["$modem*",function(m){return m.Cell}],Vendor:["$modem*",function(m){return m.Vendor}],Model:["$modem*",function(m){return m.Model}],Revision:["$modem*",function(m){return m.Revision}],IMEI:["$modem*",function(m){return m.IMEI}],Iface:["$modem*",function(m){return m.Interface}],Status:["$modem*",function(m){return m.Status}],Serial:["$modem*",function(m){return m.Serial}],ActualMode:["$cell*",function(c){return c.ActualMode}],Band:["$cell*",function(c){return c.Band}],CellID:["$cell*",function(c){return c.CellID}],EcIo:["$cell*",function(c){return c.EcIo}],LAC:["$cell*",function(c){return c.LAC}],TAC:["$cell*",function(c){return c.TAC}],RSSI:["$cell*",function(c){return c.RSSI}],RSCP:["$cell*",function(c){return c.RSCP}],RSRP:["$cell*",function(c){return c.RSRP}],RSRQ:["$cell*",function(c){return c.RSRQ}],SINR:["$cell*",function(c){return c.SINR}],Percent:["$cell*",function(c){return c.Percent}],Operator:["$cell*",function(c){return c.Operator}],Roaming:["$cell*",function(c){return c.Roaming}],State:["$cell*",function(c){return c.State}],Type:["$modem*",function(m){return m.Type}]});return pattern.build({$attrs:attrs})}var _=__webpack_require__(4),T=__webpack_require__(122).T,funcs=__webpack_require__(5),path="Device.USB.Modem.",schedPath="Device.System.Scheduler.Commands.",commandPath="Device.System.Command.",autoconnectPath="Device.USB.AutoConnect.Enable",__autoconf="undefined"!=typeof autoconf?autoconf:{};module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit,attrsToNative:attrsToNative}},function(module,exports,__webpack_require__){"use strict";module.exports={Helper:__webpack_require__(345),converter:__webpack_require__(346)}},function(module,exports,__webpack_require__){"use strict";function SNMP(config,attrs){function cleanEmptyNames(communities){return _.each(communities,function(elem,inx){""==elem.name&&delete communities[inx]}),_.compact(communities)}function getDeviceMode(){return config&&config.device_mode||null}function getBasicParams(){return workModel.BasicParams}function setParams(model){workModel.BasicParams=_.extend(workModel.BasicParams,_.pick(model.params,_.keys(workModel.BasicParams))),workModel.Communities=model.communities}function prepareParams(){var data={snmp:funcs.deepClone(workModel.BasicParams)};return data.snmp.users=_.map(workModel.Users,function(user){return recoveryUser(user)}),data.snmp.communities=cleanEmptyNames(workModel.Communities),data}function prepareUsersList(){var data={snmp:{users:_.map(workModel.Users,function(user){return recoveryUser(user)})}};return data}function getUsersList(){return funcs.deepClone(workModel.Users)}function getUser(id){var user=funcs.deepClone(workModel.Users[id]);return user&&_.has(workModel.BasicParams,"subtree_length")&&(user.subtree_length=workModel.BasicParams.subtree_length),user}function getDefUser(){return funcs.deepClone(DefaultUser)}function setUser(user_edit,key){void 0!=key?workModel.Users[key]=user_edit:workModel.Users.push(user_edit)}function removeUsers(ids){var ids=ids&&!_.isArray(ids)?[ids]:ids;return workModel.Users=_.reject(workModel.Users,function(user){return!!~_.indexOf(ids,user.__id)}),workModel.Users}function getAuthProto(){return funcs.deepClone(consts.USER_AUTH_PROTOCOLS_LIST)}function getCryptoProto(){return funcs.deepClone(consts.USER_CRYPTO_PROTOCOLS_LIST)}function convertUser(user,id){var res=_.extend(funcs.deepClone(user),{__id:id});return res.auth_pass=res.auth_proto?res.auth_pass:"",res.priv_proto=res.auth_proto?res.priv_proto:"",res.priv_pass=res.priv_proto?res.priv_pass:"",res}function recoveryUser(user){var res=_.omit(funcs.deepClone(user),"__id");return res.auth_pass=res.auth_proto?res.auth_pass:"",res.priv_proto=res.auth_proto?res.priv_proto:"",res.priv_pass=res.priv_proto?res.priv_pass:"",res}function getCommunitiesList(){return funcs.deepClone(workModel.Communities)}function getDefCommunity(){return funcs.deepClone(DefaultCommunity)}var workModel={BasicParams:config&&config.snmp?_.omit(config.snmp,"users","communities"):{},Users:config&&config.snmp?_.map(config.snmp.users,function(user,inx){return convertUser(user,inx+1)}):{},Communities:config&&config.snmp?config.snmp.communities:{}},DefaultUser=(funcs.deepClone(workModel),{user:"",auth_proto:"",auth_pass:"",priv_proto:"",priv_pass:"",mib_subtree:"",can_write:!1,subtree_length:workModel.BasicParams.subtree_length}),DefaultCommunity={name:"",can_write:!1};return{setParams:setParams,getBasicParams:getBasicParams,getUsersList:getUsersList,getUser:getUser,getDefUser:getDefUser,setUser:setUser,removeUsers:removeUsers,getCommunitiesList:getCommunitiesList,getDefCommunity:getDefCommunity,getAuthProto:getAuthProto,getCryptoProto:getCryptoProto,prepareParams:prepareParams,prepareUsersList:prepareUsersList,getDeviceMode:getDeviceMode}}var _=__webpack_require__(4),funcs=__webpack_require__(5),consts={USER_AUTH_PROTOCOLS_LIST:["MD5","SHA"],USER_CRYPTO_PROTOCOLS_LIST:["DES","AES"]};module.exports=SNMP},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){var pattern=T({"->":["$data","snmp","device_mode"],$data:":external",device_mode:["$data",function(d){return funcs.fetchBranch(d,modePath)||"Router"}],snmp:{"->":["$data","users","communities"],$data:["$parent",function(p){return funcs.fetchBranch(p.$data,snmpPath)}],enabled:["$data",function(d){return d.Enable}],remote_subnet:["$data",function(d){return d.RemoteSubnet}],name:["$data",function(d){return d.Name}],contact:["$data",function(d){return d.Contact}],location:["$data",function(d){return d.Location}],users:{"->":!0,"{$users, $key}":["$parent",function(p){return funcs.newConfig.normalize(p.$data.V3)}],id:["$key*",function(k){return k}],user:["$users*",function(u){return u.UserName}],auth_proto:["$users*",function(u){return _.isEmpty(u.AuthPass)?"":u.AuthProto}],auth_pass:["$users*",function(u){return u.AuthPass}],priv_proto:["$users*",function(u){return _.isEmpty(u.PrivPass)?"":u.PrivProto}],priv_pass:["$users*",function(u){return u.PrivPass}],mib_subtree:["$users*",function(u){return u.Subtree}],can_write:["$users*",function(u){return"RW"==u.Mode}]},communities:{"->":!0,"{$community, $key}":["$parent",function(p){return funcs.newConfig.normalize(p.$data.V2C)}],id:["$key*",function(k){return k}],name:["$community*",function(c){return c.Community}],can_write:["$community*",function(c){return"RW"==c.Mode}]}}});return pattern.build({$data:data})}function nativeToDsysinit(data){var pattern=T({"->":["$data","Device"],$data:":external",Device:{Services:{SNMP:{"->":["$data","V2C","V3"],$data:["$root",function(r){return r.$data.snmp}],Enable:["$data",function(d){return d.enabled}],RemoteSubnet:["$data",function(d){return d.remote_subnet}],Name:["$data",function(d){return d.name}],Contact:["$data",function(d){return d.contact}],Location:["$data",function(d){return d.location}],V3:{"->":!0,"{$users, $key}":["$parent",function(p){return p.$data.users}],":":["$users*","$key*",function(u,k){return _.has(u,"id")?u.id:"+"+k}],UserName:["$users*",function(u){return u.user}],AuthProto:["$users*",function(u){return _.isEmpty(u.auth_proto)?void 0:u.auth_proto}],AuthPass:["$users*",function(u){return _.isEmpty(u.auth_proto)?"":u.auth_pass}],PrivProto:["$users*",function(u){return _.isEmpty(u.priv_proto)?void 0:u.priv_proto}],PrivPass:["$users*",function(u){return _.isEmpty(u.priv_pass)?"":u.priv_pass}],Mode:["$users*",function(u){return u.can_write?"RW":"RO"}],Enable:!0,Subtree:["$users*",function(u){return u.mib_subtree}]},V2C:{"->":!0,"{$community, $key}":["$parent",function(p){return p.$data.communities}],":":["$community*","$key*",function(c,k){return _.has(c,"id")?c.id:"+"+k}],Community:["$community*",function(c){return c.name}],Mode:["$community*",function(c){return c.can_write?"RW":"RO"}],Enable:!0}}}}});return pattern.build({$data:data})}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),snmpPath="Device.Services.SNMP.",modePath="Device.DeviceInfo.DeviceMode";module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(349)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(input){var pattern=T({"->":["$data","$attrs","$radio","$deviceMode","RadioBands","Radio","Security","Interfaces","Statistic"],$input:":external",$data:["$input",function(i){return i.data}],$attrs:["$input",function(i){return i.attrs?funcs.fetchBranch(i.attrs,paths.profile+"#template."):void 0}],$radio:["$data",function(d){return funcs.fetchBranch(d,paths.radio)}],$deviceMode:["$data",function(d){return funcs.fetchBranch(d,paths.mode)}],DeviceMode:["$deviceMode",function(dm){return dm}],RadioBands:{"->":!0,"{$radio, $i}":["$root",function(r){return r.$radio}],Inst:["$i",function(i){return i}],Band:["$radio*",function(r){return r.OperatingFrequencyBand}],Standart:["$radio*",function(r){return r.OperatingStandards.replace(/\//g,"")}]},Radio:{"->":!0,1:["$parent",function(p){return components.radio.build({$data:p.$data,$deviceMode:p.$deviceMode,$attrs:p.$attrs,$radio:p.$radio,$band:"2.4GHz"})}],2:["$parent",function(p){return components.radio.build({$data:p.$data,$deviceMode:p.$deviceMode,$attrs:p.$attrs,$radio:p.$radio,$band:"5GHz"})}]},Interfaces:{"->":!0,$interfaces:["$parent",function(p){return funcs.fetchBranch(p.$data,paths.ifaces)}],Bridge:["$interfaces*",function(i){return funcs.newConfig.normalize(i.Bridge)}],WiFi:["$interfaces*",function(i){return funcs.deepClone(i.WiFi)}]}});return pattern.build({$input:input})}function getRadio(radio,band){return radio=funcs.newConfig.normalize(radio),_.each(radio,function(elem,key){elem.Inx=key}),_.find(radio,function(r){return r.OperatingFrequencyBand&&r.OperatingFrequencyBand==band})}function getSuperMesh(data,radio){var superMesh={},radioSuperMesh=funcs.newConfig.normalize(radio.SuperMeshPoint);if(!radioSuperMesh||!_.size(radioSuperMesh))return{};radioSuperMesh=_.map(radioSuperMesh,function(sm,key){return sm.inx=key,sm});var superMeshProfile=funcs.fetchBranch(data,radioSuperMesh[0].Profile);

return superMesh=_.extend(radioSuperMesh[0],superMeshProfile)}function getInx(profile){var profileId=profile?profile.match(/\.\d+\.$/g,""):void 0;return profileId?Number(profileId[0].replace(/\./g,"")):void 0}function getModeAvailable(radio,attrs){function getStandards(radio){return _.map(radio,function(elem){var standarts=elem.OperatingStandards.replace(/\//g,"");return standarts})}function getStandardName(standart){switch(standart){case"a":return"802.11 A";case"b":return"802.11 B";case"g":return"802.11 G";case"n":return"802.11 N";case"ac":return"802.11 AC";case"bg":return"802.11 B/G mixed";case"gn":return"802.11 G/N mixed";case"bgn":return"802.11 B/G/N mixed";case"bgnac":return"802.11 B/G/N mixed + 256QAM";case"an":return"802.11 A/N mixed";case"acn":return"802.11 AC/N mixed";case"acan":return"802.11 AC/A/N mixed";case"anac":return"802.11 A/N/AC mixed";case"nac":return"802.11 N/AC mixed"}}function getAuthAvail(standart,supportModes){var modes=supportModes;return isGBStandard(standart)||"a"==standart||(modes=_.without(modes,"WEP")),modes=_.without(modes,"SHARED"),_.map(modes,function(mode){return{Id:mode,EncrAvailable:getEncrAvailable(standart,mode)}})}function getEncrAvailable(standart,mode){switch(mode){case"OPEN":return isGBStandard(standart)||"a"==standart?["WEP","NONE"]:["NONE"];case"WEP":return["WEP"];case"WPA":return isGBStandard(standart)||"a"==standart?["TKIP"]:["AES"];case"WPA2":return["AES"];case"WPAPSK":case"WPA1WPA2":case"WPA2PSK":case"WPAPSKWPA2PSK":return isGBStandard(standart)||"a"==standart?["TKIP","AES","TKIP+AES"]:["AES"]}}function isGBStandard(standards){return~"bg".indexOf(standards)}if(attrs){var standarts=getStandards(radio),superMeshAttrs=attrs,supportModes=superMeshAttrs.Security.ModesSupported["default"].split(",");return _.map(standarts,function(standart){return{Standard:standart,Name:getStandardName(standart),AuthAvail:getAuthAvail(standart,supportModes)}})}}function getModeEnabled(mode){if(mode)switch(mode){case"NONE":case"OPEN":return"None";case"WPAPSK":return"WPA-Personal";case"WPA2PSK":return"WPA2-Personal";case"WPAPSKWPA2PSK":return"WPA-WPA2-Personal";case"WPA":return"WPA-Enterprise";case"WPA2":return"WPA2-Enterprise";case"WPA1WPA2":return"WPA-WPA2-Enterprise";case"SHARED":case"WEP":return"WEP";default:return mode}}function getStats(data,supermesh,type){if(!supermesh)return[];var path=supermesh.Statistics,stats=funcs.fetchBranch(data,path);if(!stats)return[];switch(type){case"ap":return funcs.newConfig.normalize(stats.ApList);case"net":return funcs.newConfig.normalize(stats.NetReview);case"client":return funcs.newConfig.normalize(stats.ClientList);case"neighbour":return funcs.newConfig.normalize(stats.Neighbours)}}function getRouretMAC(data,supermesh){if(!supermesh)return"";var path=supermesh.Statistics,stats=funcs.fetchBranch(data,path);if(!stats)return"";var netReview=stats.NetReview,router=_.find(netReview,{UplinkMacAddress:""});return router?router.MacAddress:""}function getNeighbourType(param){function getTypeName(key){switch(key){case"Abandon":return"wifi_supermesh_nbr_type_abandon";case"Candidate":return"wifi_supermesh_nbr_type_candidate";case"Downlink":return"wifi_supermesh_nbr_type_downlink";case"Uplink":return"wifi_supermesh_nbr_type_uplink";case"Nonpotential":return"wifi_supermesh_nbr_type_nonpotential";case"Stranded":return"wifi_supermesh_nbr_type_stranded";case"Wired":return"wifi_supermesh_nbr_type_wired"}}var result=[];return _.each(param,function(elem,key){elem&&result.push(getTypeName(key))}),result.join("/")}function getList(param){var result=[];return _.each(param,function(elem,key){elem&&result.push(key)}),result.join("/")}function getUplinkType(type){switch(type){case"UNKNOWN":return"wifi_supermesh_uplink_type_unknown";case"Wireless":return"wifi_supermesh_uplink_type_wireless";case"Wired":return"wifi_supermesh_uplink_type_wired";case"Power Line":return"wifi_supermesh_uplink_type_powerline";case"MOCA":return"wifi_supermesh_uplink_type_moca"}}function getState(state){switch(state){case"UNKNOWN":return"wifi_supermesh_state_unknown";case"Associated":return"wifi_supermesh_state_associated";case"Authorized":return"wifi_supermesh_state_autorized";case"IP assigned":return"wifi_supermesh_state_ip_assigned";case"Disconnected":return"wifi_supermesh_state_disconnected";case"Idle timeout":return"wifi_supermesh_state_idle_timeout"}}function getError(error){switch(error){case"UNKNOWN":return"wifi_supermesh_error_unknown";case"Unqualified UL":return"wifi_supermesh_error_unqualified_ul";case"Too many hops":return"wifi_supermesh_error_hops";case"Too many DL Aps":return"wifi_supermesh_error_dl";default:return error}}function getStatList(attrs,mode){var netReview=[{value:"netReview",name:"wifi_supermesh_net_review"}],result=[{value:"apList",name:"wifi_supermesh_ap_list"},{value:"clientList",name:"wifi_supermesh_client_list"},{value:"neighbours",name:"wifi_supermesh_neighbours"}];return"AccessPoint"!=mode&&(result=netReview.concat(result)),result}function nativeToDsysinit(data){function getID(point){return point?_.has(point,"InitRadio")&&point.InitRadio!=point.Radio?"new_inst":_.isUndefined(point.PointInx)?"new_inst":point.PointInx:void 0}function getMembers(data){var ifaces=data.Interfaces;if(ifaces&&ifaces.Bridge){var bridges=ifaces.Bridge,result={};return _.each(bridges,function(br,id){var bridgeMembers=funcs.newConfig.normalize(br.Members);if(bridgeMembers){var members={};_.each(bridgeMembers,function(member,key){-1==member.Link.indexOf("WiFi")&&(members[key]=member)}),_.each(data.Radio,function(elem,key){if(elem.Enable)if(_.isUndefined(elem.Inx))"1"==id&&(members.new_inst={Link:paths.ifaces+"WiFi."+(parseInt(ifaces.WiFi.max_instance)+1)+"."});else{var ifaceId=_.findKey(bridgeMembers,{Link:elem.Interface});ifaceId&&(members[ifaceId]={Link:elem.Interface})}}),(_.size(members)||"1"==id)&&(result[id]={Members:members})}}),result}}function getModeEnabled(mode){if(mode)switch(mode){case"None":return"OPEN";case"WPA-Personal":return"WPAPSK";case"WPA2-Personal":return"WPA2PSK";case"WPA-WPA2-Personal":return"WPAPSKWPA2PSK";case"WPA-Enterprise":return"WPA";case"WPA2-Enterprise":return"WPA2";case"WPA-WPA2-Enterprise":return"WPA1WPA2";case"WEP":return"SHARED";default:return mode}}var pattern=T({"->":["$data","Device"],$data:":external",Device:{"->":!0,WiFi:{"->":!0,Radio:{"->":["$radio","SuperMeshPoint"],"{$radio}":["$root",function(r){return r.$data.Radio}],":":["$radio",function(r){return r.__id}],AutoChannelEnable:["$radio","$root",function(r,root){return!(r.Enable&&!r.PreferMaster&&"AccessPoint"==root.$data.DeviceMode)&&r.AutoChannelEnable}],SuperMeshPoint:{"->":!0,$radio:["$parent",function(p){return p.$radio}],$point:["$root","$radio",function(r,radio){return radio.Enable?radio:void 0}],":":["$point*","$radio",function(p,r){return getID(p,r)}],Enable:["$point*",function(p){return p.Enable}],Profile:["$point*",function(p){return paths.profile+(p.PointInx?p.PointInx:"new_inst")+"."}]}},SuperMeshProfile:{"->":["$data","Security"],"{$radio}":["$root",function(r){return r.$data.Radio}],$data:["$radio",function(r){return r.Enable?r:void 0}],":":["$data*",function(d){return d.Inx?d.Inx:"new_inst"}],$mode:["$root",function(r){return r.$data.DeviceMode}],Domain:["$data*",function(d){return d.Domain}],Election:["$data*","$mode",function(d,mode){return"AccessPoint"==mode?d.Election:void 0}],IPv6:["$data*",function(d){return d.IPv6}],IsGateway:["$data*",function(d){return d.Gateway}],PreferMaster:["$data*","$mode",function(d,mode){return"AccessPoint"!=mode||d.PreferMaster}],SSID:["$data*",function(d){return d.SSID}],Security:{"->":!0,$security:["$parent",function(p){return p.$data?p.$data.Security:void 0}],ModeEnabled:["$security*",function(s){return getModeEnabled(s.ModeEnabled)}],KeyPassphrase:["$security*",function(s){return s.EncryptionKey}],EncryptionType:["$security*",function(s){return s.EncryptionType}]}}},Network:{Interface:{"->":!0,$data:["$root",function(r){return r.$data}],Bridge:["$data",function(d){return getMembers(d)}]}}}});return pattern.build({$data:data})}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),paths={radio:"Device.WiFi.Radio.",profile:"Device.WiFi.SuperMeshProfile.",ifaces:"Device.Network.Interface.",stats:"Device.Statistics.WiFi.Radio.",mode:"Device.DeviceInfo.DeviceMode"};module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit};var components={};components.radio=T({"->":["?","$data","$attrs","$superMesh","Security","Interfaces"],$data:":external",$deviceMode:":external",$attrs:":external",$radio:":external",$band:":external",$input:["$radio*","$band",function(r,b){return getRadio(r,b)}],$superMesh:["$data*","$input*",function(d,i){return getSuperMesh(d,i)}],"?":["$input",function(i){return!!i}],__id:["$input*",function(i){return i.Inx}],Band:["$band*",function(b){return b}],Enable:["$superMesh*",function(s){return s.Enable||!1}],ClientEnable:["$input*",function(i){return _.size(funcs.newConfig.normalize(i.EndPoint))>0}],Interface:["$superMesh*",function(s){return s.Interface}],Domain:["$superMesh","$attrs",function(s,a){return _.has(s,"Domain")?s.Domain:a?a.Domain["default"]:""}],Election:["$superMesh","$deviceMode","$attrs",function(s,mode,a){return"AccessPoint"!=mode||(_.has(s,"Election")?s.Election:!!a&&a.Election["default"])}],IPv6:["$superMesh","$attrs",function(s,a){return _.has(s,"IPv6")?s.IPv6:!!a&&a.IPv6["default"]}],Gateway:["$superMesh","$deviceMode",function(s,dm){return _.has(s,"IsGateway")?s.IsGateway:"AccessPoint"!=dm}],PreferMaster:["$superMesh","$attrs",function(s,a){return _.has(s,"PreferMaster")?s.PreferMaster:!!a&&a.PreferMaster["default"]}],Router:["$deviceMode",function(mode){return"AccessPoint"!=mode}],SSID:["$superMesh","$attrs",function(s,a){return _.has(s,"SSID")?s.SSID:a?a.SSID["default"]:""}],Inx:["$superMesh",function(s){return getInx(s.Profile)}],PointInx:["$superMesh",function(s){return s.inx}],Radio:["$superMesh",function(s){return s.RadioInx}],InitRadio:["$superMesh",function(s){return s.RadioInx}],ModeAvailable:["$radio*","$attrs",function(r,a){return getModeAvailable(r,a)}],Security:{"->":!0,$attrs:["$parent",function(p){return p.$attrs}],$input:["$parent",function(p){return p.$input}],$superMesh:["$parent",function(p){return p.$superMesh}],ModeEnabled:["$superMesh","$attrs",function(s,a){return s.Security?getModeEnabled(s.Security.ModeEnabled):a?getModeEnabled(a.Security.ModeEnabled["default"]):""}],EncryptionKey:["$superMesh","$input",function(s,i){return s.Security?s.Security.KeyPassphrase:i?funcs.fetchBranch(i,"AccessPoint.1.WPS.PIN"):""}],EncryptionType:["$superMesh","$attrs",function(s,a){return s.Security?"TKIPAES"==s.Security.EncryptionType?"TKIP+AES":s.Security.EncryptionType:a?a.Security.EncryptionType:""}]},RouterMAC:["$data","$superMesh",function(d,s){return getRouretMAC(d,s)}],StatisticAP:["$data","$superMesh","RouterMAC",function(d,s,rmac){return components.stats.build({$data:d,$superMesh:s,$routerMAC:rmac,$type:"ap"})}],StatisticNet:["$data","$superMesh","RouterMAC",function(d,s,rmac){return components.stats.build({$data:d,$superMesh:s,$routerMAC:rmac,$type:"net"})}],StatisticClients:["$data","$superMesh","RouterMAC",function(d,s,rmac){return components.stats.build({$data:d,$superMesh:s,$routerMAC:rmac,$type:"client"})}],StatisticNeighbours:["$data","$superMesh","RouterMAC",function(d,s,rmac){return components.neighbours.build({$data:d,$superMesh:s,$routerMAC:rmac})}],StatisticList:["$attrs","$deviceMode",function(a,mode){return getStatList(a,mode)}],StatisticView:["StatisticList",function(sl){return sl[0].value}]}),components.stats=T({"->":!0,$data:":external",$superMesh:":external",$routerMAC:":external",$type:":external","{$stats}":["$data","$superMesh","$type",function(d,s,t){return getStats(d,s,t)}],Domain:["$stats*",function(s){return _.isEmpty(s.Domain)?"none":s.Domain}],Name:["$stats*",function(s){return s.Name}],Location:["$stats*",function(s){return s.Location}],ModelName:["$stats*",function(s){return s.ModelName}],ImageVersion:["$stats*",function(s){return s.ImageVersion}],MeshRole:["$stats*",function(s){return s.MeshRole}],IPv4Address:["$stats*",function(s){return s.IPv4Address}],IPv6Address:["$stats*",function(s){return s.IPv6Address}],MAC:["$stats*",function(s){return s.MacAddress?s.MacAddress.toUpperCase():void 0}],ClientMAC:["$stats*",function(s){return s.ClientMacAddress?s.ClientMacAddress.toUpperCase():void 0}],LastImageVersion:["$stats*",function(s){return s.LastImageVersion}],Uptime:["$stats*",function(s){return s.Uptime}],Hops:["$stats*","$routerMAC","$type",function(s,rmac,type){return"net"==type&&s.MacAddress&&rmac.toUpperCase()==s.MacAddress.toUpperCase()?void 0:s.Hops}],UplinkMAC:["$stats*",function(s){return s.UplinkMAC?s.UplinkMAC.toUpperCase():void 0}],SignalStrength:["$stats*",function(s){return s.SignalStrength?s.SignalStrength+"%":void 0}],UplinkType:["$stats*",function(s){return getUplinkType(s.UplinkType)}],Error:["$stats*",function(s){return getError(s.Error)}],ApMAC:["$stats*",function(s){return s.ApMacAddress?s.ApMacAddress.toUpperCase():void 0}],RX:["$stats*",function(s){return s.RxSS}],TX:["$stats*",function(s){return s.TxSS}],Band:["$stats*",function(s){return getList(s.BandWidth)}],Ifname:["$stats*",function(s){return s.Ifname}],RSSI:["$stats*",function(s){return s.RSSI}],SNR:["$stats*",function(s){return s.SNR}],WlanMode:["$stats*",function(s){return s.WlanMode?"802.11 "+getList(s.WlanMode):void 0}],State:["$stats*",function(s){return getState(s.State)}]}),components.neighbours=T({"->":!0,$data:":external",$superMesh:":external","{$stats, $inx}":["$data","$superMesh",function(d,s){return getStats(d,s,"neighbour")}],"{$neighbours, $inst}":["$stats*",function(s){return funcs.newConfig.normalize(s.ItsNeighbours)}],":":["$inst*","$inx*",function(n,i){return i+n}],MAC:["$stats*","$neighbours*",function(s,n){return s.MacAddress.toUpperCase()}],NeighbourMAC:["$neighbours*",function(n){return n.MacAddress.toUpperCase()}],ApLocalSpeed:["$neighbours*",function(n){return n.ApLocalSpeedMbps}],ApPathSpeed:["$neighbours*",function(n){return n.ApPathSpeedMbps}],NbrPathSpeed:["$neighbours*",function(n){return n.NbrPathSpeedMbps}],LastUpdateTime:["$neighbours*",function(n){return n.LastUpdateTime}],Hops:["$neighbours*",function(n){return n.Hops}],Channel:["$neighbours*",function(n){return n.Channel}],MeshRole:["$neighbours*",function(n){return n.MeshRole}],NeighbourType:["$neighbours*",function(n){return getNeighbourType(n.NeighbourType)}],RSSI:["$neighbours*",function(n){return n.RSSI}],SNR:["$neighbours*",function(n){return n.SNR}]})},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(351)}},function(module,exports,__webpack_require__){"use strict";!function(){function dsysinitToNative(){function settings(data){var pattern=T({"->":!0,$data:":external",$yd:["$data",function(d){return getDNS(d)}],enabled:["$yd",function(yd){return yd.Enable||!1}],"default":["$yd",function(yd){return getMode(yd.DefaultMode)}],__id:["$yd",function(yd){return yd.id}]});return pattern.build({$data:data})}function rules(data){var pattern=T({"->":["$data","$yd","rules","clients","settings"],$data:":external",$yd:["$data",function(d){return getDNS(d)}],__id:["$yd",function(yd){return yd.id}],rules:{"->":!0,$yd:["$parent",function(p){return p.$yd}],"{$rule, $id}":["$yd",function(yd){return funcs.newConfig.normalize(yd.Device)}],host:["$rule*",function(r){return r.Name}],mac:["$rule*",function(r){return r.MAC}],mode:["$rule*",function(r){return getMode(r.Mode)}],__id:["$id*",function(id){return id}]},clients:{"->":!0,"{$clients}":["$parent",function(p){return getClients(p.$data)}],flags:["$clients*",function(c){return c.Flags}],hostname:["$clients*",function(c){return c.Hostname}],ip:["$clients*",function(c){return c.IPAddress}],mac:["$clients*",function(c){return c.MACAddress.toUpperCase()}],port:["$clients*",function(c){return c.Port}]},settings:{"->":!0,$yd:["$parent",function(p){return p.$yd}],enabled:["$yd",function(yd){return yd.Enable||!1}],"default":["$yd",function(yd){return getMode(yd.DefaultMode)}],__id:["$yd",function(yd){return yd.id}]}});return pattern.build({$data:data})}function getDNS(data){var dns=funcs.fetchBranch(data,paths.dns),key=_.findKey(dns,{Interface:paths.bridge});if(!key)return{};var result=dns[key].YandexDNS;return result.id=key,result}function getClients(data){function filterWANClients(clients,data){return _.filter(clients,function(client){if(""==client.Port||""==client.Interface)return!1;if(-1!=client.Interface.indexOf("Bridge"))return!0;var iface=funcs.fetchBranch(data,client.Interface);return!!iface&&iface.Bridged})}function checkLinkLocal(ip){if(funcs.is.ipv4(ip))return!0;var addr=funcs.ipv6.address.full(ip),splitAddr=addr.split(":");return"fe80"!=splitAddr[0].toLowerCase()}var clients=funcs.fetchBranch(data,paths.clients);return clients=funcs.newConfig.normalize(clients),clients=filterWANClients(clients,data),_.filter(clients,function(e){return("reachable"==e.Flags||"delay"==e.Flags||"stale"==e.Flags)&&""!=e.IPAddress&&checkLinkLocal(e.IPAddress)})}function getMode(mode){switch(mode){case"Family":return"child";case"Safe":return"safe";case"Basic":return"off"}}return{settings:settings,rules:rules}}function nativeToDsysinit(){function settings(data){var pattern=T({"->":["$data","YandexDNS"],$data:":external",":":["$data",function(d){return d.__id}],YandexDNS:{"->":!0,$yd:["$parent",function(p){return p.$data}],Enable:["$yd",function(yd){return yd.enabled}],DefaultMode:["$yd",function(yd){return getMode(yd["default"])}]}});return pattern.build({$data:data})}function rules(data){var pattern=T({"->":["$data","Device"],$data:":external",Device:{Network:{Server:{DNS:{"->":!0,":":["$root",function(r){return r.$data.__id}],YandexDNS:{Device:{"->":!0,"{$rules, $key}":["$root",function(r){return r.$data.rules}],":":["$rules*","$key*",function(r,k){return r.__id?r.__id:"+"+k}],Name:["$rules*",function(r){return r.host}],MAC:["$rules*",function(r){return r.mac}],Mode:["$rules*",function(r){return getMode(r.mode)}]}}}}}}});return pattern.build({$data:data})}function getMode(mode){switch(mode){case"child":return"Family";case"safe":return"Safe";case"off":return"Basic"}}return{settings:settings,rules:rules}}function attrsToNative(){function settings(data){function getMode(mode){switch(mode){case"Basic":return"off";case"Safe":return"safe";case"Family":return"child"}}function getLabel(value){switch(value){case"Basic":return"yadns_protection_off_mode";case"Safe":return"yadns_safe_mode";case"Family":return"yadns_child_mode"}}var pattern=T({"->":!0,$data:":external","{$yd}":["$data",function(d){return funcs.fetchBranch(d,paths.dns+"#template.YandexDNS.DefaultMode.enum.")}],value:["$yd*",function(yd){return getMode(yd)}],label:["$yd*",function(yd){return getLabel(yd)}]});return pattern.build({$data:data})}return{settings:settings}}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),paths={dns:"Device.Network.Server.DNS.",bridge:"Device.Network.Interface.Bridge.1.",clients:"Device.Statistics.Neighbours."};module.exports={dsysinitToNative:dsysinitToNative(),nativeToDsysinit:nativeToDsysinit(),attrsToNative:attrsToNative()}}()},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}var _defineProperty2=__webpack_require__(169),_defineProperty3=_interopRequireDefault(_defineProperty2),_keys=__webpack_require__(78),_keys2=_interopRequireDefault(_keys),_promise=__webpack_require__(7),_promise2=_interopRequireDefault(_promise),_=__webpack_require__(4),cpe=__webpack_require__(3),funcs=__webpack_require__(5),T=__webpack_require__(122).T;module.exports=function(){function toCpe(config){function getPorts(vlanPorts){var result={};for(var key in vlanPorts)vlanPorts[key].isDel||(result[key]=vlanPorts[key]);return result}var pattern=T({"->":["$data","$config","Device"],$data:":external",$backupData:":external",$config:":external",$bridges:["$config",function(c){return funcs.newConfig.normalize(c.Device.Network.Interface.Bridge)}],$ethernets:["$config",function(c){return funcs.newConfig.normalize(c.Device.Network.Interface.Ethernet)}],$vlans:["$config",function(c){return funcs.deepClone(funcs.newConfig.normalize(c.Device.Switch.Switches[1].Vlan))}],Device:{"->":["Switch","Network"],Switch:{Ports:{"->":["$port","Upstream"],"{$port, $i}":["$root",function(r){return r.$data}],":":["$port*",function(p){return p.inst}],Upstream:["$port*",function(p){return p.is_wan}]},Switches:{"->":["1"],1:{"->":["Vlan"],Vlan:{"->":["$vlan","Ports"],$oldWan:["$root",function(r){return r.$backupData.filter(function(p){return p.is_wan})}],$newWan:["$root",function(r){return r.$data.filter(function(p){return p.is_wan})}],"{$vlan, $i}":["$root","$oldWan","$newWan",function(r,o,n){return _.filter(r.$vlans,function(v,k){if(v.Inst=k,__autoconf.BR2_PACKAGE_ANWEB_REALTEK_MODEM&&-1!==v.VID){var ports=funcs.newConfig.normalize(v.Ports);if(_.find(ports,function(p){return o.length&&o.find(function(e){return e.portLink==p.Link})||n.length&&n.find(function(e){return e.portLink==p.Link})}))return!1}if(!__autoconf.BR2_PACKAGE_ANWEB_REALTEK_MODEM){var ports=funcs.newConfig.normalize(v.Ports);for(var key in ports){var port=ports[key];1==k||port.Tag||!o.length||!o.find(function(e){return e.portLink==port.Link})||n.length&&n.find(function(e){return e.portLink==port.Link})||(port.isDel=!0),1==k&&!port.Tag&&n.length&&n.find(function(e){return e.portLink==port.Link})&&(port.isDel=!0)}var newWans=o.filter(function(p){return!n.find(function(e){return e.portLink==p.portLink})});if(1==k)for(var i in newWans){var portKey="new_inst_"+i;ports[portKey]={Link:newWans[i].portLink,Tag:!1}}v.Ports=ports}return!0})}],":":["$vlan*",function(v){return v.Inst}],CreateIface:["$vlan",function(v){return v.CreateIface}],Ports:{"->":!0,"{$ports, $i}":["$parent",function(p){return getPorts(p.$vlan.Ports)}],":":["$i*",function(i){return i}],Link:["$ports*",function(p){return p.Link}],Tag:["$ports*",function(p){return p.Tag}]}}}}},Network:{"->":!0,Interface:{"->":["Bridge","Ethernet"],Bridge:{"->":["$bridge","Members"],"{$bridge, $i}":["$root",function(r){return __autoconf.BR2_PACKAGE_ANWEB_REALTEK_MODEM?r.$bridges:void 0}],":":["$i*",function(i){return i}],Members:{"->":!0,"{$member, $i}":["$parent","$root",function(p,r){if(p.$bridge){var bridge_members=funcs.newConfig.normalize(p.$bridge.Members),members=_.pick(bridge_members,function(m){var port=_.find(r.$data,function(p){return p.interfaceLink===m.Link});return!port||!port.is_wan});if(1===Number(p.$i)){var new_members=_.filter(r.$data,function(p){return p.is_wan?void 0:!_.find(r.$bridges,function(b){var members=funcs.newConfig.normalize(b.Members);return!!_.find(members,function(m){return m.Link===p.interfaceLink})})});_.each(new_members,function(m){var maxKey=Number(_.max(_.keys(bridge_members)));members[maxKey+1]={Link:m.interfaceLink}})}return members}}],":":["$i*",function(i){return i}],Link:["$member*",function(m){return m.Link}]}}}}}});return pattern.build({$data:etherwan.data,$backupData:__backupData,$config:config})}function pull(){return cpe.GetParameterValues(_.values(paths)).then(function(resp){var configTree=funcs.buildTree(resp.result.ParameterList);return etherwan.data=getPorts(configTree),__backupData=funcs.deepClone(etherwan.data),_promise2["default"].resolve})}function getPorts(config){function getVlanLink(portPath){var vlanLink=[],vlans=funcs.newConfig.normalize(config.Device.Switch.Switches[1].Vlan);return _.each(vlans,function(v,k){var vlanPorts=funcs.newConfig.normalize(v.Ports);return _.find(vlanPorts,function(p){p.Link===portPath&&vlanLink.push({link:paths["switch"]+"Switches.1.Vlan."+k+".",name:v.Name,tag:p.Tag})})}),vlanLink}function getInterfaceLink(vlanPath){var interfaceLink=[],vlanIfacePaths=_.pluck(vlanPath,"link"),interfaces=funcs.newConfig.normalize(config.Device.Network.Interface.Ethernet);return _.each(interfaces,function(i,k){_.contains(vlanIfacePaths,i.LowerLayer)&&interfaceLink.push(paths["interface"]+"Ethernet."+k+".")}),interfaceLink}function getVlanIfaceLink(vlanPath){var interfaceLink=void 0,curVlan=_.find(vlanPath,function(v){return!v.tag});if(curVlan){var interfaces=funcs.newConfig.normalize(config.Device.Network.Interface.Ethernet);_.each(interfaces,function(i,k){i.LowerLayer==curVlan.link&&(interfaceLink=paths["interface"]+"Ethernet."+k+".")})}return interfaceLink}function getHasConnection(portLink,interfaceLink){var result=[];return __autoconf.BR2_PACKAGE_ANWEB_REALTEK_MODEM&&funcs.fetchBranch(config,portLink).Upstream&&_.each(interfaceLink,function(elem){var iface=funcs.fetchBranch(config,elem);if(iface.Bridged){var bridgeIface=funcs.fetchBranch(config,iface.BridgeLink),memberIface=_.find(bridgeIface.Members,{Link:elem});memberIface&&result.push(memberIface.Name)}}),_.each(config.Device.Network.Connection,function(type){_.each(funcs.newConfig.normalize(type),function(elem){(_.contains(interfaceLink,elem.Interface)||_.contains(interfaceLink,elem.BaseInterface))&&result.push(elem.Name)})}),result}function getTypePort(port){if(_.contains(["WAN"],port.Alias)){if(autoconf.BR2_PACKAGE_ANWEB_FIBER)return"fiber";if(autoconf.BR2_PACKAGE_ANWEB_GPON)return"pon"}return"ethernet"}function getNamePort(port){return _.contains(["WAN"],port.Alias)&&autoconf.BR2_PACKAGE_ANWEB_FIBER?"SFP":port.Alias}var res=[],ports=funcs.newConfig.normalize(config.Device.Switch.Ports);return _.each(config.Device.Switch.Ports.order,function(o){var port=_.find(ports,function(v,k){return k===o});if(port){var portLink=paths["switch"]+"Ports."+o+".",vlanLink=getVlanLink(portLink),interfaceLink=getInterfaceLink(vlanLink),vlanIfaceLink=getVlanIfaceLink(vlanLink);res.push({inst:o,name:getNamePort(port),is_wan:port.Upstream,alias:port.Alias,type:getTypePort(port),is_available:!0,portLink:portLink,interfaceLink:vlanIfaceLink,vlanLink:vlanLink,hasConnection:getHasConnection(portLink,interfaceLink)})}}),res}function push(){function getVlanIface(config,vlanPath){var ethIfaces=funcs.fetchBranch(config,paths["interface"]+"Ethernet.");for(var key in ethIfaces)if(ethIfaces[key].LowerLayer==vlanPath)return ethIfaces[key]}return _promise2["default"].all([cpe.GetParameterValues(_.values(paths)),cpe.GetParameterAttributes(_.values(paths))]).then(function(response){var config=funcs.buildTree(response[0].result.ParameterList),attrs=funcs.buildTreeAttributes(response[1].result.ParameterList),newConfig=toCpe(config);if(_.each(etherwan.data,function(port){if(!port.is_wan){var vlans=_.filter(port.vlanLink,function(vl){return!vl.tag});if(vlans.length>1)for(var i=1;i<vlans.length;++i)funcs.cutBranch(newConfig,vlans[i].link)}}),!__autoconf.BR2_PACKAGE_ANWEB_REALTEK_MODEM&&newConfig.Device.Switch&&newConfig.Device.Switch.Switches[1]&&newConfig.Device.Switch.Switches[1].Vlan){var vlans=funcs.deepClone(newConfig.Device.Switch.Switches[1].Vlan);for(var key in vlans){var vlan=vlans[key],vlanPath="Device.Switch.Switches.1.Vlan."+key+".";if(0==_keys2["default"](vlan.Ports).length)if(vlan.CreateIface){var vlanIface=getVlanIface(config,vlanPath);vlanIface&&!vlanIface.Bridged&&funcs.cutBranch(newConfig,vlanPath)}else funcs.cutBranch(newConfig,vlanPath)}}var diff=funcs.newConfig.makeDiff(config,newConfig,attrs);!__autoconf.BR2_PACKAGE_ANWEB_REALTEK_MODEM&&diff.Device.Network&&diff.Device.Network.Interface&&funcs.cutBranch(diff,paths["interface"]);var tdiff=[];if(diff.Device.Switch&&diff.Device.Switch.Ports&&(_.each(diff.Device.Switch.Ports,function(v,k){v.Upstream||tdiff.push({Device:{Switch:{Ports:_defineProperty3["default"]({},k,{Upstream:v.Upstream})}}})}),_.each(diff.Device.Switch.Ports,function(v,k){v.Upstream&&tdiff.push({Device:{Switch:{Ports:_defineProperty3["default"]({},k,{Upstream:v.Upstream})}}})})),diff.Device.Switch&&diff.Device.Switch.Switches&&diff.Device.Switch.Switches[1]){var ethIfaces=funcs.fetchBranch(config,paths["interface"]+"Ethernet."),brIfaces=funcs.fetchBranch(config,paths["interface"]+"Bridge.");_.each(diff.Device.Switch.Switches[1].Vlan,function(v,k){if(Number(k)<0){v.CreateIface=!1;var ifaceKey=_.findKey(ethIfaces,{LowerLayer:paths["switch"]+"Switches.1.Vlan."+k.slice(1)+"."});if(ifaceKey){var ethPath=paths["interface"]+"Ethernet."+ifaceKey+".",brKey=null,memberKey=null;_.each(brIfaces,function(br,key){var member=_.findKey(br.Members,{Link:ethPath});member&&(memberKey=member,brKey=key)}),brKey&&memberKey&&diff.Device.Network&&diff.Device.Network.Interface&&diff.Device.Network.Interface.Bridge&&(diff.Device.Network.Interface.Bridge[brKey]&&diff.Device.Network.Interface.Bridge[brKey].Members["-"+memberKey]||tdiff.push({Device:{Network:{Interface:{Bridge:_defineProperty3["default"]({},brKey,{Members:_defineProperty3["default"]({},"-"+memberKey,{Link:""})})}}}}))}}})}return diff.Device.Switch&&diff.Device.Switch.Switches&&diff.Device.Switch.Switches[1].Vlan&&tdiff.push({Device:{Switch:{Switches:{1:{Vlan:diff.Device.Switch.Switches[1].Vlan}}}}}),diff.Device.Network&&diff.Device.Network.Interface&&(diff.Device.Network.Interface.Ethernet&&tdiff.push({Device:{Network:{Interface:{Ethernet:diff.Device.Network.Interface.Ethernet}}}}),diff.Device.Network.Interface.Bridge&&_.each(diff.Device.Network.Interface.Bridge,function(v,k){_.each(v.Members,function(_v,_k){Number(_k)<0&&tdiff.push({Device:{Network:{Interface:{Bridge:_defineProperty3["default"]({},k,{Members:_defineProperty3["default"]({},_k,{Link:_v.Link})})}}}})})})),diff.Device.Network&&diff.Device.Network.Interface&&diff.Device.Network.Interface.Bridge&&_.each(diff.Device.Network.Interface.Bridge,function(v,k){_.each(v.Members,function(_v,_k){Number(_k)>0&&tdiff.push({Device:{Network:{Interface:{Bridge:_defineProperty3["default"]({},k,{Members:_defineProperty3["default"]({},_k,{Link:_v.Link})})}}}})})}),cpe.ApplyDifference(tdiff).then(function(){return _promise2["default"].resolve()},function(){return _promise2["default"].reject()})})}function clean(){etherwan.data=null,__backupData=null}function getPortsMap(){return _.map(etherwan.data,function(d,k){return k})}function wasModified(){return __backupData&&!funcs.deepEqual(etherwan.data,__backupData)}function isSupportMultiwan(){return __autoconf.BR2_PACKAGE_ANWEB_SUPPORT_MULTI_WAN}var paths={"switch":"Device.Switch.","interface":"Device.Network.Interface.",connection:"Device.Network.Connection."},__backupData=null,__autoconf="undefined"!=typeof autoconf?autoconf:{},etherwan={data:null,pull:pull,push:push,clean:clean,wasModified:wasModified,getPortsMap:getPortsMap,isSupportMultiwan:isSupportMultiwan};return etherwan}()},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}var _promise=__webpack_require__(7),_promise2=_interopRequireDefault(_promise),_=__webpack_require__(4),funcs=__webpack_require__(5),cpe=__webpack_require__(3),cpex=__webpack_require__(119);module.exports=function(){function pullEnabled(){var params=[constants.SERVER_DNS];return cpe.GetParameterValues(params).then(function(answer){var params=answer.result.ParameterList,paramsTree=funcs.buildTree(params),dns=funcs.newConfig.normalize(funcs.fetchBranch(paramsTree,constants.SERVER_DNS));return _.size(dns)?(dns=_.toArray(dns),dns=_.first(dns),_promise2["default"].resolve(dns&&dns.SafeDNS&&dns.SafeDNS.Enable)):_promise2["default"].resolve(!1)})["catch"](function(){return _promise2["default"].reject()})}function yaDNSEnabled(){var params=[constants.YANDEX_ROOT_PATH+"Enable"];return cpe.GetParameterValues(params).then(function(answer){var params=answer.result.ParameterList,paramsTree=funcs.buildTree(params),data=funcs.fetchBranch(paramsTree,constants.YANDEX_ROOT_PATH);return _promise2["default"].resolve(data&&data.Enable)})["catch"](function(){return _promise2["default"].reject()})}function pull(){var params=constants.INIT_PARAMS.map(function(s){return constants.SAFEDNS_ROOT_PATH+s});return params.push(constants.CLIENTS),
cpe.GetParameterValues(params).then(function(answer){var params=answer.result.ParameterList,paramsTree=funcs.buildTree(params);clients=convertClients(paramsTree),workData=funcs.fetchBranch(paramsTree,constants.SAFEDNS_ROOT_PATH),initData=funcs.deepClone(workData)})}function pushEdit(noSaveParams){var changes=funcs.getChangesExpanded(initData,workData);return _.size(changes)?cpex.set(buildPath("Root").replace(/\.$/,""),"",changes).then(function(){initData=funcs.deepClone(workData)}):_promise2["default"].resolve()}function pushAdd(path,obj){return cpex.add(path).then(function(id){return cpex.set(path.replace(/\.$/,""),"."+id,obj).then(function(){return _promise2["default"].resolve(id)},function(answer){return pushRemove(path,[id])["finally"](function(){return _promise2["default"].reject(answer)})})})}function pushRemove(path,ids){return cpex.remove(ids,path).then(function(){initData=funcs.deepClone(workData)})}function getParams(){var params={};params.enabled=workData.Enable,params.default_provider=getID(getParam("Root","DefaultProvider"))||"",params.default_account=getID(getParam("Provider","DefaultAccount"))||"",params.default_profile=getID(getParam("Account","DefaultProfile"))||"";var account=_.first(getAccountList({__pid:params.default_provider}));return account&&(params.__email=account.email,params.__password=account.password,params.__isAuth=account.isAuth,params.__plan=account.plan),params}function setParamsAndPush(params){if(params.__email&&params.__password&&params.enabled){var account=_.first(getAccountList({__pid:params.default_provider}));return setAccount({email:params.__email||"",password:params.__password||""},account?account.__id:null,{__pid:params.default_provider}).then(function(){return params.default_account=1,setParams(params),pushEdit()})}return setParams(params),pushEdit()}function setParams(params){function toCpe(data){return{Enable:data.enabled,DefaultProvider:data.default_provider,DefaultAccount:data.default_account,DefaultProfile:data.default_profile}}var params=toCpe(params)||{},keys={__pid:"default",__aid:"default",__pfid:"default"},root=link("Root"),initRoot=link("Root",null,!0);if(_.isUndefined(params.Enable)||(root.Enable=!!params.Enable),!_.isUndefined(params.DefaultProvider)){var oldPID=getID(getParam("Root","DefaultProvider"));oldPID&&root.Provider[oldPID]&&initRoot.Provider[oldPID]&&(root.Provider[oldPID]=funcs.deepClone(initRoot.Provider[oldPID])),keys.__pid=parseInt(params.DefaultProvider)||-1,root.DefaultProvider=keys.__pid>-1?buildPath("Provider",keys):""}if(!_.isUndefined(params.DefaultAccount)){keys.__aid=parseInt(params.DefaultAccount)||-1;var provider=link("Provider",keys);if("default"==keys.__pid){var initProvider=link("Provider",keys,!0),oldAID=getID(getParam("Provider","DefaultAccount"));oldAID&&provider.Account[oldAID]&&initProvider.Account[oldAID]&&(provider.Account[oldAID]=funcs.deepClone(initProvider.Account[oldAID]))}provider&&(provider.DefaultAccount=keys.__aid>-1?buildPath("Account",keys):"")}if(!_.isUndefined(params.DefaultProfile)){keys.__pfid=parseInt(params.DefaultProfile)||-1;var account=link("Account",keys);account&&(account.DefaultProfile=keys.__pfid>-1?buildPath("Profile",keys):"")}}function getProviderList(){return _.chain(link("Provider")).omit("max_instance").map(convertProvider).value()}function convertProvider(provider,id){return{__id:id,name:provider.Name,available:provider.Available,cabinet:provider.Cabinet}}function getAccount(id,keys){if(id){var keys={__pid:keys&&keys.__pid,__aid:null},accounts=link("Account",keys);return accounts&&accounts[id]&&convertAccount(accounts[id],id,keys.__pid)}}function setAccount(obj,id,keys,dontClearChanges){function toCpe(data){var out={};return data&&(out=funcs.deepClone({Email:data.email,Password:data.password}),data.default_profile&&(out.DefaultProfile=data.default_profile)),out}var _obj=toCpe(obj)||{},keys={__pid:keys&&keys.__pid},accounts=link("Account",keys);if(!id)return keys.__aid=null,new _promise2["default"](function(resolve){pushAdd(buildPath("Account",keys).slice(0,-1),_.pick(_obj,["Email","Password"])).then(function(id){accounts[id]=_obj,initData=funcs.deepClone(workData),resolve()})});var account=getAccount(id,keys);if(account){var mask=["Email","Password","DefaultProfile"];return _obj.DefaultProfile&&(keys.__aid=id,keys.__pfid=_obj.DefaultProfile,_obj.DefaultProfile=buildPath("Profile",keys)),_.extend(accounts[id],_.pick(_obj,mask)),pushEdit()}}function removeAccount(ids,keys){var keys={__pid:keys&&keys.__pid,__aid:null},accounts=link("Account",keys);return accounts&&_.each(ids,function(id){return delete accounts[id]}),pushRemove(buildPath("Account",keys).slice(0,-1),ids)}function syncAccount(){workData=funcs.deepClone(initData);var __pid=getID(workData.DefaultProvider);return workData.Provider[__pid].Account[1].Sync=!0,pushEdit()}function getAccountList(keys){var pid=keys&&parseInt(keys.__pid)||"default";return _.chain(link("Account",{__pid:pid})).omit("max_instance").map(function(item,id){return convertAccount(item,id,pid)}).value()}function convertAccount(account,id,pid){var initDefAccountID=getID(getParam("Provider","DefaultAccount",null,!0));return{__id:id,__pid:pid,default_profile:getID(account.DefaultProfile),email:account.Email,password:account.Password,plan:account.Plan,isAuth:"Authorized"==account.Status,isNotRemove:id==initDefAccountID}}function getProfileList(keys){var keys={__pid:keys&&keys.__pid,__aid:keys&&keys.__aid,__pfid:null};return _.chain(link("Profile",keys)).omit("max_instance").map(function(item,id){return convertProfile(item,id,keys.__aid,keys.__pid)}).value()}function convertProfile(profile,id,aid,pid){return{__id:id,__aid:aid,__pid:pid,name:profile.Name}}function getMacList(){var keys=getMacKeys();return _.chain(link("Mac",keys)).omit("max_instance").map(function(item,id){return convertMac(item,id,keys.__aid,keys.__pid)}).value()}function getMac(id){var keys=getMacKeys(),mac=link("Mac",keys);return mac&&mac[id]&&convertMac(mac[id],id,keys.__aid,keys.__pid)}function setMac(obj,id){function toCpe(data,keys){return{MAC:data.address,Name:data.hostname,Profile:buildPath("Profile",keys)}}var keys=getMacKeys(obj),obj=toCpe(obj,keys),mac=link("Mac",keys);return id?(_.extend(mac[id],obj),pushEdit()):pushAdd(buildPath("Mac",keys),obj).then(function(id){mac[id]=obj,initData=funcs.deepClone(workData)})}function removeMac(ids){var keys=getMacKeys(),mac=link("Mac",keys);return mac&&_.each(ids,function(id){return delete mac[id]}),pushRemove(buildPath("Mac",keys),ids)}function convertMac(mac,id,aid,pid){return mac&&id?{__id:id,__aid:aid,__pid:pid,__pfid:getID(mac.Profile),address:mac.MAC,hostname:mac.Name}:null}function getMacKeys(mac){return{__pid:getID(getParam("Root","DefaultProvider")),__aid:getID(getParam("Provider","DefaultAccount")),__pfid:mac&&mac.__pfid||null}}function getClientsList(){return funcs.deepClone(clients)}function convertClients(data){function filterWANClients(_clients,data){return _.filter(_clients,function(client){if(""==client.Port||""==client.Interface)return!1;if(-1!=client.Interface.indexOf("Bridge"))return!0;var iface=funcs.fetchBranch(data,client.Interface);return!!iface&&iface.Bridged})}function checkLinkLocal(ip){if(funcs.is.ipv4(ip))return!0;var addr=funcs.ipv6.address.full(ip),splitAddr=addr.split(":");return"fe80"!=splitAddr[0].toLowerCase()}function makeClient(client){return{flags:client.Flags,iface:client.Interface,ip:client.IPAddress,mac:client.MACAddress,port:client.Port,hostname:client.Hostname}}var _clients=funcs.fetchBranch(data,constants.CLIENTS);return _clients=funcs.newConfig.normalize(_clients),_clients=filterWANClients(_clients,data),_clients=_.filter(_clients,function(e){return("reachable"==e.Flags||"delay"==e.Flags||"stale"==e.Flags)&&""!=e.IPAddress&&checkLinkLocal(e.IPAddress)}),_.map(_clients,makeClient)}function buildPath(target,keys){function getTargetID(id,defPath){return"default"==id?getID(defPath):id||""}var keys=keys||{};switch(target){case"Provider":return buildPath("Root")+constants.PROVIDER_PATH+getTargetID(keys.__pid,getParam("Root","DefaultProvider"))+".";case"Account":return keys.__pid||(keys.__pid="default"),buildPath("Provider",keys)+constants.ACCOUNT_PATH+getTargetID(keys.__aid,getParam("Provider","DefaultAccount",keys))+".";case"Profile":return keys.__aid||(keys.__aid="default"),buildPath("Account",keys)+constants.PROFILE_PATH+getTargetID(keys.__pfid,getParam("Account","DefaultProfile",keys))+".";case"Mac":return buildPath("Account",keys)+constants.MAC_PATH;default:return constants.SAFEDNS_ROOT_PATH}}function getParam(parent,param,keys,isInitData){var keys=keys||{};keys={__pid:keys.__pid||"default",__aid:keys.__aid||"default",__pfid:keys.__pfid||"default"};var _p=link(parent,keys,isInitData);return _p&&_p[param]}function link(target,keys,isInitData){function _link(list,defPath,id){var _id="default"==id?getID(defPath):id;return id?list&&list[_id]:list}var keys=keys||{};switch(target){case"Provider":var root=link("Root",null,isInitData);return root&&_link(root.Provider,root.DefaultProvider,keys.__pid);case"Account":keys.__pid||(keys.__pid="default");var provider=link("Provider",keys,isInitData);return provider&&_link(provider.Account,provider.DefaultAccount,keys.__aid);case"Profile":keys.__aid||(keys.__aid="default");var account=link("Account",keys,isInitData);return account&&_link(account.Profile,account.DefaultProfile,keys.__pfid);case"Mac":keys.__aid||(keys.__aid="default");var account=link("Account",keys,isInitData);return account&&_link(account.Device,null,null);default:return isInitData?initData:workData}}function getID(path){var res=null;return path&&_.isString(path)&&(res=path.match(/\.([0-9]+)[\.*]$/)),res&&res[1]||""}function fix(){return cpex.set(constants.SAFEDNS_ROOT_PATH.replace(/\.$/,""),"",{DefaultProvider:constants.SAFEDNS_ROOT_PATH+constants.PROVIDER_PATH+"1."})}var constants={CLIENTS:"Device.Statistics.Neighbours.",IFACE:"Device.Network.Interface.",SAFEDNS_ROOT_PATH:"Device.Network.Server.DNS.1.SafeDNS.",YANDEX_ROOT_PATH:"Device.Network.Server.DNS.1.YandexDNS.",PROVIDER_PATH:"Provider.",ACCOUNT_PATH:"Account.",PROFILE_PATH:"Profile.",MAC_PATH:"Device.",INIT_PARAMS:["Enable","DefaultProvider","Provider."],SERVER_DNS:"Device.Network.Server.DNS."},initData=null,workData={},clients=null;return{pull:pull,pullEnabled:pullEnabled,yaDNSEnabled:yaDNSEnabled,getParams:getParams,setParams:setParams,pushParams:setParamsAndPush,getProviderList:getProviderList,getProfileList:getProfileList,getClientsList:getClientsList,account:{getList:getAccountList,get:getAccount,set:setAccount,remove:removeAccount,sync:syncAccount},mac:{getList:getMacList,get:getMac,set:setMac,remove:removeMac},fix:fix}}()},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(356)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getBandInfo(data,band){var bandInfo=_.find(data,{Band:band});if(bandInfo){var index=_.findKey(data,{Band:band});return bandInfo.Inx=index,bandInfo}}var pattern=T({"->":["$data","roaming"],$data:":external",roaming:{"->":!0,$data:["$parent",function(p){return funcs.fetchBranch(p.$data,path)}],$24:["$data",function(d){return getBandInfo(d.Bandwidth,"2.4GHz")}],$5:["$data",function(d){return getBandInfo(d.Bandwidth,"5GHz")}],$multicast:["$data",function(d){return d.Multicast}],__inx24:["$24*",function(b){return b.Inx}],quality_limit:["$24*",function(b){return b.QualityLimit}],kick_quality_limit:["$24*",function(b){return b.KickQualityLimit}],quality_width:["$24*",function(b){return b.QualityWidth}],max_timeout:["$24*",function(b){return b.ScannerLifetime}],__inx5:["$5*",function(b){return b.Inx}],quality_limit_5g:["$5*",function(b){return b.QualityLimit}],kick_quality_limit_5g:["$5*",function(b){return b.KickQualityLimit}],quality_width_5g:["$5*",function(b){return b.QualityWidth}],max_timeout_5g:["$5*",function(b){return b.ScannerLifetime}],enable:["$data",function(d){return d.Enable}],portno:["$data",function(d){return d.Port}],mc_switch:["$multicast",function(m){return m.Enable}],mc_ttl:["$multicast",function(m){return m.TTL}],mc_groupaddr:["$multicast",function(m){return m.GroupAddress}]}});return pattern.build({$data:data})}function nativeToDsysinit(data){function getBandwidth(data){var result={};return _.has(data,"__inx24")&&(result[data.__inx24]={KickQualityLimit:data.kick_quality_limit,QualityLimit:data.quality_limit,QualityWidth:data.quality_width,ScannerLifetime:data.max_timeout}),_.has(data,"__inx5")&&(result[data.__inx5]={KickQualityLimit:data.kick_quality_limit_5g,QualityLimit:data.quality_limit_5g,QualityWidth:data.quality_width_5g,ScannerLifetime:data.max_timeout_5g}),_.size(result)?result:void 0}var pattern=T({"->":["$data","Device"],$data:":external",Device:{Services:{Roamd:{"->":["$data","Multicast"],$data:["$root",function(r){return r.$data}],Enable:["$data",function(d){return d.enable}],Port:["$data",function(d){return d.portno}],Multicast:{"->":!0,$data:["$parent",function(p){return p.$data}],Enable:["$data",function(d){return d.mc_switch}],TTL:["$data",function(d){return d.mc_ttl}],GroupAddress:["$data",function(d){return d.mc_groupaddr}]},Bandwidth:["$data",function(d){return getBandwidth(d)}]}}}});return pattern.build({$data:data})}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),path="Device.Services.Roamd.";module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(358)}},function(module,exports,__webpack_require__){"use strict";!function(){function dsysinitToNative(data,attrs){function getServers(data){var servers=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.server)),result=[];return _.each(servers,function(elem,key){if("L2TP"==key||"PPTP"==key){if(elem=funcs.newConfig.normalize(elem),!_.size(elem))return void result.push({type:key});var keys=_.keys(elem),serv=elem[keys[0]],ppp=""!=serv.PPP?funcs.fetchBranch(data,serv.PPP):void 0,pppId=""!=serv.PPP?serv.PPP.match(/\.\d+\.$/g,""):void 0;pppId=pppId?Number(pppId[0].replace(/\./g,"")):void 0;var obj={data:serv,type:key,id:keys[0],ppp:ppp,pppId:pppId,link:paths.server+key+"."+keys[0]+"."};result.push(obj)}}),result}function getClients(server){if(!server.data||!_.size(funcs.newConfig.normalize(server.data.ClientIPRange)))return{};var clients=funcs.newConfig.normalize(server.data.ClientIPRange);return clients[1]}function getUsers(server){if(!server.data)return[];var users=funcs.newConfig.normalize(server.data.Users);return _.map(users,function(elem,key){return{__id:key,User:elem.User,Range:makeRange(elem.Range)}})}function getLACInfo(data){if(!data)return{Enabled:!1,Range:makeRange({})};var lac=funcs.newConfig.normalize(data.LAC);return _.size(lac)?(lac=_.map(lac,function(elem,key){return{__id:key,Enabled:!0,Range:makeRange(elem.Range)}}),_.first(lac)):{Enabled:!1,Range:makeRange({})}}function makeRange(range){var result={MinAddress:"",MaxAddress:""};return range=funcs.newConfig.normalize(range),_.size(range)?(range=_.map(range,function(elem,key){return{__id:key,MinAddress:elem.IPstart,MaxAddress:elem.IPend}}),_.first(range)):result}function getGroupId(data,server){if(server.id){var groups=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.groups+"1.VPN.")),id=_.findKey(groups,function(elem,key){return elem.Link==server.link});return id}}function getFWMasq(data,server){if(!server.id)return{WAN:{id:void 0,Enabled:!0},LAN:{id:void 0,Enabled:!1}};var masq=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.fwMasq)),WANid=_.findKey(masq,function(elem){return elem.Source&&elem.Dest&&(/Connection/.test(elem.Dest.Interface)||/Group/.test(elem.Dest.Interface))&&elem.Source.Interface==server.link}),LANid=_.findKey(masq,function(elem){return elem.Source&&elem.Dest&&"Device.Network.Interface.Bridge.1."==elem.Dest.Interface&&elem.Source.Interface==server.link});return{WAN:{id:WANid,Enabled:!_.isEmpty(WANid)},LAN:{id:LANid,Enabled:!_.isEmpty(LANid)}}}function getFWZoneID(data,server){if(server.id){var zones=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.fwZones)),id=_.findKey(zones,function(elem){return _.some(funcs.newConfig.normalize(elem.Interfaces),function(obj){return obj.Path==server.link})});return id}}function getFWPolicy(data,server,zoneId){var result={VPNtoLAN:"",LANtoVPN:"",WANtoVPN:"",VPNtoWAN:"",VPNtoFW:"",VPNtoLANPolicy:void 0,VPNtoWANPolicy:void 0,VPNtoFWPolicy:void 0};if(!server.id||!zoneId)return result;var policy=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.fwPolicy)),vpnZonePath=paths.fwZones+zoneId+".";return _.each(policy,function(elem,key){elem.Dest==vpnZonePath&&(elem.Source==paths.fwZones+"3."&&(result.LANtoVPN=key,result.VPNtoLANPolicy=elem.Policy),elem.Source==paths.fwZones+"2."&&(result.WANtoVPN=key,result.VPNtoWANPolicy=elem.Policy)),elem.Source==vpnZonePath&&(elem.Dest==paths.fwZones+"3."&&(result.VPNtoLAN=key),elem.Dest==paths.fwZones+"2."&&(result.VPNtoWAN=key),elem.Dest==paths.fwZones+"1."&&(result.VPNtoFW=key,result.VPNtoFWPolicy=elem.Policy))}),result}function getPolicyIds(fw){return[fw.VPNtoLAN,fw.LANtoVPN,fw.VPNtoWAN,fw.WANtoVPN,fw.VPNtoFW]}function getAuthType(server){return server&&server.ppp?""==server.ppp.Authentication.CHAP&&""==server.ppp.Authentication.MSCHAP&&""==server.ppp.Authentication.MSCHAPv2&&""==server.ppp.Authentication.PAP?"auto":"handle":"auto"}function getConnList(data,mode){function getConns(conns,types,groups){var wanGroup=[];_.each(funcs.newConfig.normalize(groups),function(elem){_.each(funcs.newConfig.normalize(elem.WAN),function(obj){wanGroup.push(obj.Link)})}),wanGroup=_.unique(wanGroup);var output=[];return _.each(types,function(type){var path=paths.conns+type+".",input=funcs.newConfig.normalize(conns[type]);input&&_.each(input,function(elem,inst){var fullPath=path+inst+".";_.contains(wanGroup,fullPath)&&output.push({name:elem.Name,value:fullPath})})}),output}function getGroups(data){var groups=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.groups));return _.map(groups,function(elem,key){return{name:"wan_group "+key,value:paths.groups+key+"."}})}var conns=funcs.fetchBranch(data,paths.conns),groups=funcs.fetchBranch(data,paths.groups),types=["DHCP","Static","PPPoE","L2TP","PPTP"],result=[{name:"st_not_selected",value:""}];return result=result.concat(getConns(conns,types,groups)),result=result.concat("Firewall"!=mode?{name:"default_gateway",value:paths.groups+"1."}:getGroups(data))}function getUsersList(data){var input=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.users));return _.map(input,function(elem,key){return{name:elem.Login,value:paths.users+key+"."}})}var pattern=T({"->":["$data","$attrs","Servers"],$data:":external",$attrs:":external",Mode:["$data",function(d){return funcs.fetchBranch(d,paths.devMode)}],Servers:{"->":["$server","$pppAttr","Clients","PPP","LAC","Firewall"],$attr:["$parent",function(p){return funcs.fetchBranch(p.$attrs,paths.server)}],$pppAttr:["$parent",function(p){return funcs.fetchBranch(p.$attrs,paths.ppp)}],$dnsCurrent:["$parent",function(p){return funcs.fetchBranch(p.$data,paths.dnsCur)}],$data:["$parent",function(p){return p.$data}],"{$server, $key}":["$data",function(d){return getServers(d)}],Type:["$server",function(s){return s.type}],Enable:["$server",function(s){return!!s.data&&s.data.Enable}],AssignedIP:["$server",function(s){return s.data?s.data.AssignedIP:""}],__id:["$server",function(s){return s.id}],Clients:{"->":!0,$clients:["$parent",function(p){return getClients(p.$server)}],MinAddress:["$clients",function(c){return c&&c.Range?c.Range[1].IPstart:""}],MaxAddress:["$clients",function(c){return c&&c.Range?c.Range[1].IPend:""}]},ListenIP:["$server",function(s){return s.data?s.data.ListenIP:""}],ListenPort:["$server","$attr",function(s,a){return"L2TP"==s.type?s.data?s.data.ListenPort:a[s.type]["#template"].ListenPort["default"]:void 0}],MaxConnections:["$server","$attr",function(s,a){return"PPTP"==s.type?s.data?s.data.MaxConnections:a[s.type]["#template"].MaxConnections["default"]:void 0}],LAC:{"->":["?"],"?":["$parent",function(p){return"L2TP"==p.$server.type}],$server:["$parent",function(p){return p.$server}],$lac:["$server",function(s){return getLACInfo(s.data)}],Enabled:["$lac",function(l){return l.Enabled}],Range:["$lac",function(l){return l.Range}],__id:["$lac",function(l){return l.__id}]},Users:["$server",function(s){return getUsers(s)}],DNS:["$dnsCurrent",function(d){return d?d:""}],PPP:{"->":["$server","DNS","Auth","MPPE"],$server:["$parent",function(p){return p.$server}],$attr:["$parent",function(p){return p.$pppAttr}],__id:["$server",function(s){return s.pppId}],MTU:["$server","$attr",function(s,a){return s.ppp?s.ppp.MTU:1400}],DebugPPP:["$server","$attr",function(s,a){return s.ppp?s.ppp.DebugPPP:a["#template"].DebugPPP["default"]}],DNS:{"->":!0,$server:["$parent",function(p){return p.$server}],Primary:["$server",function(s){return s.ppp?s.ppp.DNS.Primary:""}],Secondary:["$server",function(s){return s.ppp?s.ppp.DNS.Secondary:""}],UserPeerDNS:["$server",function(s){return!s.ppp||s.ppp.DNS.UseOwnDNS}]},Auth:{"->":!0,$server:["$parent",function(p){return p.$server}],Enabled:["$server",function(s){return!!s.ppp&&s.ppp.Authentication.Enabled}],OneConnectionPerLogin:["$server",function(s){return s.ppp?s.ppp.Authentication.OneConnectionPerLogin:""}],AuthType:["$server",function(s){return getAuthType(s)}],CHAP:["$server",function(s){return s.ppp?s.ppp.Authentication.CHAP:""}],MSCHAP:["$server",function(s){return s.ppp?s.ppp.Authentication.MSCHAP:""}],MSCHAPv2:["$server",function(s){return s.ppp?s.ppp.Authentication.MSCHAPv2:""}],PAP:["$server",function(s){return s.ppp?s.ppp.Authentication.PAP:""}]},MPPE:{"->":!0,$server:["$parent",function(p){return p.$server}],Require:["$server",function(s){return!!s.ppp&&"yes"==s.ppp.MPPE.Require}],MPPE40:["$server","Require",function(s,r){return s.ppp?s.ppp.MPPE.MPPE40bit:""}],MPPE128:["$server","Require",function(s,r){return s.ppp?s.ppp.MPPE.MPPE128bit:""}]}},GroupId:["$server","$data",function(s,d){return getGroupId(d,s)}],Firewall:{"->":!0,"?":["$root",function(p){return!isFirewall(p.Mode)}],$server:["$parent",function(p){return p.$server}],$data:["$parent",function(p){return p.$data}],$fwMasq:["$server","$data",function(s,d){return getFWMasq(d,s)}],MasqWANId:["$fwMasq*",function(fw){return fw.WAN.id}],MasqWANEnabled:["$fwMasq*",function(fw){return fw.WAN.Enabled}],MasqLANId:["$fwMasq*",function(fw){return fw.LAN.id}],MasqLANEnabled:["$fwMasq*",function(fw){return fw.LAN.Enabled}],ZonesId:["$server","$data",function(s,d){return getFWZoneID(d,s)}],$fwPolicy:["$server","$data","ZonesId",function(s,d,z){return getFWPolicy(d,s,z)}],VPNtoLANPolicy:["$fwPolicy",function(fw){return fw.VPNtoLANPolicy||""}],VPNtoWANPolicy:["$fwPolicy",function(fw){return fw.VPNtoWANPolicy||""}],VPNtoFWPolicy:["$fwPolicy",function(fw){return fw.VPNtoFWPolicy||""}],PolicyIds:["$fwPolicy",function(fw){return getPolicyIds(fw)}]}},ConnList:["$data","Mode",function(d,mode){return getConnList(d,mode)}],UsersList:["$data",function(d){return getUsersList(d)}]});return pattern.build({$data:data,$attrs:attrs})}function nativeToDsysinit(data){function getServerSettings(data){function getUsers(users){var result={};return _.each(users,function(elem,key){var id=_.isUndefined(elem.__id)?"new_inst_"+key:elem.__id;result[id]={User:elem.User,Range:makeRange(elem.Range)}}),result}function getLAC(lac){if(!lac.Enabled)return{};var id=_.isUndefined(lac.__id)?"new_lac":lac.__id,result={};return result[id]={Range:makeRange(lac.Range)},result}function makeRange(range){var output={};if(""!=range.MinAddress){var key=_.isUndefined(range.__id)?"new_range":range.__id;output[key]={IPstart:range.MinAddress,IPend:range.MaxAddress}}return output}var result={};result[data.Type]={};var id=data.__id?data.__id:"new_inst";return result[data.Type][id]={AssignedIP:data.AssignedIP,ListenIP:data.ListenIP,ListenPort:"L2TP"==data.Type?data.ListenPort:void 0,MaxConnections:"PPTP"==data.Type?data.MaxConnections:void 0,PPP:paths.ppp+(data.PPP.__id?data.PPP.__id:"new_ppp")+".",ClientIPRange:{1:{Range:{1:{IPstart:data.Clients.MinAddress,IPend:data.Clients.MaxAddress}}}},Enable:data.Enable,Users:getUsers(data.Users),LAC:"L2TP"==data.Type?getLAC(data.LAC):void 0},result}function getRequired(ppp,mppe){return!ppp.Auth.Enabled||"require"!=ppp.Auth.MSCHAP&&"require"!=ppp.Auth.MSCHAPv2?"":_.some(ppp.Auth,function(elem,key){return"require"==elem&&"MSCHAP"!=key&&"MSCHAPv2"!=key})?"":mppe.Require?"yes":"no"}function getMasquerade(data){var result={};if(data.Firewall.MasqWANEnabled){var WANkey=_.isUndefined(data.Firewall.MasqWANId)?"new_masq_wan":data.Firewall.MasqWANId;result[WANkey]={Enable:!0,Dest:{Interface:"Device.Network.Group.1."},Source:{Interface:paths.server+data.Type+"."+(data.__id?data.__id:"new_inst")+"."}}}if(data.Firewall.MasqLANEnabled){var LANkey=_.isUndefined(data.Firewall.MasqLANId)?"new_masq_lan":data.Firewall.MasqLANId;result[LANkey]={Enable:!0,Dest:{Interface:"Device.Network.Interface.Bridge.1."},Source:{Interface:paths.server+data.Type+"."+(data.__id?data.__id:"new_inst")+"."}}}return result}function getZone(data){var result={},key=_.isUndefined(data.Firewall.ZonesId)?"new_zone":data.Firewall.ZonesId;return result[key]={Interfaces:{1:{Path:paths.server+data.Type+"."+(data.__id?data.__id:"new_inst")+"."}}},result}function getPolicy(data){var result={};return _.each(data.Firewall.PolicyIds,function(elem,id){var key=""!=elem?elem:"new_policy_"+id,zone="",policy="";0==id||1==id?(zone=paths.fwZones+"3.",policy=data.Firewall.VPNtoLANPolicy):2==id||3==id?(zone=paths.fwZones+"2.",policy=data.Firewall.VPNtoWANPolicy):(zone=paths.fwZones+"1.",policy=data.Firewall.VPNtoFWPolicy);var serverZone=paths.fwZones+(_.isUndefined(data.Firewall.ZonesId)?"new_zone":data.Firewall.ZonesId)+".";result[key]={Policy:policy,Source:id%2==0?serverZone:zone,Dest:id%2==0?zone:serverZone}}),result}var pattern=T({"->":["$data","Device"],$data:":external",Device:{"->":!0,Network:{"->":!0,Group:{1:{VPN:{"->":!0,$data:["$root",function(r){return r.$data}],":":["$data",function(d){return d.GroupId?d.GroupId:"new_group"}],Link:["$data",function(d){return paths.server+d.Type+"."+(d.__id?d.__id:"new_inst")+"."}]}}},Server:{"->":!0,VPN:["$root",function(r){return getServerSettings(r.$data)}]},Settings:{PPP:{"->":["$ppp","DNS","MPPE","Authentication"],$data:["$root",function(r){return r.$data}],$ppp:["$data",function(d){return d.PPP}],":":["$ppp",function(ppp){return ppp.__id?ppp.__id:"new_ppp"}],DebugPPP:["$ppp",function(ppp){return ppp.DebugPPP}],MTU:["$ppp",function(ppp){return ppp.MTU}],DNS:{"->":!0,$dns:["$parent",function(p){return p.$ppp.DNS}],UseOwnDNS:["$dns",function(dns){return dns.UserPeerDNS}],Primary:["$dns",function(dns){return dns.Primary}],Secondary:["$dns",function(dns){return dns.Secondary}]},MPPE:{"->":!0,$ppp:["$parent",function(p){return p.$ppp}],$mppe:["$ppp",function(ppp){return ppp.MPPE}],Require:["$ppp","$mppe",function(ppp,mppe){return getRequired(ppp,mppe)}],MPPE40bit:["$mppe","Require",function(mppe,require){return"yes"==require?mppe.MPPE40:""}],MPPE128bit:["$mppe","Require",function(mppe,require){return"yes"==require?mppe.MPPE128:""}]},Authentication:{"->":!0,$auth:["$parent",function(p){return p.$ppp.Auth}],Enabled:["$auth",function(auth){return auth.Enabled}],CHAP:["$auth",function(auth){return auth.Enabled?auth.CHAP:""}],PAP:["$auth",function(auth){return auth.Enabled?auth.PAP:""}],MSCHAP:["$auth",function(auth){return auth.Enabled?auth.MSCHAP:""}],MSCHAPv2:["$auth",function(auth){return auth.Enabled?auth.MSCHAPv2:""}],OneConnectionPerLogin:["$auth",function(auth){return auth.OneConnectionPerLogin}]}}}},Firewall:{"->":["?","IPv4","IPv6"],"?":["$root",function(r){return r.$data&&!isFirewall(r.$data.Mode)}],IPv4:{"->":!0,Masquerade:["$root",function(r){return getMasquerade(r.$data)}],Zones:["$root",function(r){return getZone(r.$data)}],Policy:["$root",function(r){return getPolicy(r.$data)}]}}}});return pattern.build({$data:data})}function isFirewall(mode){return mode&&"Firewall"==mode}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),paths={server:"Device.Network.Server.VPN.",ppp:"Device.Network.Settings.PPP.",conns:"Device.Network.Connection.",groups:"Device.Network.Group.",devMode:"Device.DeviceInfo.DeviceMode",users:"Device.Network.Accounts.",fwMasq:"Device.Firewall.IPv4.Masquerade.",fwPolicy:"Device.Firewall.IPv4.Policy.",fwZones:"Device.Firewall.IPv4.Zones.",dnsCur:"Device.Network.DNS.Current."};module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}}()},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(361)}},function(module,exports,__webpack_require__){"use strict";!function(){function dsysinitToNative(data){function getState(data,tunnel){var result={};if(!tunnel.Enable)return{state:"off",stateText:"wifi_wds_mode_disabled"};if(""==tunnel.IP)switch(tunnel.Status){case"Enabled":return{state:"on",stateText:"ipsec_status_enabled"};case"Enabling":case"Disabling":return{state:"pending",stateText:"ipsec_status_enabling"};case"Disabled":case"Aborted":return{state:"off",stateText:"wifi_wds_mode_disabled"}}var iface="";if(~tunnel.IP.indexOf("Connection"))iface=tunnel.IP;else{var group=funcs.fetchBranch(data,tunnel.IP),order=group.WAN.order?group.WAN.order:[];iface=order[0]?group.WAN[order[0]].Link:""}if(""!=iface){var conn=funcs.fetchBranch(data,iface);if(_.has(conn,"StopOnFail")&&conn.StopOnFail)return result.state="disconnected",result.stateText=/\.WiFi\./.test(conn.Interface)?"wan_status_wifi_disconnect":/\.Cellular\./.test(conn.BaseInterface)||conn.Binding&&_.has(conn.Binding,"Modem")?"wan_status_usb_disconnected":"wan_status_cable_disconnected",result;if(_.has(conn,"ConnectionStatusExt")&&!_.isEmpty(conn.ConnectionStatusExt))return result.state="off","Unknown"==conn.ConnectionStatusExt?result.stateText="ipsec_status_unknown":(conn.ConnectionStatusExt=conn.ConnectionStatusExt.replace(/PPP|WiFi|USB|DHCP|IP|SIM/g,function(i){return i[0]+i.slice(1).toLowerCase()}),result.stateText="wan_status_ppp_"+conn.ConnectionStatusExt.replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase()),result}switch(tunnel.Status){case"Enabled":return{state:"on",stateText:"ipsec_status_enabled"};case"Enabling":case"Disabling":return{state:"pending",stateText:"ipsec_status_enabling"};case"Disabled":case"Aborted":return{state:"off",stateText:"disconnected"}}}function getZone(data){var zones=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.fw+"Zones."));if(!_.size(zones))return{};var greZoneId=_.findKey(zones,{Type:"ipv4",Name:"gre"});return greZoneId?{id:greZoneId,Interfaces:zones[greZoneId].Interfaces}:{}}function getPolicy(data,zone){if(!zone.id)return{};var greZone=paths.zone+zone.id+".",policy=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.fw+"Policy."));return _.size(policy)?{GREFW:_.findKey(policy,{Policy:"ACCEPT",Source:greZone,Dest:paths.zone+"1."}),GRELAN:_.findKey(policy,{Policy:"ACCEPT",Source:paths.zone+"3.",Dest:greZone})}:{}}function getRule(data,inst){var rules=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.fw+"Rules."));if(!_.size(rules))return{};var ruleId=_.findKey(rules,function(elem){var grePath=paths.gre+inst+".";return elem.Dest.Zone==paths.zone+"3."&&elem.Source.Iface==grePath});return ruleId?{id:ruleId,Enable:rules[ruleId].Enable}:{}}function getRoute(tunnel){var staticRoutes=funcs.newConfig.normalize(tunnel.StaticRoutes),routes=_.map(staticRoutes,function(elem,key){return{__id:key,Destination:elem.Destination}});return _.first(routes)}function getConnsList(data){function getConns(conns,types,groups){var wanGroup=[];_.each(funcs.newConfig.normalize(groups),function(elem){_.each(funcs.newConfig.normalize(elem.WAN),function(obj){
wanGroup.push(obj.Link)})}),wanGroup=_.unique(wanGroup);var output=[];return _.each(types,function(type){var path=paths.conns+type+".",input=funcs.newConfig.normalize(conns[type]);input&&_.each(input,function(elem,inst){var fullPath=path+inst+".";_.contains(wanGroup,fullPath)&&output.push({name:elem.Name,value:fullPath})})}),output}function getGroups(data){var groups=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.groups));return _.map(groups,function(elem,key){return{name:"wan_group "+key,value:paths.groups+key+"."}})}var devMode=funcs.fetchBranch(data,paths.devMode),conns=funcs.fetchBranch(data,paths.conns),groups=funcs.fetchBranch(data,paths.groups),types=["DHCP","Static","PPPoE","L2TP","PPTP"],result=[{name:"st_not_selected",value:""}];return result=result.concat(getConns(conns,types,groups)),result=result.concat("Firewall"!=devMode?{name:"default_gateway",value:paths.groups+"1."}:getGroups(data))}var pattern=T({"->":["$data","$fwZone","tunnels"],$data:":external",$fwZone:["$data",function(d){return getZone(d)}],$fwPolicy:["$data","$fwZone*",function(d,zone){return getPolicy(d,zone)}],mode:["$data",function(d){return funcs.fetchBranch(d,paths.devMode)}],conns:["$data",function(d){return getConnsList(d)}],tunnels:{"->":["$tunnel","Route"],$data:["$root",function(r){return r.$data}],$group:["$data",function(d){return funcs.newConfig.normalize(funcs.fetchBranch(d,paths.groups+"1.VPN."))}],$fwZone:["$root",function(r){return r.$fwZone.Interfaces}],"{$tunnel, $i}":["$data",function(d){return funcs.newConfig.normalize(funcs.fetchBranch(d,paths.gre))}],__id:["$i*",function(i){return i}],Name:["$tunnel*",function(t){return t.Name}],$state:["$data","$tunnel*",function(d,t){return getState(d,t)}],State:["$state*",function(s){return s.state}],StateText:["$state*",function(s){return s.stateText}],IP:["$tunnel*",function(t){return t.IP}],$vpnip:["$tunnel*",function(t){return t.VPNIP.split("/")}],VPNIPAddr:["$vpnip*",function(ip){return ip[0]}],VPNIPMask:["$vpnip*",function(ip){return funcs.ipv4.mask["long"](ip[1])}],VPNPeerIP:["$tunnel*",function(t){return t.VPNPeerIP}],PeerIP:["$tunnel*",function(t){return t.PeerIP}],Enable:["$tunnel*",function(t){return t.Enable}],MTU:["$tunnel*",function(t){return t.MTU}],Route:{"->":["?"],$tunnel:["$parent",function(p){return p.$tunnel}],"?":["$tunnel",function(t){return!!t}],$route:["$tunnel*",function(t){return getRoute(t)}],__id:["$route*",function(r){return r.__id}],$dest:["$route*",function(r){return r.Destination.split("/")}],DestAddr:["$dest*",function(d){return d[0]}],DestMask:["$dest*",function(d){return funcs.ipv4.mask["long"](d[1])}]},__groupId:["$group","$i*",function(g,i){return _.findKey(g,{Link:paths.gre+i+"."})}],__zoneId:["$fwZone*","$i*",function(z,i){return _.findKey(z,{Path:paths.gre+i+"."})}],$fwRule:["$data","$i*",function(d,i){return getRule(d,i)}],__ruleId:["$fwRule*",function(fw){return fw.id}],FWRule:["$fwRule*",function(fw){return fw.Enable}]},greZoneId:["$fwZone*",function(f){return f.id}],greFWPolicyId:["$fwPolicy*",function(fw){return fw.GREFW}],greLANPolicyId:["$fwPolicy*",function(fw){return fw.GRELAN}]});return pattern.build({$data:data})}function nativeToDsysinit(data){function getZones(data){if(!data.tunnels.length)return{};var id=data.greZoneId?data.greZoneId:"new_zone",interfaces={};_.each(data.tunnels,function(elem,key){var ifaceId=elem.__zoneId?elem.__zoneId:"+"+key;interfaces[ifaceId]={Path:paths.gre+(elem.__id?elem.__id:"+"+key)+"."}});var result={};return result[id]={Name:"gre",Type:"ipv4",Interfaces:interfaces},result}function getPolicy(data){if(!data.tunnels.length)return{};var zoneId=data.greZoneId?data.greZoneId:"new_zone",greFWId=data.greFWPolicyId?data.greFWPolicyId:"new_gre_fw",lanGREId=data.greLANPolicyId?data.greLANPolicyId:"new_lan_gre",result={};return result[greFWId]={Policy:"ACCEPT",Source:paths.zone+zoneId+".",Dest:paths.zone+"1."},result[lanGREId]={Policy:"ACCEPT",Source:paths.zone+"3.",Dest:paths.zone+zoneId+"."},result}function getRules(data){if(!data.tunnels.length)return{};var result={},zoneId=data.greZoneId?data.greZoneId:"new_zone";return _.each(data.tunnels,function(elem,key){var ruleId=elem.__ruleId?elem.__ruleId:"+"+key;result[ruleId]={Action:"ACCEPT",Enable:elem.FWRule,Dest:{Zone:paths.zone+"3."},Source:{Iface:"Device.Network.Connection.GRE."+(elem.__id?elem.__id:"+"+key)+".",Zone:paths.zone+zoneId+".",Address:{1:{IPStart:elem.VPNIPAddr+"/"+funcs.ipv4.mask["short"](elem.VPNIPMask)},2:{IPStart:elem.Route.DestAddr+"/"+funcs.ipv4.mask["short"](elem.Route.DestMask)}}}}}),result}var pattern=T({"->":["$data","Device"],$data:":external",Device:{"->":["$data","Network","Firewall"],$data:["$parent",function(p){return p.$data}],Network:{"->":!0,Connection:{GRE:{"->":["$tunnels","StaticRoutes"],"{$tunnels, $i}":["$root",function(r){return r.$data.tunnels}],":":["$tunnels*","$i*",function(t,i){return t.__id?t.__id:"+"+i}],Enable:["$tunnels*",function(t){return t.Enable}],Name:["$tunnels*",function(t){return t.Name}],IP:["$tunnels*",function(t){return t.IP}],VPNIP:["$tunnels*",function(t){return t.VPNIPAddr+"/"+funcs.ipv4.mask["short"](t.VPNIPMask)}],VPNPeerIP:["$tunnels*",function(t){return t.VPNPeerIP}],PeerIP:["$tunnels*",function(t){return t.PeerIP}],StaticRoutes:{"->":!0,$route:["$parent",function(p){return p.$tunnels?p.$tunnels.Route:void 0}],":":["$route*",function(r){return r.__id||"new_route"}],Destination:["$route*",function(r){return r.DestAddr+"/"+funcs.ipv4.mask["short"](r.DestMask)}]},MTU:["$tunnels*",function(t){return t.MTU}]}},Group:{1:{VPN:{"->":!0,"{$tunnels, $i}":["$root",function(r){return r.$data.tunnels}],":":["$tunnels*","$i*",function(t,i){return t.__groupId?t.__groupId:"+"+i}],Link:["$tunnels*","$i*",function(t,i){return paths.gre+(t.__id?t.__id:"+"+i)+"."}]}}}},Firewall:{"->":["$data","IPv4"],$data:["$parent",function(r){return r.$data}],"?":["$data",function(d){return"Firewall"!=d.mode}],IPv4:{"->":["$data","Zones"],$data:["$parent",function(p){return p.$data}],Zones:["$data",function(d){return getZones(d)}],Rules:["$data",function(d){return getRules(d)}],Policy:["$data",function(d){return getPolicy(d)}]}}}});return pattern.build({$data:data})}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),paths={conns:"Device.Network.Connection.",gre:"Device.Network.Connection.GRE.",groups:"Device.Network.Group.",fw:"Device.Firewall.IPv4.",devMode:"Device.DeviceInfo.DeviceMode",zone:"Device.Firewall.IPv4.Zones."};module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}}()},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}var _defineProperty2=__webpack_require__(169),_defineProperty3=_interopRequireDefault(_defineProperty2),_keys=__webpack_require__(78),_keys2=_interopRequireDefault(_keys),_promise=__webpack_require__(7),_promise2=_interopRequireDefault(_promise),_=__webpack_require__(4),cpe=__webpack_require__(3),funcs=__webpack_require__(5),T=__webpack_require__(122).T,__autoconf="undefined"!=typeof autoconf?autoconf:{};module.exports=function(){function toNative(config){function getIfaces(ifaces,bridges,type){var result=[];return _.each(ifaces,function(e,k){var interfaceLink="USB"==type?""+paths.usb+k+".":""+paths["interface"]+type+"."+k+".",usbLink="USB"==type?e.Interface:void 0,bridgeLink=getBridgeLink(interfaceLink,bridges,usbLink);("EoGRE"!=type||bridgeLink)&&result.push({Name:e.Name||e.Ifname,BridgeLink:bridgeLink?bridgeLink.Link:void 0,BridgeLinkInst:bridgeLink?bridgeLink.Inst:void 0,InterfaceLink:interfaceLink,InterfaceOnly:"USB"==type?e.InterfaceOnly:void 0,Type:"USB"==type?e.InterfaceOnly?"iface":e.IPv6?e.IPv6Only?"v6":"dual":"v4":void 0})}),result}function getPorts(config,bridges,ethernets){var res=[];return _.each(ethernets,function(e,k){if(-1===e.LowerLayer.indexOf("Cellular")){var vlan=funcs.fetchBranch(config,e.LowerLayer),interfaceLink=paths["interface"]+"Ethernet."+k+".",bridgeLink=getBridgeLink(interfaceLink,bridges);res.push({Name:vlan.Name,Upstream:!!_.find(funcs.newConfig.normalize(vlan.Ports),function(p){var port=funcs.fetchBranch(config,p.Link);return port.Upstream}),InterfaceLink:interfaceLink,BridgeLink:bridgeLink?bridgeLink.Link:void 0,BridgeLinkInst:bridgeLink?bridgeLink.Inst:void 0})}}),res}function getBridged(interfaces,bridges,ports){var res=[],atm=funcs.newConfig.normalize(funcs.fetchBranch(interfaces,"ATM.")),ptm=funcs.newConfig.normalize(funcs.fetchBranch(interfaces,"PTM."));return _.each(atm,function(e,k){var interfaceLink=paths["interface"]+"ATM."+k+".",bridgeLink=getBridgeLink(interfaceLink,bridges),iface=funcs.fetchBranch(config,interfaceLink);bridgeLink&&res.push({Name:bridgeLink.Name?bridgeLink.Name:e.Name,InterfaceLink:interfaceLink,BridgeLink:bridgeLink.Link,BridgeLinkInst:bridgeLink.Inst,MACAddress:iface?iface.MACAddress:void 0})}),_.each(ptm,function(e,k){var interfaceLink=paths["interface"]+"PTM."+k+".",bridgeLink=getBridgeLink(interfaceLink,bridges),iface=funcs.fetchBranch(config,interfaceLink);bridgeLink&&res.push({Name:bridgeLink.Name?bridgeLink.Name:e.Name,InterfaceLink:interfaceLink,BridgeLink:bridgeLink.Link,BridgeLinkInst:bridgeLink.Inst,MACAddress:iface?iface.MACAddress:void 0})}),_.each(ports,function(p){if(p.BridgeLink&&p.Upstream){var bridgeLink=getBridgeLink(p.InterfaceLink,bridges),iface=funcs.fetchBranch(config,p.InterfaceLink);res.push({Name:bridgeLink.Name?bridgeLink.Name:p.Name,InterfaceLink:p.InterfaceLink,BridgeLink:p.BridgeLink,BridgeLinkInst:p.BridgeLinkInst,MACAddress:iface?iface.MACAddress:void 0})}}),res}function getWans(connections,usb,groups,conf){var wans=[];if(_.each(connections,function(e,k){var conns=funcs.newConfig.normalize(e);_.each(conns,function(_e,_k){var connLink=""+paths.connection+k+"."+_k+".";if(_.find(groups,function(g){return!!_.find(g.WAN,function(w){return w.Link===connLink})||!!_.find(g.WANv6,function(w){return w.Link===connLink})})){var iface=funcs.fetchBranch(conf,_e.Interface);iface.LowerLayer&&(iface=funcs.fetchBranch(conf,iface.LowerLayer)),wans.push({Name:_e.Name,ConnectionLink:connLink,Type:_.find(["DHCPv6","Staticv6"],function(t){return t===k})?"v6":"v4",VID:iface&&iface.VID})}})}),usb)for(var i in usb){var elem=usb[i],connLink=""+paths.usb+i+".";if(_.find(groups,function(g){return!!_.find(g.WAN,function(w){return w.Link===connLink})||!!_.find(g.WANv6,function(w){return w.Link===connLink})})){var iface=funcs.fetchBranch(conf,elem.Interface);iface.LowerLayer&&(iface=funcs.fetchBranch(conf,iface.LowerLayer)),wans.push({Name:elem.Name,ConnectionLink:connLink,Type:elem.InterfaceOnly?"iface":elem.IPv6?elem.IPv6Only?"v6":"dual":"v4",VID:iface&&iface.VID})}}return wans}function getUSBConns(config){return __autoconf.BR2_PACKAGE_ANWEB_USB_MODEM?funcs.newConfig.normalize(funcs.fetchBranch(config,paths.usb)):void 0}var pattern=T({"->":["$config","$groups","$bridges","$ports","$wifi","$firewall","_wans","_lans","_atm","_ptm","Groups","Ethernets"],$config:":external",$groups:["$config",function(c){return funcs.newConfig.normalize(funcs.fetchBranch(c,paths.group))}],$interfaces:["$config",function(c){return funcs.newConfig.normalize(funcs.fetchBranch(c,paths["interface"]))}],$connections:["$config",function(c){return funcs.newConfig.normalize(funcs.fetchBranch(c,paths.connection))}],$usbConns:["$config",function(c){return getUSBConns(c)}],$bridges:["$interfaces",function(i){return funcs.newConfig.normalize(funcs.fetchBranch(i,"Bridge."))}],$ethernets:["$interfaces",function(i){return funcs.newConfig.normalize(funcs.fetchBranch(i,"Ethernet."))}],$wifis:["$interfaces",function(i){return funcs.newConfig.normalize(funcs.fetchBranch(i,"WiFi."))}],$eogre:["$interfaces",function(i){return _.has(i,"EoGRE")?funcs.newConfig.normalize(funcs.fetchBranch(i,"EoGRE.")):{}}],$vconfig:["$interfaces",function(i){return _.has(i,"Vconfig")?funcs.newConfig.normalize(funcs.fetchBranch(i,"Vconfig.")):{}}],$usb:["$usbConns*",function(uc){return uc?uc:{}}],$fw_ipv4_masq:["$config",function(c){return funcs.newConfig.normalize(funcs.fetchBranch(c,paths.firewall+"IPv4.Masquerade."))}],_ports:["$config","$bridges","$ethernets",function(c,b,e){return getPorts(c,b,e)}],_bridged:["$interfaces","$bridges","_ports",function(i,b,p){return getBridged(i,b,p)}],_wifi:["$wifis","$bridges",function(w,b){return getIfaces(w,b,"WiFi")}],_eogre:["$eogre","$bridges",function(e,b){return getIfaces(e,b,"EoGRE")}],_vconfig:["$vconfig","$bridges",function(v,b){return getIfaces(v,b,"Vconfig")}],_usb:["$usb","$bridges",function(u,b){return getIfaces(u,b,"USB")}],$lan:["_ports",function(p){return _.filter(p,function(_p){return!_p.Upstream})}],_wans:["$connections","$usb","$groups","$config",function(c,u,g,conf){return getWans(c,u,g,conf)}],_lans:["$lan","_wifi","_eogre","_vconfig",function(l,w,e,v){return l.concat(w,e,v)}],Groups:{"->":["$group","$laninterface","Bridge","BridgeLink","Bridged","Wans","WansOrder","Wans6","Wans6Order"],"{$group, $i}":["$root",function(r){return r.$groups}],":":["$i*",function(i){return i}],$laninterface:["$group*","$root",function(g,r){var b=funcs.fetchBranch(r.$config,g.LAN);return _.find(funcs.newConfig.normalize(r.$interfaces.Ethernet),function(i,k){var link=paths["interface"]+"Ethernet."+k+".";return _.find(funcs.newConfig.normalize(b.Members),function(b){return b.Link===link})})}],Name:["$group*",function(g){return g.Name.match("#")?g.Name.split("#")[0]:g.Name}],Bridge:{"->":["$port","Name","InterfaceLink"],"{$port, $i}":["$root","$parent",function(r,p){return _.filter(r._lans.concat(r._bridged),function(l){return l.BridgeLink===p.$group.LAN})}],Name:["$port*",function(p){return p.Name}],InterfaceLink:["$port*",function(p){return p.InterfaceLink}]},BridgeLink:["$group*",function(g){return g.LAN}],Type:["$group*",function(g){return g.Name.match("#")?g.Name.split("#")[1]:"nat"}],Wans:{"->":["$wan","Name","Inst"],"{$wan, $i}":["$parent",function(p){return funcs.newConfig.normalize(p.$group.WAN)}],Inst:["$i*",function(i){return i}],Name:["$wan*","$root",function(w,r){return _.find(r._wans,function(_w){return _w.ConnectionLink===w.Link}).Name}]},WansOrder:["$group*",function(g){return funcs.deepClone(g.WAN.order)}],Wans6:{"->":["order","$wan","Name","Inst"],"{$wan, $i}":["$parent",function(p){return funcs.newConfig.normalize(p.$group.WANv6)}],Inst:["$i*",function(i){return i}],Name:["$wan*","$root",function(w,r){return _.find(r._wans,function(_w){return _w.ConnectionLink===w.Link}).Name}]},Wans6Order:["$group*",function(g){return funcs.deepClone(g.WANv6.order)}]}});return pattern.build({$config:config})}function getBridgeLink(interfaceLink,bridges,usbIfaceLink){var link=void 0;return _.each(bridges,function(e,k){var members=funcs.newConfig.normalize(e.Members);_.each(members,function(_e,_k){(_e.Link===interfaceLink||usbIfaceLink&&_e.Link===usbIfaceLink)&&(link={Link:paths["interface"]+"Bridge."+k+".",Name:_e.Name?_e.Name:void 0,Inst:_k})})}),link}function pull(params){function concatUSBIfaces(model){for(var i in model.Groups){var bridgeLink=model.Groups[i].BridgeLink;for(var j in model._usb)model._usb[j].BridgeLink==bridgeLink&&"iface"==model._usb[j].Type&&(model.Groups[i].Bridge.push(model._usb[j]),model._bridged.push(model._usb[j]))}return model}var _this=this;return cpe.GetParameterValues(_.values(paths)).then(function(resp){var config=funcs.buildTree(resp.result.ParameterList);return _this.model=toNative(config),__autoconf.BR2_PACKAGE_ANWEB_USB_MODEM&&(_this.model=concatUSBIfaces(_this.model)),_this.model.bridgeGroupKey=_.findKey(_this.model.Groups,function(g){return"_tech"===g.Name}),_this.model.hideConnections=params.hideConnections,_this.model.hideVlans=params.hideVlans,_this.pulled=!0,_promise2["default"].resolve()})}function getGroups(){var _this2=this,groups=funcs.deepClone(_.omit(this.model.Groups,function(g){return"_tech"===g.Name}));return _.each(groups,function(g){g.Wans=_.filter(g.Wans,function(w){return!_.contains(_this2.model.hideConnections,w.Name)&&!_.some(_this2.model.hideVlans,function(v){return Number(v)===_.find(_this2.model._wans,function(_w){return _w.Name===w.Name}).VID})}),g.Bridge=_.unique(g.Bridge,_.iteratee("Name"))}),groups}function getGroup(key){var _this3=this;return{Bridge:_.unique(_.map(this.model.Groups[key].Bridge,function(b){return b.Name})),Type:this.model.Groups[key].Type,Wans:_.map(_.filter(this.model.Groups[key].Wans,function(w){return!_.contains(_this3.model.hideConnections,w.Name)&&!_.some(_this3.model.hideVlans,function(v){return Number(v)===_.find(_this3.model._wans,function(_w){return _w.Name===w.Name}).VID})}),function(w){return w.Name}).concat(_.map(this.model.Groups[key].Wans6,function(w){return w.Name})).concat(this.model._usb.filter(function(u){return u.InterfaceOnly})),Name:this.model.Groups[key].Name,HideConnections:_.map(_.filter(this.model.Groups[key].Wans,function(w){return _.contains(_this3.model.hideConnections,w.Name)}),function(w){return w.Name}),GwIf:!!this.model.Groups[key].WansOrder.length&&_.find(this.model.Groups[key].Wans,function(w){return w.Inst===_this3.model.Groups[key].WansOrder[0]}).Name,GwIf6:!!this.model.Groups[key].Wans6Order.length&&_.find(this.model.Groups[key].Wans6,function(w){return w.Inst===_this3.model.Groups[key].Wans6Order[0]}).Name}}function getAllLans(grKey){var _this4=this;return _.chain(this.model._lans).filter(function(l){return l.BridgeLink===_this4.model.Groups[1].BridgeLink||grKey&&l.BridgeLink===_this4.model.Groups[grKey].BridgeLink||!l.BridgeLink}).map(function(l){return l.Name}).unique().value()}function getAllWansGroup(grKey){var _this5=this;return _.chain(this.model._wans).filter(function(w){return!!_.find(_this5.model.Groups[1].Wans,function(_w){return _w.Name===w.Name})||!!_.find(_this5.model.Groups[1].Wans6,function(_w){return _w.Name===w.Name})||grKey&&(!!_.find(_this5.model.Groups[grKey].Wans,function(_w){return _w.Name===w.Name})||!!_.find(_this5.model.Groups[grKey].Wans6,function(_w){return _w.Name===w.Name}))}).filter(function(w){return!_.contains(_this5.model.hideConnections,w.Name)}).filter(function(w){return!_.some(_this5.model.hideVlans,function(v){return Number(v)===_.find(_this5.model._wans,function(_w){return _w.Name===w.Name}).VID})}).map(function(w){return{Name:w.Name,Type:w.Type}}).unique().value()}function getAllBridged(){return _.map(this.model._bridged,function(b){return{Name:b.Name}})}function getAllBridgedGroup(grKey){var _this6=this,output=_.chain(this.model._bridged).filter(function(b){return _this6.model.bridgeGroupKey&&b.BridgeLink===_this6.model.Groups[_this6.model.bridgeGroupKey].BridgeLink||grKey&&b.BridgeLink===_this6.model.Groups[grKey].BridgeLink}).map(function(b){return{Name:b.Name}}).value();if(this.model._usb)for(var i in this.model._usb.filter(function(u){return u.InterfaceOnly})){var elem=this.model._usb[i];output.find(function(o){return o.Name==elem.Name})||output.push(elem)}return output}function getDefGroup(){return{Bridge:[],Wans:[],Type:"nat"}}function getGroupsList(){var _this7=this;return _.map(this.model.Groups,function(g,k){return{lans:_.map(g.Bridge,function(b){return b.Name}),wans:_.map(g.Wans,function(w){return w.Name}).concat(_.map(g.Wans6,function(w){return w.Name})).concat(_this7.model._usb.filter(function(u){return u.InterfaceOnly})),name:g.Name,key:k,type:g.Type}})}function getTypesList(){return["nat","bridge","local"]}function toCpe(model,config){var pattern=T({"->":["$model","$config","Device"],$model:":external",$config:":external",Device:{"->":["Network","Interface","Firewall"],Network:{"->":["Group","Interface","IP","Server"],Group:{"->":["$group","WAN","WANv6","Interface"],"{$group, $i}":["$root",function(r){return r.$model.Groups}],":":["$i*",function(i){return i}],Name:["$group*",function(g){return g.Name+"#"+g.Type}],LAN:["$group*",function(g){return g.BridgeLink}],WAN:{"->":["$wan","Link"],"{$wan, $i}":["$parent","$root",function(p,r){return p.$group.Wans}],":":["$wan*","$i*",function(w,i){return w.Inst}],Link:["$root","$wan*",function(r,w){return _.find(r.$model._wans,function(_w){return("v4"===_w.Type||"dual"===_w.Type)&&_w.Name===w.Name}).ConnectionLink}]},WANv6:{"->":["$wan","Link"],"{$wan, $i}":["$parent","$root",function(p,r){return p.$group.Wans6}],":":["$wan*","$i*",function(w,i){return w.Inst}],Link:["$root","$wan*",function(r,w){return _.find(r.$model._wans,function(_w){return("v6"===_w.Type||"dual"===_w.Type)&&_w.Name===w.Name}).ConnectionLink}]}},Interface:{"->":["Bridge"],Bridge:{"->":["$group","$oldBridge","Enable","Members"],"{$group, $i}":["$root",function(r){return r.$model.Groups}],":":["$i*",function(i){return i}],$oldBridge:["$root","$i*",function(r,i){return _.find(funcs.newConfig.normalize(funcs.fetchBranch(r.$config,paths["interface"]+"Bridge.")),function(b,_i){return _i===i})}],Enable:["$oldBridge",function(o){return!o||o.Enable}],MACAddress:["$group","$root",function(q,r){return getMACAddress(q.Bridge,r.$model._ports,r.$model._bridged)}],Members:{"->":["$groupLan","Link","Name"],"{$groupLan, $i}":["$parent","$root",function(p,r){return _.map(p.$group.Bridge,function(b){var bridged=_.find(r.$model._bridged,function(_p){return _p.InterfaceLink===b.InterfaceLink});return bridged||_.find(r.$model._ports.concat(r.$model._wifi).concat(r.$model._eogre).concat(r.$model._vconfig).concat(r.$model._usb),function(_p){return _p.InterfaceLink===b.InterfaceLink})})}],":":["$groupLan*","$parent","$i*",function(l,p,i){var members=p.$oldBridge?funcs.newConfig.normalize(p.$oldBridge.Members):void 0;return _.find(members,function(_o){return _o.Link===l.InterfaceLink})&&l.BridgeLinkInst?l.BridgeLinkInst:"new_inst"+i}],Link:["$groupLan*",function(l){return l?l.InterfaceLink:void 0}],Name:["$groupLan*","$root",function(l,r){return _.find(r.$model._bridged,function(b){return b.Name===l.Name})?l.Name:void 0}]}}},Server:{"->":["DHCP","DNS"],DHCP:{"->":["$group","$ind","Interface"],$oldDHCPs:["$root",function(r){return funcs.newConfig.normalize(funcs.fetchBranch(r.$config,""+paths.dhcp))}],"{$group, $i}":["$root",function(r){return _.pick(r.$model.Groups,function(g){return"bridge"!==g.Type})}],$oldDHCP:["$group*","$oldDHCPs",function(g,o){return _.find(o,function(e){return g.BridgeLink===e.Interface})}],":":["$group*","$oldDHCPs",function(g,o){var ind=_.findKey(o,function(e){return g.BridgeLink===e.Interface});return ind||"new_inst"}],Interface:["$group*",function(g){return g.BridgeLink}],Enable:["$oldDHCP",function(o){return!o||o.Enable}],StartIP:["$i*","$oldDHCP",function(i,o){return o?o.StartIP:"192.168."+i+".100"}],EndIP:["$i*","$oldDHCP",function(i,o){return o?o.EndIP:"192.168."+i+".199"}],IPv6Mode:["$oldDHCP",function(o){return o?o.IPv6Mode:"Autoconf"}],Leasev6:["$oldDHCP",function(o){return o?o.Leasev6:300}]},DNS:{"->":[],$oldDNSes:["$root",function(r){return funcs.newConfig.normalize(funcs.fetchBranch(r.$config,""+paths.dns))}],"{$group, $i}":["$root",function(r){return _.pick(r.$model.Groups,function(g){return"bridge"!==g.Type})}],":":["$group*","$oldDNSes",function(g,o){var ind=_.findKey(o,function(e){return g.BridgeLink===e.Interface});return ind||"new_inst"}],Interface:["$group*",function(g){return g.BridgeLink}],Enable:!0}}},Firewall:{"->":["IPv4","IPv6"],IPv4:{"->":!0},IPv6:{"->":!0}}}});return pattern.build({$model:model,$config:config})}function getMACAddress(allBridged,ports,bridged){var brPorts=[];return _.each(allBridged,function(b){var bridge=_.find(bridged,function(_p){return _p.InterfaceLink===b.InterfaceLink});bridge&&brPorts.push(bridge)}),brPorts.length?brPorts[0].MACAddress:void 0}function pushGroup(group,key){var _this8=this,newIP=void 0;if(!key){if(key=Number(_.max(_keys2["default"](this.model.Groups)))+1,"bridge"!==group.Type&&(newIP={Enable:!0,LowerLayer:paths["interface"]+"Bridge."+key+".",IPv4Address:{1:{Enable:!0,IPAddress:"192.168."+key+".1/24"}}}),"local"===group.Type&&(group.Wans=_.map(this.model.Groups[1].WansOrder,function(o){return _.find(_this8.model.Groups[1].Wans,function(_w){return _w.Inst===o}).Name}),group.Wans=group.Wans.concat(_.map(this.model.Groups[1].Wans6Order,function(o){return _.find(_this8.model.Groups[1].Wans6,function(_w){return _w.Inst===o}).Name})),_.each(this.model._wans,function(w){_.find(group.Wans,function(_w){return _w===w.Name})||group.Wans.push(w.Name)})),"nat"===group.Type){var wans=funcs.deepClone(group.Wans);group.Wans=[],group.GwIf&&group.Wans.push(_.find(wans,function(w){return w===group.GwIf})),group.GwIf6&&group.Wans.push(_.find(wans,function(w){return w===group.GwIf6})),_.each(wans,function(w){_.find(group.Wans,function(_w){return _w===w})||group.Wans.push(w)})}group.Wans=_.unique(group.Wans)}if(this.model.Groups[key]={Name:group.Name,Type:group.Type,BridgeLink:paths["interface"]+"Bridge."+key+".",Wans:_.map(_.filter(group.Wans.concat(group.HideConnections),function(w){return!!_.find(_this8.model._wans,function(_w){return _w.Name===w&&"v4"===_w.Type})}),function(w,i){var inst=void 0;if(_this8.model.Groups[key]){var wan=_.find(_this8.model.Groups[key].Wans,function(_w){return _w.Name===w});wan&&(inst=wan.Inst)}return{Name:w,Inst:inst?inst:"new_inst"+i}}),Wans6:_.map(_.filter(group.Wans,function(w){return!!_.find(_this8.model._wans,function(_w){return _w.Name===w&&"v6"===_w.Type})}),function(w,i){var inst=void 0;if(_this8.model.Groups[key]){var wan=_.find(_this8.model.Groups[key].Wans6,function(_w){return _w.Name===w});wan&&(inst=wan.Inst)}return{Name:w,Inst:inst?inst:"new_inst"+i}}),Bridge:_.chain(this.model._ports.concat(this.model._wifi).concat(this.model._eogre).concat(this.model._bridged).concat(this.model._vconfig).concat(this.model._usb)).filter(function(p){return _.contains(group.Bridge,p.Name)}).map(function(p){return{Name:p.Name,InterfaceLink:p.InterfaceLink}}).unique(_.iteratee("InterfaceLink")).value()},_.each(this.model.Groups,function(g,k){k!=key&&(g.Bridge=_.filter(g.Bridge,function(e){return!_.find(_this8.model.Groups[key].Bridge,function(b){return b.InterfaceLink===e.InterfaceLink})}))}),"local"!==group.Type&&_.each(this.model.Groups,function(g,k){k!=key&&"local"!==g.Type&&(g.Wans=_.filter(g.Wans,function(e){return!_.find(group.Wans,function(_e){return _e===e.Name})}),g.WansOrder=_.filter(g.WansOrder,function(e){return!!_.find(g.Wans,function(w){return w.Inst===e})}),g.Wans6=_.filter(g.Wans6,function(e){return!_.find(group.Wans,function(_e){return _e===e.Name})}),g.Wans6Order=_.filter(g.Wans6Order,function(e){return!!_.find(g.Wans6,function(w){return w.Inst===e})}))}),_.each(this.model._lans,function(l){_.find(_this8.model.Groups,function(g){return!!_.find(g.Bridge,function(b){return b.InterfaceLink===l.InterfaceLink})})||_this8.model.Groups[1].Bridge.push({Name:l.Name,InterfaceLink:l.InterfaceLink})}),_.each(this.model._bridged,function(b){_.find(_this8.model.Groups,function(g){return!!_.find(g.Bridge,function(_b){return _b.InterfaceLink===b.InterfaceLink})})||_this8.model.bridgeGroupKey&&_this8.model.Groups[_this8.model.bridgeGroupKey].Bridge.push({Name:b.Name,InterfaceLink:b.InterfaceLink})}),_.each(this.model._wans,function(w,i){if(!_.find(_this8.model.Groups,function(g){return!("local"===g.Type||!_.find(g.Wans,function(_w){return _w.Name===w.Name})&&!_.find(g.Wans6,function(_w){return _w.Name===w.Name}))})){var obj={Name:w.Name,Inst:"new_inst"+i};"v4"===w.Type?_this8.model.Groups[1].Wans.push(obj):_this8.model.Groups[1].Wans6.push(obj)}}),"nat"===this.model.Groups[key].Type){if(group.GwIf){var first=_.find(this.model.Groups[key].Wans,function(w){return w.Name===group.GwIf});first&&(this.model.Groups[key].WansOrder=[first.Inst])}if(group.GwIf6){var first=_.find(this.model.Groups[key].Wans6,function(w){return w.Name===group.GwIf6});first&&(this.model.Groups[key].Wans6Order=[first.Inst])}}return _.each(this.model.Groups,function(g){"local"===g.Type&&(g.WansOrder=_.map(_this8.model.Groups[1].WansOrder,function(o){return _.find(g.Wans,function(w){return w.Name===_.find(_this8.model.Groups[1].Wans,function(_w){return _w.Inst===o}).Name}).Inst}),g.Wans6Order=_.map(_this8.model.Groups[1].Wans6Order,function(o){return _.find(g.Wans6,function(w){return w.Name===_.find(_this8.model.Groups[1].Wans6,function(_w){return _w.Inst===o}).Name}).Inst}))}),_promise2["default"].all([cpe.GetParameterValues(_.values(paths)),cpe.GetParameterAttributes(_.values(paths))]).then(function(resp){var config=funcs.buildTree(resp[0].result.ParameterList),attrs=funcs.buildTreeAttributes(resp[1].result.ParameterList),_config=toCpe(_this8.model,config);_config.Device.Network.IP=funcs.newConfig.normalize(funcs.deepClone(config.Device.Network.IP)),newIP&&(_config.Device.Network.IP.new_inst=newIP),_config.Device.Firewall.IPv4.Zones=funcs.newConfig.normalize(funcs.deepClone(funcs.fetchBranch(config,paths.firewall+"IPv4.Zones.")));var bridgeZone=_.find(_config.Device.Firewall.IPv4.Zones,function(z){return"bridge"===z.Name});bridgeZone||(bridgeZone={Access:!1,Name:"bridge",Interfaces:{}},_config.Device.Firewall.IPv4.Zones.new_inst=bridgeZone,_config.Device.Firewall.IPv4.Policy=funcs.newConfig.normalize(funcs.deepClone(funcs.fetchBranch(config,paths.firewall+"IPv4.Policy."))),_config.Device.Firewall.IPv4.Policy.new_inst_out={Source:paths.firewall+"IPv4.Zones.new_inst.",Dest:paths.firewall+"IPv4.Zones.2.",Policy:"ACCEPT"}),_config.Device.Firewall.IPv4.Masquerade=funcs.newConfig.normalize(funcs.deepClone(funcs.fetchBranch(config,paths.firewall+"IPv4.Masquerade."))),_.each(_.pick(_this8.model.Groups,function(g){return"nat"===g.Type}),function(g){_.each(g.Wans,function(w){var wanIf=_.find(_this8.model._wans,function(_w){return _w.Name===w.Name});_.each(_config.Device.Firewall.IPv4.Masquerade,function(m){m.Dest.Interface===wanIf.ConnectionLink&&m.Source.Interface!==g.BridgeLink&&(m.Source.Interface=g.BridgeLink)})})});var interfacesLanZone=_config.Device.Firewall.IPv4.Zones[3].Interfaces,interfacesBridgeZone=bridgeZone.Interfaces;_.each(_.omit(_this8.model.Groups,function(g){return"_tech"===g.Name}),function(g,k){"bridge"===g.Type?_.find(funcs.newConfig.normalize(interfacesBridgeZone),function(i){return i.Path===g.BridgeLink})||(_.each(funcs.newConfig.normalize(_config.Device.Firewall.IPv4.Zones),function(z){_.each(funcs.newConfig.normalize(z.Interfaces),function(i,k){i.Path===g.BridgeLink&&delete z.Interfaces[k]})}),interfacesBridgeZone["new_inst_"+k]={Path:g.BridgeLink}):_.find(funcs.newConfig.normalize(interfacesLanZone),function(i){return i.Path===g.BridgeLink})||(interfacesLanZone["new_inst_"+k]={Path:g.BridgeLink})}),_config.Device.Firewall.IPv6.Zones=funcs.newConfig.normalize(funcs.deepClone(funcs.fetchBranch(config,paths.firewall+"IPv6.Zones."))),bridgeZone=_.find(_config.Device.Firewall.IPv6.Zones,function(z){return"bridge"===z.Name}),bridgeZone||(bridgeZone={Access:!1,Name:"bridge",Interfaces:{}},_config.Device.Firewall.IPv6.Zones.new_inst=bridgeZone,_config.Device.Firewall.IPv6.Policy=funcs.newConfig.normalize(funcs.deepClone(funcs.fetchBranch(config,paths.firewall+"IPv6.Policy."))),_config.Device.Firewall.IPv6.Policy.new_inst_out={Source:paths.firewall+"IPv6.Zones.new_inst.",Dest:paths.firewall+"IPv6.Zones.2.",Policy:"ACCEPT"}),interfacesLanZone=_config.Device.Firewall.IPv6.Zones[3].Interfaces,interfacesBridgeZone=bridgeZone.Interfaces,_.each(_.omit(_this8.model.Groups,function(g){return"_tech"===g.Name}),function(g,k){"bridge"===g.Type?_.find(funcs.newConfig.normalize(interfacesBridgeZone),function(i){return i.Path===g.BridgeLink})||(_.each(funcs.newConfig.normalize(_config.Device.Firewall.IPv6.Zones),function(z){_.each(funcs.newConfig.normalize(z.Interfaces),function(i,k){i.Path===g.BridgeLink&&delete z.Interfaces[k]})}),interfacesBridgeZone["new_inst_"+k]={Path:g.BridgeLink}):_.find(funcs.newConfig.normalize(interfacesLanZone),function(i){return i.Path===g.BridgeLink})||(interfacesLanZone.new_inst={Path:g.BridgeLink})}),__autoconf.BR2_PACKAGE_ANWEB_CUSTOM_MALAYSIA_35692&&_.find(_this8.model.Groups,function(g){return"local"===g.Type})&&(_config.Device.Firewall.IPv4.Zones[3].Access=!0,_config.Device.Firewall.IPv6.Zones[3].Access=!0),_.each(_config.Device.Network.Group,function(g){
var group=_.find(_this8.model.Groups,function(_g){return _g.Name+"#"+_g.Type===g.Name});!group||"local"!==group.Type&&"nat"!==group.Type||(g.WAN.order=group.WansOrder,g.WANv6.order=group.Wans6Order)});var diff=funcs.newConfig.makeDiff(config,_config,attrs),tdiff=[];return diff.Device.Network&&diff.Device.Network.Interface&&diff.Device.Network.Interface.Ethernet&&tdiff.push({Device:{Network:{Interface:{Ethernet:diff.Device.Network.Interface.Ethernet}}}}),diff.Device.Network&&diff.Device.Network.Interface&&diff.Device.Network.Interface.Bridge&&(_.each(diff.Device.Network.Interface.Bridge,function(v,k){v.Enable&&tdiff.push({Device:{Network:{Interface:{Bridge:_defineProperty3["default"]({},k,{Enable:v.Enable})}}}}),_.has(v,"MACAddress")&&tdiff.push({Device:{Network:{Interface:{Bridge:_defineProperty3["default"]({},k,{MACAddress:v.MACAddress})}}}}),_.each(v.Members,function(_v,_k){Number(_k)<0&&tdiff.push({Device:{Network:{Interface:{Bridge:_defineProperty3["default"]({},k,{Members:_defineProperty3["default"]({},_k,{Link:_v.Link,Name:_v.Name})})}}}})})}),_.each(diff.Device.Network.Interface.Bridge,function(v,k){_.each(v.Members,function(_v,_k){Number(_k)>0&&tdiff.push({Device:{Network:{Interface:{Bridge:_defineProperty3["default"]({},k,{Members:_defineProperty3["default"]({},_k,{Link:_v.Link,Name:_v.Name})})}}}})})})),diff.Device.Network&&diff.Device.Network.Group&&tdiff.push({Device:{Network:{Group:diff.Device.Network.Group}}}),diff.Device.Network&&diff.Device.Network.IP&&tdiff.push({Device:{Network:{IP:diff.Device.Network.IP}}}),diff.Device.Network&&diff.Device.Network.Server&&(diff.Device.Network.Server.DHCP&&tdiff.push({Device:{Network:{Server:{DHCP:diff.Device.Network.Server.DHCP}}}}),diff.Device.Network.Server.DNS&&tdiff.push({Device:{Network:{Server:{DNS:diff.Device.Network.Server.DNS}}}})),diff.Device.Firewall&&tdiff.push({Device:{Firewall:diff.Device.Firewall}}),cpe.ApplyDifference(tdiff).then(function(){return __autoconf.BR2_PACKAGE_ANWEB_CUSTOM_MALAYSIA_35692&&_.find(this.model.Groups,function(g){return"local"===g.Type})?_promise2["default"].all([cpe.GetParameterValues(["Device.Routing.",paths.group]),cpe.GetParameterAttributes(["Device.Routing.",paths.group])]).then(function(resp){var config=funcs.buildTree(resp[0].result.ParameterList),attrs=funcs.buildTreeAttributes(resp[1].result.ParameterList),_config=funcs.deepClone(config);_.each(_config.Device.Routing.IPv4.Rules,function(r){var group=funcs.fetchBranch(_config,r.Origin);group&&group.Name&&group.Name.match("#")&&"local"===group.Name.split("#")[1]&&(r.Enable=!1)});var diff=funcs.newConfig.makeDiff(config,_config,attrs);return cpe.ApplyDifference(diff)}):_promise2["default"].resolve()})["catch"](function(){return _promise2["default"].reject()})})}function delGroups(keys){var _this9=this;if(keys=_.filter(keys,function(k){return _this9.model.Groups[k]}),!keys.length)return _promise2["default"].resolve();_.each(this.model._lans,function(l){_.find(keys,function(k){return l.BridgeLink===_this9.model.Groups[k].BridgeLink})&&_this9.model.Groups[1].Bridge.push({Name:l.Name,InterfaceLink:l.InterfaceLink})}),_.each(this.model._bridged,function(b){_.find(keys,function(k){return b.BridgeLink===_this9.model.Groups[k].BridgeLink})&&_this9.model.bridgeGroupKey&&_this9.model.Groups[_this9.model.bridgeGroupKey].Bridge.push({Name:b.Name,InterfaceLink:b.InterfaceLink})}),_.each(this.model._wans,function(w,i){if(_.find(keys,function(k){return"local"!==_this9.model.Groups[k].Type&&!!_.find(_this9.model.Groups[k].Wans.concat(_this9.model.Groups[k].Wans6),function(_w){return _w.Name===w.Name})})){var obj={Name:w.Name,Inst:"new_inst"+i};"v4"===w.Type?_this9.model.Groups[1].Wans.push(obj):_this9.model.Groups[1].Wans6.push(obj)}});var bridgeLinks=[];return _.each(keys,function(k){bridgeLinks.push(_this9.model.Groups[k].BridgeLink),delete _this9.model.Groups[k]}),_promise2["default"].all([cpe.GetParameterValues(_.values(paths)),cpe.GetParameterAttributes(_.values(paths))]).then(function(resp){var config=funcs.buildTree(resp[0].result.ParameterList),attrs=funcs.buildTreeAttributes(resp[1].result.ParameterList),_config=toCpe(_this9.model,config);_config.Device.Network.IP=_.pick(funcs.newConfig.normalize(config.Device.Network.IP),function(ip){return!_.find(bridgeLinks,function(l){return ip.LowerLayer===l})}),_config.Device.Firewall.IPv4.Zones=funcs.newConfig.normalize(funcs.deepClone(funcs.fetchBranch(config,paths.firewall+"IPv4.Zones.")));var interfacesLanZone=_config.Device.Firewall.IPv4.Zones[3].Interfaces;_.each(funcs.newConfig.normalize(interfacesLanZone),function(i,k){_.find(_this9.model.Groups,function(g){return g.BridgeLink===i.Path})||delete interfacesLanZone[k]});var bridgeZone=_.find(_config.Device.Firewall.IPv4.Zones,function(z){return"bridge"===z.Name});bridgeZone&&_.each(funcs.newConfig.normalize(bridgeZone.Interfaces),function(i,k){_.find(_this9.model.Groups,function(g){return g.BridgeLink===i.Path})||delete bridgeZone.Interfaces[k]}),_config.Device.Firewall.IPv6.Zones=funcs.newConfig.normalize(funcs.deepClone(funcs.fetchBranch(config,paths.firewall+"IPv6.Zones."))),interfacesLanZone=_config.Device.Firewall.IPv6.Zones[3].Interfaces,_.each(funcs.newConfig.normalize(interfacesLanZone),function(i,k){_.find(_this9.model.Groups,function(g){return g.BridgeLink===i.Path})||delete interfacesLanZone[k]}),_config.Device.Firewall.IPv4.Masquerade=funcs.newConfig.normalize(funcs.deepClone(funcs.fetchBranch(config,paths.firewall+"IPv4.Masquerade."))),_.each(funcs.newConfig.normalize(_config.Device.Firewall.IPv4.Masquerade),function(m,k){_.find(_this9.model.Groups,function(g){return g.BridgeLink===m.Source.Interface})||(_config.Device.Firewall.IPv4.Masquerade[k].Source.Interface=funcs.fetchBranch(config,paths.group+"1.LAN"))}),bridgeZone=_.find(_config.Device.Firewall.IPv6.Zones,function(z){return"bridge"===z.Name}),bridgeZone&&_.each(funcs.newConfig.normalize(bridgeZone.Interfaces),function(i,k){_.find(_this9.model.Groups,function(g){return g.BridgeLink===i.Path})||delete bridgeZone.Interfaces[k]}),__autoconf.BR2_PACKAGE_ANWEB_CUSTOM_MALAYSIA_35692&&!_.find(_this9.model.Groups,function(g){return"local"===g.Type})&&(_config.Device.Firewall.IPv4.Zones[3].Access=!1,_config.Device.Firewall.IPv6.Zones[3].Access=!1);var diff=funcs.newConfig.makeDiff(config,_config,attrs),tdiff=[];return diff.Device.Network&&diff.Device.Network.Group&&(_.each(diff.Device.Network.Group,function(g,k){Number(k)<0&&(g.WAN&&(tdiff.push({Device:{Network:{Group:_defineProperty3["default"]({},-k,{WAN:funcs.deepClone(g.WAN)})}}}),delete g.WAN),tdiff.push({Device:{Network:{Group:_defineProperty3["default"]({},k,g)}}}))}),_.each(diff.Device.Network.Group,function(g,k){Number(k)>0&&tdiff.push({Device:{Network:{Group:_defineProperty3["default"]({},k,g)}}})})),diff.Device.Firewall&&tdiff.push({Device:{Firewall:diff.Device.Firewall}}),diff.Device.Network&&diff.Device.Network.Server&&(diff.Device.Network.Server.DHCP&&tdiff.push({Device:{Network:{Server:{DHCP:diff.Device.Network.Server.DHCP}}}}),diff.Device.Network.Server.DNS&&tdiff.push({Device:{Network:{Server:{DNS:diff.Device.Network.Server.DNS}}}})),diff.Device.Network&&diff.Device.Network.IP&&tdiff.push({Device:{Network:{IP:diff.Device.Network.IP}}}),diff.Device.Network&&diff.Device.Network.Interface&&diff.Device.Network.Interface.Bridge&&(_.each(diff.Device.Network.Interface.Bridge,function(v,k){Number(k)<0&&tdiff.push({Device:{Network:{Interface:{Bridge:_defineProperty3["default"]({},k,diff.Device.Network.Interface.Bridge[k])}}}})}),_.each(diff.Device.Network.Interface.Bridge,function(v,k){Number(k)>0&&tdiff.push({Device:{Network:{Interface:{Bridge:_defineProperty3["default"]({},k,diff.Device.Network.Interface.Bridge[k])}}}})})),cpe.ApplyDifference(tdiff)})}function validation(group,key){return group.Name?_.find(this.model.Groups,function(g,k){return k!==key&&g.Name===group.Name})||"_tech"===group.Name?"ifgroups_error_name_already":void 0:"ifgroups_error_name_empty"}var paths={group:"Device.Network.Group.","interface":"Device.Network.Interface.",connection:"Device.Network.Connection.",firewall:"Device.Firewall.",ip:"Device.Network.IP.",dhcp:"Device.Network.Server.DHCP.",dns:"Device.Network.Server.DNS.","switch":"Device.Switch."};return __autoconf.BR2_PACKAGE_ANWEB_USB_MODEM&&(paths.usb="Device.USB.Connection."),{pull:pull,getGroups:getGroups,getGroup:getGroup,isPulled:function(){return this.pulled},getAllLans:getAllLans,getAllWansGroup:getAllWansGroup,getAllBridged:getAllBridged,getAllBridgedGroup:getAllBridgedGroup,getDefGroup:getDefGroup,pushGroup:pushGroup,delGroups:delGroups,getGroupsList:getGroupsList,getTypesList:getTypesList,validation:validation}}()},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(364)}},function(module,exports,__webpack_require__){"use strict";!function(){function dsysinitToNative(data){var pattern=T({"->":["$data","Filter"],$data:":external",$adblock:["$data",function(d){return funcs.fetchBranch(d,path)}],$usb:["$data",function(d){return _.has(d.Device,"USB")?d.Device.USB.Storage:void 0}],Enabled:["$adblock",function(ab){return ab.Enable}],Path:["$adblock","$usb",function(ab,usb){return usb?ab.Path.replace("/mnt",""):"/tmp"}],TMPPath:["$adblock","$usb",function(ab,usb){return"/tmp"==ab.Path||!usb}],ValidPath:["$adblock",function(ab){return!!_.isEmpty(ab.Path)||ab.ValidPath}],Filter:{"->":!0,"{$item, $key}":["$parent",function(p){return funcs.newConfig.normalize(p.$adblock.Filter)}],__instance:["$key*",function(k){return k}],URL:["$item*",function(i){return i.URL}]}});return pattern.build({$data:data})}function nativeToDsysinit(data){function getPath(path){if(""==path||"/tmp"==path)return path;var hasMNT=path.match(/^\/mnt\//,"")||path.match(/^mnt\//,"");return hasMNT?"/"==path[0]?path:"/"+path:(path="/mnt/"+path,path.replace("//","/"))}var pattern=T({"->":["$data","Device"],$data:":external",Device:{Services:{AdBlock:{"->":["$data","Filter"],$data:["$root",function(r){return r.$data}],Enable:["$data",function(d){return d.Enabled}],Path:["$data",function(d){return d.Enabled?getPath(d.Path):void 0}],Filter:{"->":!0,"{$filter, $key}":["$parent",function(p){return p.$data.Filter}],":":["$filter*","$key*",function(f,k){return f.__instance?f.__instance:"+"+k}],Enable:["$filter*",function(f){return!0}],URL:["$filter*",function(f){return f.URL}]}}}}});return pattern.build({$data:data})}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),path="Device.Services.AdBlock.";module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}}()},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(368)}},function(module,exports,__webpack_require__){"use strict";!function(){"use_strict";function dsysinitToNative(data){function getState(data,tunnel){var result={};if(!tunnel.Enable)return{state:"off",stateText:"wifi_wds_mode_disabled"};if(""==tunnel.IP)switch(tunnel.Status){case"Enabled":return{state:"on",stateText:"ipsec_status_enabled"};case"Enabling":case"Disabling":return{state:"pending",stateText:"ipsec_status_enabling"};case"Disabled":case"Aborted":return{state:"off",stateText:"wifi_wds_mode_disabled"}}var iface="";if(~tunnel.IP.indexOf("Connection"))iface=tunnel.IP;else{var group=funcs.fetchBranch(data,tunnel.IP),order=group.WAN.order;iface=order&&order[0]?group.WAN[order[0]].Link:""}if(""!=iface){var conn=funcs.fetchBranch(data,iface);if(_.has(conn,"StopOnFail")&&conn.StopOnFail)return result.state="disconnected",result.stateText=/\.WiFi\./.test(conn.Interface)?"wan_status_wifi_disconnect":/\.Cellular\./.test(conn.BaseInterface)||conn.Binding&&_.has(conn.Binding,"Modem")?"wan_status_usb_disconnected":"wan_status_cable_disconnected",result;if(_.has(conn,"ConnectionStatusExt")&&!_.isEmpty(conn.ConnectionStatusExt))return result.state="off",result.stateText="Unknown"==conn.ConnectionStatusExt?"ipsec_status_unknown":"wan_status_ppp_"+conn.ConnectionStatusExt.replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase(),result}switch(tunnel.Status){case"Enabled":return{state:"on",stateText:"ipsec_status_enabled"};case"Enabling":case"Disabling":return{state:"pending",stateText:"ipsec_status_enabling"};case"Disabled":case"Aborted":return{state:"off",stateText:"disconnected"}}}function getConnsList(data){function getConns(conns,types,groups){var wanGroup=[];_.each(funcs.newConfig.normalize(groups),function(elem){_.each(funcs.newConfig.normalize(elem.WAN),function(obj){wanGroup.push(obj.Link)})}),wanGroup=_.unique(wanGroup);var output=[];return _.each(types,function(type){var path=paths.conns+type+".",input=funcs.newConfig.normalize(conns[type]);input&&_.each(input,function(elem,inst){var fullPath=path+inst+".";_.contains(wanGroup,fullPath)&&output.push({name:elem.Name,value:fullPath})})}),output}function getGroups(data){var groups=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.groups));return _.map(groups,function(elem,key){return{name:"wan_group "+key,value:paths.groups+key+"."}})}var devMode=funcs.fetchBranch(data,paths.devMode),conns=funcs.fetchBranch(data,paths.conns),groups=funcs.fetchBranch(data,paths.groups),types=["DHCP","Static","PPPoE","L2TP","PPTP"],result=[{name:"st_not_selected",value:""}];return result=result.concat(getConns(conns,types,groups)),result=result.concat("Firewall"!=devMode?{name:"default_gateway",value:paths.groups+"1."}:getGroups(data))}function getBridgeInfo(data,inst,vconfig){var bridges=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.bridge)),tunnelPath=vconfig?paths.vconfig+vconfig.id+".":paths.eogre+inst+".",result={};return _.each(bridges,function(bridge,key){var members=funcs.newConfig.normalize(bridge.Members),memberKey=_.findKey(members,{Link:tunnelPath});memberKey&&(result.memberId=memberKey,result.bridgeId=key)}),_.size(result)?result:void 0}function getVconfig(data,id){var vconfigList=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.vconfig));if(vconfigList){var curVconfig=_.findKey(vconfigList,{LowerLayer:paths.eogre+id+"."});if(curVconfig){var result=vconfigList[curVconfig];return result.id=curVconfig,result}}}var pattern=T({"->":["$data","Tunnels"],$data:":external",Conns:["$data",function(d){return getConnsList(d)}],Tunnels:{"->":!0,$data:["$parent",function(p){return p.$data}],"{$tunnel, $i}":["$data",function(d){return funcs.newConfig.normalize(funcs.fetchBranch(d,paths.eogre))}],__id:["$i*",function(i){return i}],Name:["$tunnel*",function(t){return t.Name}],IP:["$tunnel*",function(t){return t.IP}],PeerIP:["$tunnel*",function(t){return t.PeerIP}],Enable:["$tunnel*",function(t){return t.Enable}],MTU:["$tunnel*",function(t){return t.MTU}],$state:["$data","$tunnel*",function(d,t){return getState(d,t)}],State:["$state*",function(s){return s.state}],StateText:["$state*",function(s){return s.stateText}],$vconfig:["$data","$i*",function(d,i){return getVconfig(d,i)}],$bridge:["$data","$i*","$vconfig",function(d,i,vc){return getBridgeInfo(d,i,vc)}],__bridgeId:["$bridge*",function(b){return b.bridgeId}],__memberId:["$bridge*",function(b){return b.memberId}],Tag:["$vconfig*",function(vc){return!_.isUndefined(vc)}],TagID:["$vconfig*",function(vc){return vc.VID}],TagLink:["$vconfig*",function(vc){return vc.id}]},Ifaces:["$data",function(d){return funcs.newConfig.normalize(funcs.fetchBranch(d,paths.iface))}]});return pattern.build({$data:data})}function nativeToDsysinit(data){function getMembers(data){var bridges=data.Ifaces.Bridge,tunnels=_.map(data.Tunnels,function(tunnel,id){return tunnel.__id||(tunnel.__id="new_inst_"+tunnel.Name),tunnel});if(bridges){var result={};return _.each(bridges,function(br,key){var brTunnels=_.filter(tunnels,function(e){return e.__bridgeId==key||"1"==key&&!e.__bridgeId&&-1!=e.__id.indexOf("new_inst_")}),members={};_.each(funcs.newConfig.normalize(br.Members),function(mem,id){-1==mem.Link.indexOf("EoGRE")&&-1==mem.Link.indexOf("Vconfig")&&(members[id]=mem)}),_.each(brTunnels,function(bt){var memberKey=bt.__memberId?bt.__memberId:"new_member_"+bt.__id,memberLink=bt.Tag?paths.vconfig+(bt.TagLink?bt.TagLink:"new_inst_"+bt.Name)+".":paths.eogre+bt.__id+".";members[memberKey]={Link:memberLink}}),result[key]={Members:members}}),result}}var pattern=T({"->":["$data","Device"],$data:":external",Device:{Network:{Interface:{"->":!0,EoGRE:{"->":!0,"{$tunnel, $i}":["$root",function(r){return r.$data.Tunnels}],":":["$tunnel*","$i*",function(t,i){return t.__id?t.__id:"new_inst_"+t.Name}],Enable:["$tunnel*",function(t){return t.Enable}],Name:["$tunnel*",function(t){return t.Name}],IP:["$tunnel*",function(t){return t.IP}],PeerIP:["$tunnel*",function(t){return t.PeerIP}],MTU:["$tunnel*",function(t){return t.MTU}]},Vconfig:{"->":!0,"{$tunnel, $i}":["$root",function(r){return _.filter(r.$data.Tunnels,function(e){return e.Tag})}],":":["$tunnel*",function(t){return t.TagLink?t.TagLink:"new_inst_"+t.Name}],Enable:["$tunnel*",function(t){return t.Enable}],Name:["$tunnel*",function(t){return t.Name}],LowerLayer:["$tunnel*",function(t){return paths.eogre+(t.__id?t.__id:"new_inst_"+t.Name)+"."}],VID:["$tunnel*",function(t){return t.TagID}]},Bridge:{"->":!0,$data:["$root",function(r){return r.$data}],$return:["$data",function(d){return getMembers(d)}]}}}}});return pattern.build({$data:data})}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),paths={conns:"Device.Network.Connection.",eogre:"Device.Network.Interface.EoGRE.",groups:"Device.Network.Group.",bridge:"Device.Network.Interface.Bridge.",vconfig:"Device.Network.Interface.Vconfig.","switch":"Device.Switch.Switches.",iface:"Device.Network.Interface."};module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}}()},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(370)}},function(module,exports,__webpack_require__){"use strict";!function(){"use_strict";function dsysinitToNative(data){function getState(data,tunnel){var result={};if(!tunnel.Enable)return{state:"off",stateText:"wifi_wds_mode_disabled"};if(""==tunnel.IP)switch(tunnel.Status){case"Enabled":return{state:"on",stateText:"ipsec_status_enabled"};case"Enabling":case"Disabling":return{state:"pending",stateText:"ipsec_status_enabling"};case"Disabled":case"Aborted":return{state:"off",stateText:"wifi_wds_mode_disabled"}}var iface="";if(~tunnel.IP.indexOf("Connection"))iface=tunnel.IP;else{var group=funcs.fetchBranch(data,tunnel.IP),order=group.WAN.order;iface=order&&order[0]?group.WAN[order[0]].Link:""}if(""!=iface){var conn=funcs.fetchBranch(data,iface);if(_.has(conn,"StopOnFail")&&conn.StopOnFail)return result.state="disconnected",result.stateText=/\.WiFi\./.test(conn.Interface)?"wan_status_wifi_disconnect":/\.Cellular\./.test(conn.BaseInterface)||conn.Binding&&_.has(conn.Binding,"Modem")?"wan_status_usb_disconnected":"wan_status_cable_disconnected",result;if(_.has(conn,"ConnectionStatusExt")&&!_.isEmpty(conn.ConnectionStatusExt))return result.state="off",result.stateText="Unknown"==conn.ConnectionStatusExt?"ipsec_status_unknown":"wan_status_ppp_"+conn.ConnectionStatusExt.replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase(),result}switch(tunnel.Status){case"Enabled":return{state:"on",stateText:"ipsec_status_enabled"};case"Enabling":case"Disabling":return{state:"pending",stateText:"ipsec_status_enabling"};case"Disabled":case"Aborted":return{state:"off",stateText:"disconnected"}}}function getConnsList(data){function getConns(conns,types,groups){var wanGroup=[];_.each(funcs.newConfig.normalize(groups),function(elem){_.each(funcs.newConfig.normalize(elem.WAN),function(obj){wanGroup.push(obj.Link)})}),wanGroup=_.unique(wanGroup);var output=[];return _.each(types,function(type){var path=paths.conns+type+".",input=funcs.newConfig.normalize(conns[type]);input&&_.each(input,function(elem,inst){var fullPath=path+inst+".";_.contains(wanGroup,fullPath)&&output.push({name:elem.Name,value:fullPath})})}),output}function getGroups(data){var groups=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.groups));return _.map(groups,function(elem,key){return{name:"wan_group "+key,value:paths.groups+key+"."}})}var devMode=funcs.fetchBranch(data,paths.devMode),conns=funcs.fetchBranch(data,paths.conns),groups=funcs.fetchBranch(data,paths.groups),types=["DHCP","Static","PPPoE","L2TP","PPTP"],result=[{name:"st_not_selected",value:""}];return result=result.concat(getConns(conns,types,groups)),result=result.concat("Firewall"!=devMode?{name:"default_gateway",value:paths.groups+"1."}:getGroups(data))}function getBridgeInfo(data,inst,vconfig){var bridges=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.bridge)),tunnelPath=vconfig?paths.vconfig+vconfig.id+".":paths.eoip+inst+".",result={};return _.each(bridges,function(bridge,key){var members=funcs.newConfig.normalize(bridge.Members),memberKey=_.findKey(members,{Link:tunnelPath});memberKey&&(result.memberId=memberKey,result.bridgeId=key)}),_.size(result)?result:void 0}function getVconfig(data,id){var vconfigList=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.vconfig));if(vconfigList){var curVconfig=_.findKey(vconfigList,{LowerLayer:paths.eoip+id+"."});if(curVconfig){var result=vconfigList[curVconfig];return result.id=curVconfig,result}}}var pattern=T({"->":["$data","Tunnels"],$data:":external",Conns:["$data",function(d){return getConnsList(d)}],Tunnels:{"->":!0,$data:["$parent",function(p){return p.$data}],"{$tunnel, $i}":["$data",function(d){return funcs.newConfig.normalize(funcs.fetchBranch(d,paths.eoip))}],__id:["$i*",function(i){return i}],Name:["$tunnel*",function(t){return t.Name}],IP:["$tunnel*",function(t){return t.IP}],PeerIP:["$tunnel*",function(t){return t.PeerIP}],Enable:["$tunnel*",function(t){return t.Enable}],MTU:["$tunnel*",function(t){return t.MTU}],KeepaliveInterval:["$tunnel*",function(t){return t.KeepaliveInterval}],KeepaliveRetries:["$tunnel*",function(t){return t.KeepaliveRetries}],TunnelID:["$tunnel*",function(t){return t.TunnelID}],MACAddress:["$tunnel*",function(t){return t.MACAddress}],$state:["$data","$tunnel*",function(d,t){return getState(d,t)}],State:["$state*",function(s){return s.state}],StateText:["$state*",function(s){return s.stateText}],$vconfig:["$data","$i*",function(d,i){return getVconfig(d,i)}],$bridge:["$data","$i*","$vconfig",function(d,i,vc){return getBridgeInfo(d,i,vc)}],__bridgeId:["$bridge*",function(b){return b.bridgeId}],__memberId:["$bridge*",function(b){return b.memberId}],Tag:["$vconfig*",function(vc){return!_.isUndefined(vc)}],TagID:["$vconfig*",function(vc){return vc.VID}],TagLink:["$vconfig*",function(vc){return vc.id}]},Ifaces:["$data",function(d){return funcs.newConfig.normalize(funcs.fetchBranch(d,paths.iface))}]});return pattern.build({$data:data})}function nativeToDsysinit(data){function getMembers(data){var bridges=data.Ifaces.Bridge,tunnels=_.map(data.Tunnels,function(tunnel,id){return tunnel.__id||(tunnel.__id="new_inst_"+tunnel.Name),tunnel});if(bridges){var result={};return _.each(bridges,function(br,key){var brTunnels=_.filter(tunnels,function(e){return e.__bridgeId==key||"1"==key&&!e.__bridgeId&&-1!=e.__id.indexOf("new_inst_")}),members={};_.each(funcs.newConfig.normalize(br.Members),function(mem,id){-1==mem.Link.indexOf("EoIP")&&-1==mem.Link.indexOf("Vconfig")&&(members[id]=mem)}),_.each(brTunnels,function(bt){var memberKey=bt.__memberId?bt.__memberId:"new_member_"+bt.__id,memberLink=bt.Tag?paths.vconfig+(bt.TagLink?bt.TagLink:"new_inst_"+bt.Name)+".":paths.eoip+bt.__id+".";members[memberKey]={Link:memberLink}}),result[key]={Members:members}}),result}}var pattern=T({"->":["$data","Device"],$data:":external",Device:{Network:{Interface:{"->":!0,EoIP:{"->":!0,"{$tunnel, $i}":["$root",function(r){return r.$data.Tunnels}],":":["$tunnel*","$i*",function(t,i){return t.__id?t.__id:"new_inst_"+t.Name}],Enable:["$tunnel*",function(t){return t.Enable}],Name:["$tunnel*",function(t){return t.Name}],IP:["$tunnel*",function(t){return t.IP}],PeerIP:["$tunnel*",function(t){return t.PeerIP}],MTU:["$tunnel*",function(t){return t.MTU}],TunnelID:["$tunnel*",function(t){return t.TunnelID}],KeepaliveInterval:["$tunnel*",function(t){return t.KeepaliveInterval}],KeepaliveRetries:["$tunnel*",function(t){return t.KeepaliveRetries}],MACAddress:["$tunnel*",function(t){return t.MACAddress}]},Vconfig:{"->":!0,"{$tunnel, $i}":["$root",function(r){return _.filter(r.$data.Tunnels,function(e){return e.Tag})}],":":["$tunnel*",function(t){return t.TagLink?t.TagLink:"new_inst_"+t.Name}],Enable:["$tunnel*",function(t){return t.Enable}],Name:["$tunnel*",function(t){return t.Name}],LowerLayer:["$tunnel*",function(t){return paths.eoip+(t.__id?t.__id:"new_inst_"+t.Name)+"."}],VID:["$tunnel*",function(t){return t.TagID}]},Bridge:{"->":!0,$data:["$root",function(r){return r.$data}],$return:["$data",function(d){return getMembers(d)}]}}}}});return pattern.build({$data:data})}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),paths={conns:"Device.Network.Connection.",eoip:"Device.Network.Interface.EoIP.",groups:"Device.Network.Group.",bridge:"Device.Network.Interface.Bridge.",vconfig:"Device.Network.Interface.Vconfig.","switch":"Device.Switch.Switches.",iface:"Device.Network.Interface."};module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}}()},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(373)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getStatus(state){switch(state){case"Enabled":return"on";case"Aborted":case"Disabled":return"off";case"Enabling":case"Disabling":return"pending"}}function getStatusText(state){switch(state){case"Disabled":return"wifi_mac_mode_disabled";default:return"ipsec_status_"+state.toLowerCase()}}function getLans(data){var groups=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.group)),lans=_.pluck(groups,"LAN");return lans=_.uniq(_.compact(lans)),_.map(lans,function(elem){var iface=funcs.fetchBranch(data,elem);return{Name:iface.Name||iface.Ifname,Value:elem}})}function getWans(data){function getRealConn(conns,instUsb){conns=funcs.newConfig.normalize(conns);for(var i in conns)if(/PPPoE|DHCP\./.test(conns[i].Link))return conns[i].Link;return paths.usbConns+instUsb+"."}var conns=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.conns)),types=["DHCP","Static","PPPoE","PPTP","L2TP"],result=[],usbConns=_.has(data.Device,"USB")?funcs.newConfig.normalize(funcs.fetchBranch(data,paths.usbConns)):void 0;_.each(types,function(elem){var connType=funcs.newConfig.normalize(conns[elem]);_.each(connType,function(obj,key){var connPath=paths.conns+elem+"."+key+".";if(usbConns){var usbIface=_.find(usbConns,function(usb){var connections=_.pluck(funcs.newConfig.normalize(usb.Connections),"Link");return _.contains(connections,connPath)});if(usbIface)return}if("PPPoE"==elem){var pppSettings=funcs.fetchBranch(data,obj.PPPConfiguration);if(pppSettings.IPv6Only)return}result.push({Name:obj.Name,Value:paths.conns+elem+"."+key+"."})})});for(var i in usbConns){var elem=usbConns[i];result.push({Name:elem.Name,Value:getRealConn(elem.Connections,i),LinkUSB:paths.usbConns+i+"."})}return result}var pattern=T({"->":["$data","Rules"],$data:":external",Rules:{"->":["$rule","WAN"],"{$rule, $i}":["$parent",function(p){return funcs.newConfig.normalize(funcs.fetchBranch(p.$data,paths.trafficBalance))}],__id:["$i*",function(i){return i}],Enable:["$rule*",function(r){return r.Enable}],InitEnable:["$rule*",function(r){return r.Enable}],LAN:["$rule*",function(r){return r.LAN}],WAN:{"->":!0,"{$wan, $id}":["$parent",function(p){return p.$rule?funcs.newConfig.normalize(p.$rule.WAN):void 0}],__id:["$id*",function(id){return id}],Link:["$wan*",function(w){return w.Link}],Weight:["$wan*",function(w){return w.Weight}],WeightType:["$wan*",function(w){return 0==w.Weight?"auto":"manual"}]},Status:["$rule*",function(r){return getStatus(r.Status)}],StatusText:["$rule*",function(r){return getStatusText(r.Status)}]},LAN:["$data",function(d){return getLans(d)}],WAN:["$data",function(d){return getWans(d)}]});return pattern.build({$data:data})}function nativeToDsysinit(data){function getLink(wans,link){for(var i in wans){var elem=wans[i];if(elem.Value==link&&elem.LinkUSB)return elem.LinkUSB}return link}var pattern=T({"->":["$data","Device"],$data:":external",Device:{Network:{LoadBalancing:{"->":["$rule","WAN"],"{$rule, $i}":["$root",function(r){return r.$data.Rules}],":":["$rule*","$i*",function(b,i){return b.__id?b.__id:"new_inst_"+i}],Enable:["$rule*",function(r){return r.Enable}],LAN:["$rule*",function(r){return r.LAN}],WAN:{"->":!0,"{$wan, $id}":["$parent",function(p){return p.$rule?p.$rule.WAN:void 0}],":":["$wan*","$id*",function(w,id){return w.__id?w.__id:"new_wan_"+id}],Link:["$root","$wan*",function(r,w){return getLink(r.$data.WAN,w.Link)}],Weight:["$wan*",function(w){return"auto"==w.WeightType?0:w.Weight}]}}}}});return pattern.build({$data:data})}var _=__webpack_require__(4),T=__webpack_require__(122).T,funcs=__webpack_require__(5),paths={trafficBalance:"Device.Network.LoadBalancing.",conns:"Device.Network.Connection.",group:"Device.Network.Group.",usbConns:"Device.USB.Connection."};module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports={Helper:__webpack_require__(376),converter:__webpack_require__(377)}},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function Chilli(config,attrs){function getData(){return config?config:{}}function getRule(index){function getTemplate(){var chilliAttrs=funcs.fetchBranch(attrs,path+"#template.");return{Enable:!0,Network:"",DHCPLease:chilliAttrs.DHCPLease["default"],Iface:"",LogLevel:chilliAttrs.LogLevel["default"],MACAuth:{Enable:!1,Password:"",Suffix:""},Radius:{AccountingPort:chilliAttrs.RADIUS.AccountingPort["default"],AuthPort:chilliAttrs.RADIUS.AuthenticationPort["default"],PrimaryServer:"",SecondaryServer:"",Secret:""},UAM:_defineProperty3["default"]({AuthPort:chilliAttrs.UAM.AuthPort["default"],Homepage:"",NoChallenge:!1,Secret:"",WalledGarden:""},"Secret",""),PingEnable:!1}}return!_.isUndefined(index)&&config?config.Servers[index]:getTemplate()}function getLogLevelList(){for(var chilliAttrs=funcs.fetchBranch(attrs,path+"#template."),result=[],i=0;i<=chilliAttrs.LogLevel.maxInclusive;++i)result.push(i);return result}function getIfaceList(){return config.IfacesList}function applyRule(rule,index){return _.isUndefined(index)?config.Servers.push(rule):config.Servers[index]=rule,config}function checkUnique(value,index){var input=funcs.deepClone(config.Servers);return _.isUndefined(index)||(input=_.omit(input,index)),_.every(input,function(elem){return elem.Iface!=value})}function removeRules(keys){return _.each(keys.sort().reverse(),function(key){config.Servers.splice(key,1)}),config}var config=funcs.deepClone(config),attrs=funcs.deepClone(attrs),path="Device.Network.Server.Chilli.";return{getData:getData,getRule:getRule,getLogLevelList:getLogLevelList,getIfaceList:getIfaceList,checkUnique:checkUnique,applyRule:applyRule,removeRules:removeRules}}var _defineProperty2=__webpack_require__(169),_defineProperty3=_interopRequireDefault(_defineProperty2),_=__webpack_require__(4),funcs=__webpack_require__(5);module.exports=Chilli},function(module,exports,__webpack_require__){"use strict";!function(){function dsysinitToNative(data){function getIfacesList(data){var ifaces=funcs.fetchBranch(data,paths.iface);if(!ifaces)return[];var types=["WiFi","Ethernet"],groups=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.group)),result=_.map(groups,function(elem){var ifaceElem=funcs.fetchBranch(data,elem.LAN),groupName=elem.Name.replace(/#\w+$/,"");

return{value:elem.LAN,name:ifaceElem.Name||groupName||ifaceElem.Ifname}});return _.each(types,function(type){_.each(funcs.newConfig.normalize(ifaces[type]),function(elem,key){if("WiFi"==type&&!elem.Bridged&&"ap"==elem.Type||"Ethernet"==type){var name=elem.Name||elem.Ifname;if("Ethernet"==type){var vlan=funcs.fetchBranch(data,elem.LowerLayer);name=vlan.Name||name}var path=elem.Bridged?elem.BridgeLink:paths.iface+type+"."+key+".";if(!_.find(result,{value:path})){var obj={value:path,name:name};result.push(obj)}}})}),_.uniq(result)}function getIPAddress(ip){return ip?ip.split("/")[0]:""}function getSubnetMask(ip){return ip?funcs.ipv4.mask["long"](ip.split("/")[1]):""}function getStatus(state){switch(state){case"Enabled":return"on";case"Aborted":case"Disabled":return"off";case"Enabling":case"Disabling":return"pending"}}function getStatusText(state){switch(state){case"Disabled":return"wifi_mac_mode_disabled";default:return"ipsec_status_"+state.toLowerCase()}}function getZone(fw){if(fw){var zones=funcs.newConfig.normalize(fw.Zones),zoneKey=_.findKey(zones,{Type:"ipv4",Name:"coovachilli"});return zoneKey}}function getPolicy(fw,zoneId){if(fw&&zoneId){var policys=funcs.newConfig.normalize(fw.Policy),wanZoneId=_.findKey(fw.Zones,{Name:"wan"}),zonePath=paths.fw+"Zones.",policyKey=_.findKey(policys,{Source:zonePath+zoneId+".",Dest:zonePath+wanZoneId+"."});return policyKey}}function getZoneInterface(fw,zoneId,id){if(fw&&zoneId){var zoneIfaces=funcs.newConfig.normalize(fw.Zones[zoneId].Interfaces),chilliPath=paths.chilli+id+".",key=_.findKey(zoneIfaces,{Path:chilliPath});return key}}function getMasq(fw,id){if(fw){var masqs=funcs.newConfig.normalize(fw.Masquerade),chilliPath=paths.chilli+id+".",key=_.findKey(masqs,function(elem){return elem.Source.Interface==chilliPath});return key}}function getPingRule(fw,id){if(fw){var rules=funcs.newConfig.normalize(fw.Rules),chilliPath=paths.chilli+id+".",key=_.findKey(rules,function(elem){var proto=funcs.newConfig.normalize(elem.Proto);return elem.Source.Iface==chilliPath&&elem.Dest.Zone==paths.fw+"Zones.1."&&_.size(proto)>0&&proto[1]&&"icmp"==proto[1].Value});return key}}var pattern=T({"->":["$chilli","$fw","fwZone","Servers"],$data:":external",$chilli:["$data",function(d){return funcs.newConfig.normalize(funcs.fetchBranch(d,paths.chilli))}],$fw:["$data",function(d){return funcs.fetchBranch(d,paths.fw)}],fwZone:["$fw*",function(fw){return getZone(fw)}],fwPolicy:["$fw*","fwZone*",function(fw,z){return getPolicy(fw,z)}],Servers:{"->":["$server","Radius","MACAuth","UAM"],"{$server, $i}":["$parent",function(p){return p.$chilli}],__id:["$i*",function(i){return i}],Enable:["$server*",function(s){return s.Enable}],DHCPLease:["$server*",function(s){return s.DHCPLease}],LogLevel:["$server*",function(s){return s.LogLevel}],Iface:["$server*",function(s){return s.Interface}],NetworkIP:["$server*",function(s){return getIPAddress(s.NetworkPrefix)}],NetworkMask:["$server*",function(s){return getSubnetMask(s.NetworkPrefix)}],Status:["$server*",function(s){return getStatus(s.Status)}],StatusText:["$server*",function(s){return getStatusText(s.Status)}],MACAuth:{"->":!0,$server:["$parent",function(p){return p.$server?p.$server.MACAuthentication:void 0}],Enable:["$server*",function(s){return s.Enable}],Password:["$server*",function(s){return s.Password}],Suffix:["$server*",function(s){return s.Suffix}]},Radius:{"->":!0,$server:["$parent",function(p){return p.$server?p.$server.RADIUS:void 0}],AccountingPort:["$server*",function(s){return s.AccountingPort}],AuthPort:["$server*",function(s){return s.AuthenticationPort}],PrimaryServer:["$server*",function(s){return s.PrimaryServer}],SecondaryServer:["$server*",function(s){return s.SecondaryServer}],Secret:["$server*",function(s){return s.Secret}],NASID:["$server*",function(s){return s.NASID}],LocationID:["$server*",function(s){return s.LocationID}]},UAM:{"->":!0,$server:["$parent",function(p){return p.$server?p.$server.UAM:void 0}],AuthPort:["$server*",function(s){return s.AuthPort}],Homepage:["$server*",function(s){return s.Homepage}],NoChallenge:["$server*",function(s){return s.NoChallenge}],Server:["$server*",function(s){return s.Server}],Secret:["$server*",function(s){return s.Secret}],WalledGarden:["$server*",function(s){return s.WalledGarden}]},fwZoneInterfaces:["$parent","$i*",function(p,i){return getZoneInterface(p.$fw,p.fwZone,i)}],fwMasq:["$parent","$i*",function(p,i){return getMasq(p.$fw,i)}],Ping:["$parent","$i*",function(p,i){return getPingRule(p.$fw,i)}],PingEnable:["Ping",function(p){return!_.isUndefined(p)}]},IfacesList:["$data",function(d){return getIfacesList(d)}]});return pattern.build({$data:data})}function nativeToDsysinit(data){function getNetworkPrefix(data){return data.NetworkIP+"/"+funcs.ipv4.mask["short"](data.NetworkMask)}function getRules(servers){return _.chain(servers).map(function(elem,id){return elem.key=elem.__id?elem.__id:"new_inst_"+id,elem}).filter(function(elem){return elem.PingEnable}).value()}function getZone(data){function getIfaces(data){var output={};return _.each(data.Servers,function(elem,key){var ifaceId=elem.fwZoneInterfaces?elem.fwZoneInterfaces:"new_inst_"+key;output[ifaceId]={Path:paths.chilli+(elem.__id?elem.__id:"new_inst_"+key)+"."}}),output}if(!data.Servers.length)return{};var result={},zoneId=data.fwZone?data.fwZone:"new_zone";return result[zoneId]={Type:"ipv4",Name:"coovachilli",Interfaces:getIfaces(data)},result}function getPolicy(data){if(!data.Servers.length)return{};var result={},policyId=data.fwPolicy?data.fwPolicy:"new_policy",zoneId=data.fwZone?data.fwZone:"new_zone";return result[policyId]={Policy:"ACCEPT",Dest:paths.fw+"Zones.2.",Source:paths.fw+"Zones."+zoneId+"."},result}var pattern=T({"->":["$data","Device"],$data:":external",Device:{"->":!0,Network:{Server:{Chilli:{"->":["$server","MACAuthentication","RADIUS","UAM"],"{$server, $i}":["$root",function(r){return r.$data.Servers}],":":["$server*","$i*",function(s,i){return s.__id?s.__id:"new_inst_"+i}],DHCPLease:["$server*",function(s){return s.DHCPLease}],Enable:["$server*",function(s){return s.Enable}],Interface:["$server*",function(s){return s.Iface}],LogLevel:["$server*",function(s){return s.LogLevel}],NetworkPrefix:["$server*",function(s){return getNetworkPrefix(s)}],MACAuthentication:{"->":!0,$server:["$parent",function(p){return p.$server?p.$server.MACAuth:void 0}],Enable:["$server*",function(s){return s.Enable}],Password:["$server*",function(s){return s.Password}],Suffix:["$server*",function(s){return s.Suffix}]},RADIUS:{"->":!0,$server:["$parent",function(p){return p.$server?p.$server.Radius:void 0}],PrimaryServer:["$server*",function(s){return s.PrimaryServer}],SecondaryServer:["$server*",function(s){return s.SecondaryServer}],Secret:["$server*",function(s){return s.Secret}],AccountingPort:["$server*",function(s){return s.AccountingPort}],AuthenticationPort:["$server*",function(s){return s.AuthenticationPort}],NASID:["$server*",function(s){return s.NASID}]},UAM:{"->":!0,$server:["$parent",function(p){return p.$server?p.$server.UAM:void 0}],AuthPort:["$server*",function(s){return s.AuthPort}],Secret:["$server*",function(s){return s.Secret}],NoChallenge:["$server*",function(s){return s.NoChallenge}],Server:["$server*",function(s){return s.Server}],Homepage:["$server*",function(s){return s.Homepage}],WalledGarden:["$server*",function(s){return s.WalledGarden.replace(/\s+/g,"")}]}}}},Firewall:{IPv4:{"->":!0,Zones:["$root",function(r){return getZone(r.$data)}],Policy:["$root",function(r){return getPolicy(r.$data)}],Masquerade:{"->":["$server","$i","Source","Dest"],"{$server, $i}":["$root",function(r){return r.$data.Servers}],":":["$server*","$i*",function(s,i){return s.fwMasq?s.fwMasq:"new_inst_"+i}],Enable:["$server*",function(s){return s.Enable}],Source:{"->":!0,Interface:["$parent",function(p){return p.$server?paths.chilli+(p.$server.__id?p.$server.__id:"new_inst_"+p.$i)+".":void 0}]},Dest:{"->":!0,Interface:["$parent",function(p){return p.$server?"Device.Network.Group.1.":void 0}]}},Rules:{"->":["?","$server","Source"],"{$server, $i}":["$root",function(r){return getRules(r.$data.Servers)}],":":["$server*","$i*",function(s,i){return s.Ping?s.Ping:"new_inst_"+i}],Action:"ACCEPT",Enable:["$server*",function(s){return s.Enable}],Proto:{"->":!0,":":1,Value:"icmp"},Pattern:"ICMP",Dest:{"->":!0,Zone:paths.fw+"Zones.1."},Source:{"->":!0,Zone:["$root",function(r){return paths.fw+"Zones."+(r.$data.fwZone?r.$data.fwZone:"new_zone")+"."}],Iface:["$parent",function(p){return p.$server?paths.chilli+p.$server.key+".":void 0}]}}}}}});return pattern.build({$data:data})}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),paths={chilli:"Device.Network.Server.Chilli.",iface:"Device.Network.Interface.",group:"Device.Network.Group.",fw:"Device.Firewall.IPv4."};module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}}()},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(379)}},function(module,exports,__webpack_require__){"use strict";function dsysinitToNative(data){function getKey(modem){var modemId=modem?modem.match(/\.\d+\.$/g,""):void 0;return modemId?Number(modemId[0].replace(/\./g,"")):""}var pattern=T({"->":["$data","$dwp","NetInfo"],$data:":external",$dwp:["$data",function(d){return funcs.fetchBranch(d,paths.dwp)}],$uptime:["$data",function(d){return funcs.fetchBranch(d,paths.uptime)}],Enable:["$dwp",function(d){return d.Enable}],RemoteAddress:["$dwp",function(d){return d.RemoteAddress}],RemotePort:["$dwp",function(d){return d.RemotePort}],APN:["$dwp",function(d){return d.APN}],Status:["$dwp",function(d){return d.Status}],Always:["$dwp",function(d){return d.Always}],Connect:["$dwp",function(d){return d.Connect}],IPFamily:["$dwp",function(d){return d.IPFamily}],$inetConn:["$dwp","$data",function(dwp,d){return funcs.fetchBranch(d,dwp.InternetConnection)}],ConnectionTime:["$uptime*","$inetConn*",function(u,ic){return u&&!_.isUndefined(ic.ConnectTimeStamp)?u-ic.ConnectTimeStamp:void 0}],SystemUptime:["$dwp",function(d){return d.Uptime}],NetInfo:{"->":["$activeSIM","PIN"],$data:["$parent",function(p){return p.$data}],$dwp:["$parent",function(p){return p.$dwp}],Mode:["$dwp",function(d){return d.Mode}],LTEBand:["$dwp",function(d){return d.LTEBand+(d.ScellBand&&!_.isEmpty(d.ScellBand)?", "+d.ScellBand:"")}],PSState:["$dwp",function(d){return d.PSState}],TxPower:["$dwp",function(d){return d.TxPower}],CellID:["$dwp",function(d){return d.CellID}],RSRP:["$dwp",function(d){return d.RSRP}],RSRQ:["$dwp",function(d){return d.RSRQ}],RSSI:["$dwp",function(d){return d.RSSI}],SINR:["$dwp",function(d){return d.SINR}],TAC:["$dwp",function(d){return d.TAC}],Modem:["$dwp",function(d){return d.Modem}],ModemKey:["$dwp",function(d){return getKey(d.Modem)}],Network:["$dwp",function(d){return d.SystemMode+(d.ScellBand&&!_.isEmpty(d.ScellBand)?"+":"")}],PRxMRSRP:["$dwp",function(d){return d.PRxMRSRP&&d.PRxMRSRP.split(",")[0]}],PRxDRSRP:["$dwp",function(d){return d.PRxDRSRP&&d.PRxDRSRP.split(",")[0]}],SRxMRSRP:["$dwp",function(d){return d.SRxMRSRP&&d.SRxMRSRP.split(",")[0]}],SRxDRSRP:["$dwp",function(d){return d.SRxDRSRP&&d.SRxDRSRP.split(",")[0]}],PccRxMRSSI:["$dwp",function(d){return d.PccRxMRSSI&&d.PccRxMRSSI.split(",")[0]}],PccRxDRSSI:["$dwp",function(d){return d.PccRxDRSSI&&d.PccRxDRSSI.split(",")[0]}],SccRSSI:["$dwp",function(d){return d.SccRSSI&&d.SccRSSI.split(",")[0]}],SccRxDRSSI:["$dwp",function(d){return d.SccRxDRSSI&&d.SccRxDRSSI.split(",")[0]}],$modem:["$data","$dwp",function(data,d){return""!=d.Modem?funcs.fetchBranch(data,d.Modem):void 0}],IMEI:["$modem*",function(m){return m.IMEI}],Model:["$modem*",function(m){return m.Model}],Revision:["$modem*",function(m){return m.Revision}],Vendor:["$modem*",function(m){return m.Vendor}],ActiveSIM:["$modem*",function(m){return m.ActiveSIM}],$activeSIM:["$modem*",function(m){return m.SIM[m.ActiveSIM]}],IMSI:["$activeSIM*",function(s){return s.IMSI}],PIN:{"->":!0,$pin:["$parent",function(p){return p.$activeSIM?p.$activeSIM.PIN:void 0}],Status:["$pin*",function(p){return p.Status}],Locked:["$pin*",function(p){return p.Locked}],PIN:["$pin*",function(p){return p.PINLeft}],PUK:["$pin*",function(p){return p.PUKLeft}]},Operator:["$modem*",function(m){return m.Cell.Operator}]}});return pattern.build({$data:data})}var _=__webpack_require__(4),T=__webpack_require__(122).T,funcs=__webpack_require__(5),paths={dwp:"Device.USB.ODUControl.",uptime:"Device.DeviceInfo.Uptime"};module.exports={dsysinitToNative:dsysinitToNative}},function(module,exports){module.exports=function(){}},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(383)}},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}var _keys=__webpack_require__(78),_keys2=_interopRequireDefault(_keys);!function(){function dsysinitToNative(data,attrs){function getVrrp(data,attrs){var vrrpSettings=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.vrrp)),vrrpAttrs=attrs?funcs.fetchBranch(attrs,paths.vrrp+"#template."):{},result={};if(_.size(vrrpSettings)){var key=_.findKey(vrrpSettings,function(s){return!_.isEmpty(s.Interface)});result=vrrpSettings[key],result.inst=key;var ipaddr=getIPAddrInfo(vrrpSettings[key].IPAddresses);ipaddr&&(result.instIP=ipaddr.inst,result.IPAddress=ipaddr.ip)}else _.each(vrrpAttrs,function(elem,key){if(_.has(elem,"default"))if("Interface"==key){var ifaces=getIfaces(data);result[key]=ifaces[0].link}else result[key]=elem["default"];else"IPAddresses"==key&&(result.IPAddress="")});return result}function getIfaces(data){var devMode=funcs.fetchBranch(data,paths.devMode),result=[];if("Firewall"==devMode)result=getInterfacesFirewall(data);else{var dhcp=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.dhcp));_.each(dhcp,function(elem){_.isEmpty(elem.Interface)||result.push({name:funcs.fetchBranch(data,elem.Interface).Name,link:elem.Interface})})}return result}function getInterfacesFirewall(data){function _mapInterfaces(startPath,type){var path=startPath+type+".",input=funcs.fetchBranch(data,path);return input=funcs.newConfig.normalize(input),"DHCPv6"==type&&(input=_.omit(input,function(elem,inst){return/Connection/.test(elem.Interface)||/Cellular/.test(elem.Interface)})),_.map(input,function(iface,inst){return{name:iface.Name||iface.Ifname||null,link:path+inst+"."}})}var inputIfaces=funcs.fetchBranch(data,paths["interface"]),inputConns=funcs.fetchBranch(data,paths.connection),interfaces=_.chain(inputIfaces).pick("Bridge").map(function(e,type){return _mapInterfaces(paths["interface"],type)}).flatten().value(),connections=_.chain(inputConns).omit("GRE").map(function(e,type){return _mapInterfaces(paths.connection,type)}).flatten().value();return interfaces.concat(connections)}function getIPAddr(ip){if(_.isEmpty(ip))return"";var addr=ip.split("/");return addr[0]?addr[0]:""}function getMask(ip){if(_.isEmpty(ip))return"";var addr=ip.split("/");return addr[1]?funcs.ipv4.mask["long"](addr[1]):""}function getIPAddrInfo(addrs){var addrKey=_.findKey(addrs,function(a){return!_.isEmpty(a.IPAddress)}),result={};return result.inst=addrKey,result.ip=addrs[addrKey].IPAddress,result}function getConns(data){function getGroups(data){var gr=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.group)),result=[];for(var i in gr){var obj={link:paths.group+i+".",type:"group",name:1==_keys2["default"](gr).length?"default_gateway":"wan_group "+i};result.push(obj)}return result}function getConns(data){var connList=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.connection)),result=[],ignoreTypes=["IPsec","GRE","IPIP6","NAT64","SIT","Teredo"];for(var i in connList)if(!ignoreTypes.find(function(e){return e==i}))for(var key in funcs.newConfig.normalize(connList[i])){var obj={link:paths.connection+i+"."+key+".",type:"conn",name:connList[i][key].Name};result.push(obj)}return result}var groups=getGroups(data),conns=getConns(data);return groups.concat(conns)}var pattern=T({"->":["$data","$vrrp","Settings","Ifaces"],$data:":external",$attrs:":external",$vrrp:["$data","$attrs",function(d,a){return getVrrp(d,a)}],Settings:{"->":!0,$vrrp:["$parent",function(p){return p.$vrrp}],inst:["$vrrp",function(v){return v.inst}],AdvertisementInterval:["$vrrp",function(v){return v.AdvertisementInterval}],Auth:["$vrrp",function(v){return v.Auth}],Enable:["$vrrp",function(v){return v.Enable}],HandleVirtualMAC:["$vrrp",function(v){return v.HandleVirtualMAC}],HexKey:["$vrrp",function(v){return v.HexKey}],Interface:["$vrrp",function(v){return v.Interface}],PreemptionMode:["$vrrp",function(v){return v.PreemptionMode}],Priority:["$vrrp",function(v){return v.Priority}],State:["$vrrp",function(v){return v.State}],Status:["$vrrp",function(v){return v.Status}],VRID:["$vrrp",function(v){return v.VRID}],instIP:["$vrrp",function(v){return v.instIP}],IPAddress:["$vrrp",function(v){return getIPAddr(v.IPAddress)}],Mask:["$vrrp",function(v){return getMask(v.IPAddress)}],CurrentPriority:["$vrrp",function(v){return v.CurrentPriority}],ObjectTrackingEnable:["$vrrp",function(v){return v.ObjectTrackingEnable}],ObjectTrackingLink:["$vrrp",function(v){return v.ObjectTrackingLink}]},Ifaces:{"->":!0,"{$interface}":["$parent",function(p){return getIfaces(p.$data)}],name:["$interface*",function(l){return l.name}],value:["$interface*",function(l){return l.link}]},Conns:{"->":!0,"{$conns}":["$parent",function(p){return getConns(p.$data)}],name:["$conns*",function(c){return c.name}],value:["$conns*",function(c){return c.link}]}});return pattern.build({$data:data,$attrs:attrs})}function nativeToDsysinit(data){var pattern=T({"->":["$data","Device"],$data:":external",Device:{Services:{VRRP:{"->":["$vrrp","IPAddresses"],$vrrp:["$root",function(r){return r.$data}],":":["$vrrp",function(v){return v.inst?v.inst:"new_inst"}],AdvertisementInterval:["$vrrp",function(v){return v.AdvertisementInterval}],Auth:["$vrrp",function(v){return v.Auth}],Enable:["$vrrp",function(v){return v.Enable}],HandleVirtualMAC:["$vrrp",function(v){return v.HandleVirtualMAC}],HexKey:["$vrrp",function(v){return"none"!=v.Auth?v.HexKey:void 0}],Interface:["$vrrp",function(v){return v.Interface}],PreemptionMode:["$vrrp",function(v){return v.PreemptionMode}],Priority:["$vrrp",function(v){return v.Priority}],VRID:["$vrrp",function(v){return v.VRID}],IPAddresses:{"->":!0,$vrrp:["$parent",function(p){return p.$vrrp}],":":["$vrrp",function(v){return v.instIP?v.instIP:"new_ip"}],IPAddress:["$vrrp",function(v){return v.IPAddress+"/"+funcs.ipv4.mask["short"](v.Mask)}]},ObjectTrackingEnable:["$vrrp",function(v){return v.ObjectTrackingEnable}],ObjectTrackingLink:["$vrrp",function(v){return v.ObjectTrackingEnable?v.ObjectTrackingLink:""}]}}}});return pattern.build({$data:data})}var T=__webpack_require__(122).T,_=__webpack_require__(4),funcs=__webpack_require__(5),paths={vrrp:"Device.Services.VRRP.",connection:"Device.Network.Connection.","interface":"Device.Network.Interface.",dhcp:"Device.Network.Server.DHCP.",devMode:"Device.DeviceInfo.DeviceMode",group:"Device.Network.Group."};module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}}()},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(385)}},function(module,exports,__webpack_require__){"use strict";!function(){function dsysinitToNative(data,attrs){function getVersions(){var result=["IPv4"];return __autoconf.BR2_PACKAGE_ANWEB_IPV6&&result.push("IPv6"),result}function getConnectionsList(data,version){var output=[],group=funcs.fetchBranch(data,paths.group+"1."),wanGroups="IPv4"==version?group.WAN:group.WANv6,orders=wanGroups.order;for(var inx in orders){var inst=orders[inx],link=wanGroups[inst].Link,connCheck=wanGroups[inst].ConnectivityCheckEnable,conn=funcs.fetchBranch(data,link);output.push({Name:conn&&conn.Name?conn.Name:"",Value:inst,Order:inx,Check:connCheck})}return output}var pattern=T({"->":["$data","$attrs","$connCheck","ConnCheck","Connections"],$data:":external",$attrs:":external",$connCheck:["$data",function(d){return funcs.fetchBranch(d,paths.connCheck)}],$failover:["$data",function(d){return funcs.fetchBranch(d,paths.group+"1.")}],FailoverEnable:["$failover*",function(f){return f.FailoverEnable}],ConnCheck:{"->":["$connCheck","Hosts","MinMax"],$connCheck:["$parent",function(p){return p.$connCheck}],Enable:["$connCheck*",function(cc){return cc.Enable}],PingRetries:["$connCheck*",function(cc){return cc.PingRetries}],PingTimeout:["$connCheck*",function(cc){return cc.PingTimeout/1e3}],RecheckTimeout:["$connCheck*",function(cc){return cc.RecheckTimeout}],Hosts:{"->":!0,$connCheck:["$parent",function(p){return p.$connCheck}],"{$raw, $inx}":["$connCheck*",function(cc){return funcs.newConfig.normalize(cc.Destination)}],__inx:["$inx*",function(i){return i}],Value:["$raw*",function(r){return r.Host}]},TimeSystem:"ms",MinMax:{"->":!0,$attrs:["$root",function(r){return r.$attrs}],$minmax:["$attrs",function(a){return funcs.newConfig.makeMinMaxModel(a.Device.Network.ConnectivityCheck)}],RecheckTimeout:["$minmax",function(m){return m.RecheckTimeout}],PingTimeout:{min:1,max:10},PingRetries:{min:1,max:10}}},Connections:{"->":!0,$data:["$parent",function(p){return p.$data}],"{$version}":getVersions(),":":["$version",function(v){return v}],$return:["$data","$version*",function(d,v){return getConnectionsList(d,v)}]}});return pattern.build({$data:data,$attrs:attrs})}function nativeToDsysinit(data){function getWANGroup(data,type){var output={order:[]},conns=data.Connections[type];return conns.forEach(function(element){var inst=element.Value;output.order.push(inst),"IPv4"==type&&(output[inst]={ConnectivityCheckEnable:element.Check})}),output}var pattern=T({"->":["$data","Device"],$data:":external",Device:{Network:{"->":!0,ConnectivityCheck:{"->":["$data","$connCheck","Destination"],$data:["$root",function(r){return r.$data}],$connCheck:["$data",function(d){return d.ConnCheck}],Enable:["$data","$connCheck",function(d,cc){return d.FailoverEnable}],PingTimeout:["$data","$connCheck",function(d,cc){return d.FailoverEnable?1e3*cc.PingTimeout:void 0}],RecheckTimeout:["$data","$connCheck",function(d,cc){return d.FailoverEnable?cc.RecheckTimeout:void 0}],PingRetries:["$data","$connCheck",function(d,cc){return d.FailoverEnable?cc.PingRetries:void 0}],Destination:{"->":!0,$data:["$parent",function(p){return p.$data}],$connCheck:["$parent",function(p){return p.$connCheck}],"{$raw, $i}":["$data","$connCheck",function(d,cc){return cc.Hosts}],":":["$raw*","$i*",function(r,i){return r.__inx?r.__inx:"new_inst_"+i}],Host:["$raw*",function(r){return r.Value}]}},Group:{1:{"->":["$data","WAN","WANv6"],$data:["$root",function(r){return r.$data}],FailoverEnable:["$data",function(d){return d.FailoverEnable}],ConnectivityCheckEnable:["$data",function(d){return d.FailoverEnable}],WAN:{"->":!0,$data:["$parent",function(p){return p.$data}],$return:["$data",function(d){return getWANGroup(d,"IPv4")}]},WANv6:{"->":["?"],"?":!!__autoconf.BR2_PACKAGE_ANWEB_IPV6,$data:["$parent",function(p){return p.$data}],$return:["$data",function(d){return getWANGroup(d,"IPv6")}]}}}}}});return pattern.build({$data:data})}var T=__webpack_require__(122).T,funcs=__webpack_require__(5),__autoconf="undefined"!=typeof autoconf?autoconf:{},paths={conns:"Device.Network.Connection.",connCheck:"Device.Network.ConnectivityCheck.",group:"Device.Network.Group.",usb:"Device.USB.Connection."};module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}}()},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(387)}},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}var _keys=__webpack_require__(78),_keys2=_interopRequireDefault(_keys);!function(){function dsysinitToNative(data){function getPortMirroring(data){var mirroring=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.portmirror));if(!_keys2["default"](mirroring).length)return{};var result=[];for(var key in mirroring){var elem=mirroring[key];elem.__id=key,result.push(elem)}return result[0]}function getSource(mirroring,ports,data){function getUSBConns(data){var usbConns=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.usb+"Connection.")),result=[];for(var i in usbConns){var elem=usbConns[i],modem=""!=elem.Binding.Modem?funcs.fetchBranch(data,elem.Binding.Modem):void 0,obj={Name:elem.Name+(modem?" "+modem.Vendor+" "+modem.Model:""),Link:paths.usb+"Connection."+i+".",Type:"usb"};result.push(obj)}return result}__autoconf.BR2_PACKAGE_ANWEB_REALTEK_MODEM&&(ports=ports.filter(function(p){return p.Upstream}),__autoconf.BR2_PACKAGE_ANWEB_XDSL&&ports.push({Link:"Device.xDSL.1.",Name:"DSL",Type:"port"})),__autoconf.BR2_PACKAGE_ANWEB_SUPPORT_USB_MIRRORING&&(ports=ports.concat(getUSBConns(data)));var source=mirroring?funcs.newConfig.normalize(mirroring.Source):{};return ports.map(function(elem){var sourcePort=null;for(var i in source)source[i].Link==elem.Link&&(sourcePort=i);if(sourcePort&&-1!=sourcePort){var sourceInfo=source[sourcePort];return{Link:elem.Link,Name:elem.Name,Mode:sourceInfo.Mode,__id:sourcePort,Type:elem.Type}}return{Link:elem.Link,Mode:"None",Name:elem.Name,Type:elem.Type}})}function getTarget(ports){return __autoconf.BR2_PACKAGE_ANWEB_REALTEK_MODEM&&(ports=ports.filter(function(p){return!p.Upstream})),ports[0].Link}var pattern=T({"->":["$data","$mirroring","Ports","Mirroring"],$data:":external",$mirroring:["$data",function(d){return getPortMirroring(d)}],Ports:{"->":!0,"{$ports, $i}":["$root",function(r){return funcs.newConfig.normalize(funcs.fetchBranch(r.$data,paths.ports))}],Name:["$ports*",function(p){return p.Alias}],Link:["$i*",function(i){return paths.ports+i+"."}],Upstream:["$ports*",function(p){return p.Upstream}],Type:"port"},Mirroring:{"->":!0,$mirroring:["$root",function(r){return r.$mirroring}],__id:["$mirroring",function(m){return m.__id}],Enable:["$mirroring",function(m){return m.Enable}],Status:["$mirroring",function(m){return m.Status}],Target:["$mirroring","$root",function(m,r){return m.Target||getTarget(r.Ports)}],Source:["$mirroring","$root",function(m,r){return getSource(m,r.Ports,r.$data)}]}});return pattern.build({$data:data})}function nativeToDsysinit(data){var pattern=T({"->":["$data","Device"],$data:":external",Device:{Switch:{PortMirror:{"->":["$mirroring","Source"],$mirroring:["$root",function(r){return r.$data}],":":["$mirroring",function(m){return m.__id?m.__id:"new_inst"}],Enable:["$mirroring",function(m){return m.Enable}],Target:["$mirroring",function(m){return m.Target}],Source:{"->":!0,"{$source, $i}":["$parent",function(p){return p.$mirroring.Source.filter(function(e){return"None"!=e.Mode})}],":":["$source*","$i*",function(s,i){return s.__id?s.__id:"new_source_"+i}],Link:["$source*",function(s){return s.Link}],Mode:["$source*",function(s){return s.Mode}]}}}}});return pattern.build({$data:data})}var T=__webpack_require__(122).T,funcs=(__webpack_require__(4),__webpack_require__(5)),paths={portmirror:"Device.Switch.PortMirror.",ports:"Device.Switch.Ports.",usb:"Device.USB."};module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit};var __autoconf="undefined"!=typeof autoconf?autoconf:{}}()},function(module,exports){module.exports=function(){}},function(module,exports,__webpack_require__){"use strict";module.exports={converter:__webpack_require__(390)}},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function dsysinitToNative(data){function getIfacesList(data){function getIfaces(data,type){var output=[];return output=output.concat(getWANGroups(data)),output=output.concat(getConns(data,type))}function getWANGroups(data){var output=[],groups=funcs.newConfig.normalize(funcs.fetchBranch(data,paths.group));for(var i in groups){var path=paths.group+i+".";output.push({Value:path,Name:1==_keys2["default"](groups).length?"default_gateway":"wan_group "+i,Type:"group"})}return output}function getConns(data,type){function isValidType(connType,ipType){return!(/GRE|IPIP6|IPsec|NAT64|OpenVPN|SIT/.test(connType)||"v4"==ipType&&/v6/.test(connType)||"v6"==ipType&&!/v6|PPPoE/.test(connType))}function checkPPPoEType(data,conn,type){var settings=funcs.fetchBranch(data,conn.PPPConfiguration);return!(!settings||"v4"==type&&settings.IPv6Only||"v6"==type&&!settings.IPv6)}var output=[],conns=funcs.fetchBranch(data,paths.conns);conns=funcs.newConfig.normalize(conns);for(var i in conns)if(isValidType(i,type))for(var j in funcs.newConfig.normalize(conns[i])){var path=paths.conns+i+"."+j+".";("PPPoE"!=type||checkPPPoEType(data,conns[i][j],type))&&output.push({Value:path,Name:conns[i][j].Name,Type:"conn"})}return output}return{v4:getIfaces(data,"v4"),v6:getIfaces(data,"v6")}}var pattern=T({"->":["$data","Settings","Ifaces"],$data:":external",Settings:{"->":["$twamp","Addresses","Ports"],$twamp:["$root",function(r){return funcs.fetchBranch(r.$data,paths.twamp)}],Enable:["$twamp",function(t){return t.Enable}],ControlPort:["$twamp",function(t){return t.ControlPort}],IPv6:["$twamp",function(t){return t.IPv6}],Interface:["$twamp",function(t){return t.Interface}],Mode:["$twamp",function(t){return t.Mode}],ReflectorTimeout:["$twamp",function(t){return t.ReflectorTimeout}],ServerTimeout:["$twamp",function(t){return t.ServerTimeout}],Status:["$twamp",function(t){return t.Status}],Addresses:{"->":!0,"{$addrs, $i}":["$parent",function(p){return funcs.newConfig.normalize(p.$twamp.Allowed.Addresses)}],IPStart:["$addrs*",function(a){return a.IPStart}],IPEnd:["$addrs*",function(a){return a.IPEnd}],Type:["$addrs*",function(a){return-1!=a.IPStart.indexOf("/")?"net":"addrs"}],inst:["$i*",function(i){return i}]},Ports:{"->":!0,"{$ports, $i}":["$parent",function(p){return funcs.newConfig.normalize(p.$twamp.Allowed.Ports)}],PortStart:["$ports*",function(p){return p.PortStart}],PortEnd:["$ports*",function(p){return-1!=p.PortEnd?p.PortEnd:""}],inst:["$i*",function(i){return i}]}},Ifaces:{"->":["$ifaces","IPv4","IPv6"],$ifaces:["$root",function(r){return getIfacesList(r.$data)}],IPv4:{"->":!0,"{$conns}":["$parent",function(p){return p.$ifaces.v4}],Value:["$conns*",function(c){return c.Value}],Name:["$conns*",function(c){return c.Name}],Type:["$conns*",function(c){return c.Type}]},IPv6:{"->":!0,"{$conns}":["$parent",function(p){return p.$ifaces.v6}],Value:["$conns*",function(c){return c.Value}],Name:["$conns*",function(c){return c.Name}],Type:["$conns*",function(c){return c.Type}]}}});return pattern.build({$data:data})}function nativeToDsysinit(data){var pattern=T({"->":!0,$data:":external",Device:{Services:{TWAMPServer:{"->":["$twamp","Allowed"],$twamp:["$root",function(r){return r.$data}],Enable:["$twamp",function(t){return t.Enable}],ControlPort:["$twamp",function(t){return t.ControlPort}],IPv6:["$twamp",function(t){return t.IPv6}],Interface:["$twamp",function(t){return t.Interface}],Mode:["$twamp",function(t){return t.Mode}],ReflectorTimeout:["$twamp",function(t){return t.ReflectorTimeout}],ServerTimeout:["$twamp",function(t){return t.ServerTimeout}],Allowed:{"->":["$twamp","Addresses","Ports"],$twamp:["$parent",function(p){return p.$twamp}],Addresses:{"->":!0,"{$addr, $i}":["$parent",function(p){return p.$twamp.Addresses}],":":["$addr*","$i*",function(a,i){return a.inst?a.inst:"new_addr_"+i}],IPStart:["$addr*",function(a){return a.IPStart}],IPEnd:["$addr*",function(a){return"addrs"==a.Type?a.IPEnd:""}]},Ports:{"->":!0,"{$port, $i}":["$parent",function(p){return p.$twamp.Ports}],":":["$port*","$i*",function(p,i){return p.inst?p.inst:"new_port_"+i}],PortStart:["$port*",function(p){return p.PortStart}],PortEnd:["$port*",function(p){return p.PortEnd&&""!=p.PortEnd?p.PortEnd:-1}]}}}}}});return pattern.build({$data:data})}var _keys=__webpack_require__(78),_keys2=_interopRequireDefault(_keys),T=__webpack_require__(122).T,funcs=__webpack_require__(5),_require=__webpack_require__(6),paths=(_require.getIfaces,
{twamp:"Device.Services.TWAMPServer.",conns:"Device.Network.Connection.",group:"Device.Network.Group."});module.exports={dsysinitToNative:dsysinitToNative,nativeToDsysinit:nativeToDsysinit}}]);