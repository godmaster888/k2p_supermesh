"use strict";!function(){function getCredentialsStrorage(){return localStorage}function mylog(msg){console.log("auth-dsysinit: "+msg)}var modname="auth-dsysinit";window.appDeps.push(modname);var D_ERROR_DLINK_ACCESS_DENIED=10005;angular.module(modname,["anweb-storage","cookies"]).config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$rootScope","$injector","authHelper","$location","$q",function($rootScope,$injector,authHelper){return{request:function(config){var re=/DMSD-Access-Token/;return re.test(document.cookie)||(document.cookie="DMSD-Access-Token=INVALID_TOKEN;path=/;"),config},response:function(res){function autologinCredintials(getCredentialsCallback,stayLoggedIn){authHelper.login(autoconf.BR2_PACKAGE_ANWEB_ADMIN_NAME,autoconf.BR2_PACKAGE_ANWEB_ADMIN_PASS,stayLoggedIn).then(getCredentialsCallback).then(saveCorrectCredentials)["catch"](function(){credentials(getCredentialsCallback,stayLoggedIn)})}function credentials(getCredentialsCallback,stayLoggedIn){$injector.invoke(getCredentialsCallback,null,{authParams:{authReason:res.data.error.code,staySignedIn:stayLoggedIn,login:authHelper.login,getErrorMessage:authHelper.getErrorMessage,banReason:res.data.error.banReason,banTimeRemain:res.data.error.banTimeRemain,tryCountRemain:res.data.error.tryCountRemain,tryCount:res.data.error.tryCount}}).then(saveCorrectCredentials)}function mobileCredintials(getCredentialsCallback,stayLoggedIn){mobileAppService.getCredentials().then(function(credentials){return authHelper.login(credentials.username,credentials.password,stayLoggedIn)}).then(saveCorrectCredentials)["catch"](function(){credentials(getCredentialsCallback,stayLoggedIn)})}function applyNewCredentials(credentials){mylog("Applying new credentials"),document.cookie="DMSD-Access-Token="+credentials.AccessToken+";path=/;";var credentialsStorage=getCredentialsStrorage();credentialsStorage.setItem("auth-dsysinit.Login",credentials.Login),credentialsStorage.setItem("auth-dsysinit.RefreshToken",credentials.RefreshToken),deniedRequestsBuffer.retryAll()}function tryToRefreshCredentials(){mylog("Trying to refresh credentials...");var credentialsStorage=getCredentialsStrorage(),refreshToken=credentialsStorage.getItem("auth-dsysinit.RefreshToken"),login=credentialsStorage.getItem("auth-dsysinit.Login");return credentialsStorage.removeItem("auth-dsysinit.RefreshToken"),refreshToken&&login?authHelper.authRequest({login:encodeURIComponent(login),refreshToken:encodeURIComponent(refreshToken)}).then(function(response){var result;return response.data&&response.data.result?(result=response.data.result,mylog("Credentials refreshed."),applyNewCredentials({Status:result.Status,AccessToken:result.AccessToken,RefreshToken:result.RefreshToken,Login:login}),Promise.resolve(!0)):(mylog("Can't refresh credentials. Request failed. Response is "+response),Promise.resolve(!1))})["catch"](function(error){return mylog("Can't refresh credentials. Request failed. Error is "+error),Promise.resolve(!1)}):(mylog("Saved refresh token and login not found."),Promise.resolve(!1))}function saveCorrectCredentials(credentials){mylog("Credentials received."),credentials.staySignedIn?(mylog("User selection is to stay signed in."),localStorage.setItem("auth-dsysinit.staySignedIn","on")):localStorage.removeItem("auth-dsysinit.staySignedIn"),applyNewCredentials(credentials)}if(!res.data||!res.data.error||res.data.error.code!=D_ERROR_DLINK_ACCESS_DENIED){if(!res.data||!res.data.error||10004!=res.data.error.code)return res;$state=$injector.get("$state"),$rootScope.overlayIsHidden=!0,$state.go("error",{code:"msg_device_is_not_available_title",message:$rootScope.isNeedImmediateReboot?"notice_necessary_reboot":"wizard_update_in_progress"})}mylog(D_ERROR_DLINK_ACCESS_DENIED+" error received: "+JSON.stringify(res.data));var $state,deniedRequestsBuffer=$injector.get("deniedRequestsBuffer"),mobileAppService=$rootScope.dlinkMobileApp&&$rootScope.dlinkMobileApp.isUserInMobileApp()?$rootScope.dlinkMobileApp:null;return mylog("Have "+deniedRequestsBuffer.getLength()+" denied requests in buffer"),deniedRequestsBuffer.getLength()||tryToRefreshCredentials().then(function(wasRefreshed){if(!wasRefreshed){mylog("Trying to get credentials from user...");var stayLoggedIn=localStorage.getItem("auth-dsysinit.staySignedIn")?!0:!1,credentialsCallback=$rootScope.getCredentialsCallback?$rootScope.getCredentialsCallback:getCredentialsCallback,headers=res.headers();headers[window.H_AUTH_AUTOLOGIN_HEADER_NAME]?autologinCredintials(credentialsCallback,stayLoggedIn):mobileAppService?mobileCredintials(credentialsCallback,stayLoggedIn):credentials(credentialsCallback,stayLoggedIn)}}),res.config.isRepeatRequest=!0,deniedRequestsBuffer.append(res.config)}}}])}]).factory("authHelper",["$injector","$location","$rootScope","cookie","anwebStorage","funcs",function($injector,$location,$rootScope,cookie,anwebStorage){function getErrorMessage(errorCode){var errorMessageList={};return errorMessageList[10001]="msg_not_authenticated",errorMessageList[errorCode]}function authRequest(params){function isErrorMethod(response){try{return-32600==response.data.error.code?!0:!1}catch(e){return!1}}var $http=$injector.get("$http");return Promise(function(resolve){$http.post("/login?",params).then(function(postResponse){$rootScope.dlinkMobileApp.isUserInMobileApp()&&isErrorMethod(postResponse)?authGETRequest(params).then(function(getResponse){resolve(getResponse)}):resolve(postResponse)})})}function authGETRequest(params){var $http=$injector.get("$http"),getParams=jsonToUrlParams(params);return $http.get("/login?"+getParams)}function jsonToUrlParams(params){var keys=Object.keys(params),result="";return keys.forEach(function(key,index){var keyValue=key+"="+params[key];index>0&&(result+="&"),result+=keyValue}),result}return{login:function(username,password,staySignedIn){var $rootScope=$injector.get("$rootScope"),mobileAppService=($injector.get("$http"),$rootScope.dlinkMobileApp);return function(){return authRequest({login:encodeURIComponent(username),password:password,staysigned:staySignedIn}).then(function(response){if(!response.data)return Promise.reject("internal_error");var error=response.data.error;if(error)return Promise.reject({message:getErrorMessage(error.code)||"internal_error",banReason:error.banReason,banTimeRemain:error.banTimeRemain,tryCount:error.tryCount,tryCountRemain:error.tryCountRemain});var result=response.data.result;return result?(mobileAppService&&mobileAppService.updatePassword({username:username,password:password}),Promise.resolve({Status:result.Status,AccessTimeout:result.AccessTimeout,AccessToken:result.AccessToken,RefreshToken:result.RefreshToken,Login:username,staySignedIn:staySignedIn})):Promise.reject("internal_error")},function(error){return Promise.reject(error||"internal_error")})}()},authRequest:authRequest,getCurrentUser:function(){var credentialsStorage=getCredentialsStrorage(),login=credentialsStorage.getItem("auth-dsysinit.Login");return login&&_.isString(login)?login:""},getErrorMessage:getErrorMessage}}]).factory("deniedRequestsBuffer",["$http","$q",function($http,$q){var requests=[];return window.deniedRequests=requests,{append:function(config){10==requests.length&&requests.splice(0,1);var deferred=$q.defer();return requests.push({config:config,deferred:deferred}),mylog("Request to "+config.url+" appended. Have "+requests.length+" buffered requests."),deferred.promise},retryAll:function(){function callRequest(req){return $http(req.config).then(function(response){return req.deferred.resolve(response),Promise.resolve()},function(error){return req.deferred.reject(error),Promise.resolve()})}var promise;requests.length?(mylog("Retrying "+requests.length+" buffered requests"),promise=Promise.resolve(),angular.forEach(requests,function(req){promise=promise.then(function(){return callRequest(req)})}),requests=[]):mylog("Have no requests to retry")},getLength:function(){return requests.length}}}]).run(["$rootScope","$http","cookie",function($rs,$http){$rs.auth={logout:function(){var credentialsStorage=getCredentialsStrorage(),login=credentialsStorage.getItem("auth-dsysinit.Login"),refreshToken=credentialsStorage.getItem("auth-dsysinit.RefreshToken");return credentialsStorage.removeItem("auth-dsysinit.Login"),credentialsStorage.removeItem("auth-dsysinit.RefreshToken"),$http.post("/cpe",{jsonrpc:"2.0",id:1,method:"Logout",params:{Login:login,RefreshToken:refreshToken}}).then(function(response){response.data&&response.data.result||mylog("Can not correctly complete auth session. Response is "+response),$http.post("/cpe",{jsonrpc:"2.0",id:1,method:"GetParameterValues",params:{ParameterNames:["Device.DeviceInfo.ModelName"]}}).then(function(){})})["catch"](function(error){mylog("Can not correctly complete auth session. Error is "+error)})}}}]);var getCredentialsCallback=["ngDialog","authParams","$injector",function(ngDialog,authParams){return ngDialog.open({template:autoconf.BR2_PACKAGE_ANWEB_HQ_ADMIN_APP?"../general/dialogs/hq_login2/dialog.tpl.html":"../general/dialogs/login2/dialog.tpl.html",className:"login_dialog",closeByDocument:!1,closeByEscape:!1,controller:"LoginDialog2Ctrl",showClose:!1,data:{authReason:authParams.authReason,staySignedIn:authParams.staySignedIn,login:authParams.login,getErrorMessage:authParams.getErrorMessage,banReason:authParams.banReason,banTimeRemain:authParams.banTimeRemain,tryCountRemain:authParams.tryCountRemain,tryCount:authParams.tryCount}}).closePromise.then(function(data){return data.value})}]}();