"use strict";!function(){var apply=angular.module(regdep("apply"),[]);apply.service("profiles",["device","dsysinit","cpe","funcs","$http","$state",function(device,dsysinit,cpe,funcs,$http){function applyDeviceMode(profile){return"ap"==profile.Config.DeviceMode.Mode?"AccessPoint":"Router",cpe.SetParameterValues([{Name:"Device.DeviceInfo.DeviceMode",Value:mode}])}function getMode(profile){return profile&&profile.Config.DeviceMode&&profile.Config.DeviceMode.Mode?"ap"==profile.Config.DeviceMode.Mode?"AccessPoint":"Router":void 0}var vlalModel,mode=null,options={"interface":void 0,isRealtekModem:!!autoconf.BR2_PACKAGE_ANWEB_REALTEK_MODEM,isOnlyOneIface:!!autoconf.BR2_PACKAGE_ANWEB_REALTEK_819X,isMultipleUntagIface:!!autoconf.BR2_PACKAGE_ANWEB_CUSTOM_ROSTELECOM_35980},vlalModel="DIR",sections=[{order:0,name:"get_wan",deps:["Config.WAN."],configPaths:["Device.Switch."],getData:function(config){return dsysinit.GetWAN(config)}},{order:1,name:"clean",deps:["Config.WAN."],configPaths:["Device.Network.Connection.","Device.Network.Group.","Device.Network.Interface.","Device.Services.","Device.Firewall."],getData:function(config,attrs,profile){return dsysinit.Clean(config,profile)}},{order:2,name:"removeWAN",deps:["Config.WAN."],configPaths:["Device.Network.Connection.","Device.Network.Interface.","Device.Network.Settings.PPPClient.","Device.Network.IP.","Device.xDSL.","Device.DeviceInfo."],getData:function(config,attrs,profile){return dsysinit.RemoveWAN(config,profile)}},{order:3,name:"SuperMesh",splitDiff:!0,deps:["Config.WiFi.Radio.1.SuperMeshEnable"],configPaths:["Device.WiFi.","Device.Network.Interface."],getData:function(config,attrs,profile){return dsysinit.SuperMesh(config,profile)}},{order:4,name:"wifi",deps:["Config.WiFi."],configPaths:["Device.WiFi.","Device.Network.Interface.Bridge."],getData:function(config,attrs,profile){return funcs.deepExtend(funcs.deepClone(config),dsysinit.WiFi(config,profile))}},{order:5,name:"vlan",deps:["Config.VLAN."],need:function(){return"DIR"==vlalModel},configPaths:["Device.Switch."],getData:function(config,attrs,profile){return dsysinit.VLAN(config,profile,options)}},{order:6,name:"dsl_vlan",splitDiff:!0,deps:["Config.WAN."],need:function(){return"DSL"==vlalModel},configPaths:["Device.Switch.","Device.Network.Interface.","Device.Routing.","Device.Firewall."],getData:function(config,attrs,profile,options){return dsysinit.DSL_VLAN(config,profile,options)}},{order:7,name:"wan",splitDiff:!0,deps:["Config.WAN."],configPaths:["Device.Network.Connection.","Device.Network.Group.","Device.Network.Settings.","Device.Network.Interface.","Device.Network.IP.","Device.Network.Server.DHCP.","Device.Firewall.","Device.Services.IGMPX.","Device.xDSL.","Device.VoIP.","Device.Switch.Switches.1.Vlan.","Device.USB.Connection.","Device.USB.AutoConnect."],getData:function(config,attrs,profile,options){return funcs.deepExtend(funcs.deepClone(config),dsysinit.WAN(config,profile,options))}},{order:8,name:"mac",deps:["Config.WAN."],configPaths:[],getData:function(config,attrs,profile){return dsysinit.Mac(null,profile)}},{order:9,name:"change_active_sim",deps:["Config.WAN."],configPaths:[],getData:function(config,attrs,profile){var usbModem=dsysinit.USBModem(null,profile);return _.size(usbModem.Device)?usbModem:{}}},{order:10,name:"language",deps:["Config.SystemLanguage."],configPaths:["Device.DeviceInfo.Language."],getData:function(config,attrs,profile){return dsysinit.Language(funcs.deepClone(config),profile)}},{order:11,name:"password",deps:["Config.SystemPassword."],configPaths:["Device.Users."],getData:function(config,attrs,profile){return dsysinit.Password(funcs.deepClone(config),profile)}},{order:12,name:"lan",deps:["Config.LAN."],configPaths:["Device.Network.Connection.","Device.Network.IP.1.IPv4Address.1.","Device.Network.Server.DNS.","Device.Network.DNS."],getData:function(config,attrs,profile){return dsysinit.LAN(funcs.deepClone(config),profile)}},{order:13,name:"voip",deps:["Config.VoIP."],configPaths:["Device.Voip."],getData:function(config,attrs,profile){return dsysinit.VoIP(funcs.deepClone(config),profile)}},{order:14,name:"upnp",deps:["Config.UPnP."],configPaths:["Device.Services.DynamicPortMapping."],getData:function(config,attrs,profile){return dsysinit.UPnP(funcs.deepClone(config),profile)}},{order:15,name:"xdsl",deps:["Config.xDSL."],configPaths:["Device.xDSL."],getData:function(config,attrs,profile){return dsysinit.xDSL(funcs.deepClone(config),profile)}},{order:16,name:"raccess",deps:["Config.RemoteAccess."],configPaths:["Device.Firewall."],getData:function(config,attrs,profile){return funcs.deepExtend(funcs.deepClone(config),dsysinit.RemoteAccess(config,profile))}},{order:17,name:"time",deps:["Config.SystemTime."],configPaths:["Device.Services.NTP."],getData:function(config,attrs,profile){return funcs.deepExtend(funcs.deepClone(config),dsysinit.Time(config,profile))}},{order:18,name:"changemac",deps:["Config.MAC."],configPaths:["Device.Network.Interface."],getData:function(config,attrs,profile){var result={};funcs.setValue("Device.Network.Interface",funcs.deepClone(config.Device.Network.Interface),result);var macConfig=profile.Config.MAC;return funcs.setValue(macConfig.IfaceLink+"MACAddress",macConfig.MAC,result),result}}];return{applyDeviceMode:applyDeviceMode,apply:function(profile){function updateMode(){return mode?Promise.resolve():cpe.GetParameterValues(["Device.DeviceInfo.DeviceMode"]).then(function(res){var res=funcs.buildTree(res.result.ParameterList);mode=funcs.fetchBranch(res,"Device.DeviceInfo.DeviceMode")})}function fetchConfig(input){var paths=function(applySections){return _.chain(applySections).map(function(section){return section.configPaths}).flatten().uniq().value()}(input.applySections);return Promise.all([cpe.GetParameterValues(paths,mode,!0),cpe.GetParameterAttributes(paths,mode,!0)]).then(function(response){return input.config=funcs.buildTree(response[0].result.ParameterList),input.attrs=funcs.buildTreeAttributes(response[1].result.ParameterList),Promise.resolve(input)})}function applyDiffs(diffs){return $http.post("/dcc_apply",{Diffs:diffs,DeviceMode:mode})["catch"](function(res){console.log("convert failed",res)})}var input={profile:profile,applySections:function(profile){function checkDeps(deps,profile){return _.every(deps,function(dep){return!_.isNull(funcs.fetchBranch(profile,dep))})}return _.chain(sections).filter(function(section){return checkDeps(section.deps,profile)}).filter(function(section){return!_.isFunction(section.need)||section.need(autoconf)}).sortBy("order").value()}(profile),config:null,attrs:null,diffs:[]};return mode=getMode(input.profile),updateMode().then(fetchConfig.bind(null,input)).then(function(input){function preProcess(data){return console.log("diff->",data),data.__interface&&(options["interface"]=data.__interface,delete data.__interface),data}var data=_.map(input.applySections,function(section){return preProcess(section.getData(input.config,input.attrs,input.profile,options))}),diffs=funcs.newConfig.makeDiffArray(input.config,data,input.attrs);return _.filter(function(diffs){return _.reduce(diffs,function(memo,diff,index){var diffs;return funcs.fetchBranch(diff,"Device.Network.IP.")&&_.each(diff.Device.Network.IP,function(obj,key){"-"==key[0]&&(delete diff.Device.Network.IP[key].IPv4Address,delete diff.Device.Network.IP[key].IPv6Address)}),input.applySections[index].splitDiff?(diffs=funcs.newConfig.splitDiff(diff),memo.concat(diffs)):memo.concat(diff)},[])}(diffs),function(o){return o&&!_.isEmpty(o)})}).then(applyDiffs)},getMode:getMode}}])}();