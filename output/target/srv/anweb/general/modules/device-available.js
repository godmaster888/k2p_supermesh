"use strict";!function(){var deviceAvailableModule=angular.module(regdep("deviceAvailable"),["devinfo"]);deviceAvailableModule.provider("deviceAvailable",[function(){return this.getNotAvailableCallback=null,this.getAvailableAgainCallback=null,this.getMACAddressChangeCallback=null,this.getNotAvailableCountCallback=null,this.getAvailableCountCallback=null,this.$get=["$injector","$http","$timeout","$window","deviceAvailableInfo","deviceMacInfo",function($injector,$http,$timeout,$window,available){function init(options){settings=_.extend(settings,options)}function complete(){wasStarted=!1,available.clean(),$injector.invoke(providerObj.getAvailableAgainCallback,null,{deviceAvailableMode:mode})}function cors(hostname){var baseUrl,proto,port;hostname?(baseUrl="",proto=$window.location.protocol,port=$window.location.port,baseUrl+=proto+"//"+hostname,port&&(baseUrl+=":"+port),settings.baseUrl=baseUrl,headers["X-CORS-Header"]=!0):delete headers["X-CORS-Header"]}function request(){var url=settings.baseUrl+settings.url+"?&_="+_.random(1e4,99999),opts={timeout:settings.timeout,headers:headers};return $http.get(url,opts)}function __pull(){function success(response){if(_.isString(response)&&"fwupdate.local"==mode)console.log("old fw detected");else if(!response||!response.error||!response.error.code)return void error();__monitoring({}),refresh()}function error(){__monitoring(null,"pull error"),refresh()}function refresh(){$timeout(function(){activeTimer=!1,__pull()},settings.interval)}wasStarted&&(activeTimer||(activeTimer=!0,request().success(success).error(error)))}function __monitoring(data,error){wasStarted&&(available.update(data,error),__analyze(data))}function __analyze(){var availableStatus=available.getStatus(),availableState=available.getState();availableStatus?(notAvailableCount=0,"device_available_again"==availableState&&providerObj.getAvailableAgainCallback&&$injector.invoke(providerObj.getAvailableAgainCallback,null,{deviceAvailableMode:mode}),availableCount++,providerObj.getAvailableCountCallback&&$injector.invoke(providerObj.getAvailableCountCallback,null,{deviceAvailableMode:mode,deviceAvailableCount:availableCount})):(availableCount=0,"device_become_unavailable"==availableState&&providerObj.getNotAvailableCallback&&$injector.invoke(providerObj.getNotAvailableCallback,null,{deviceAvailableMode:mode}),notAvailableCount++,providerObj.getNotAvailableCountCallback&&$injector.invoke(providerObj.getNotAvailableCountCallback,null,{deviceAvailableMode:mode,deviceNotAvailableCount:notAvailableCount}))}var providerObj=this,wasStarted=!1,activeTimer=!1,settings={baseUrl:"",url:"/devinfo",interval:3e3,timeout:autoconf.BR2_PACKAGE_ANWEB_LONG_DEVICE_AVAILABLE?2e4:2e3},headers={},mode="pending",availableCount=0,notAvailableCount=0;return{init:init,once:request,start:function(){wasStarted=!0,__pull()},stop:function(){wasStarted=!1,available.clean()},cors:cors,complete:complete,setMode:function(name){mode=name,availableCount=0,notAvailableCount=0}}}],this}]),deviceAvailableModule.factory("deviceAvailableInfo",[function(){function isChangeStatus(){return status!=statusOld}function isNegativeStatusSet(){return isChangeStatus()&&status!==!0}function isPositiveStatusAgain(){return isChangeStatus()&&!_.isUndefined(statusOld)&&status===!0}function updateState(){state=isNegativeStatusSet()?"device_become_unavailable":isPositiveStatusAgain()?"device_available_again":"device_not_change_available"}function isResponseError(data,error){return error||!data}function updateStatus(data,error){statusOld=_.clone(status),status=!isResponseError(data,error)}var status,statusOld,state,getState=function(){return state},getStatus=function(){return status};return{clean:function(){status=void 0,statusOld=void 0,state=void 0},update:function(data,error){updateStatus(data,error),updateState()},getState:getState,getStatus:getStatus}}]),deviceAvailableModule.factory("deviceMacInfo",[function(){function parseMacAddress(data){return data&&data.lan&&data.lan[0]?data.lan[0].mac:void 0}var mac=void 0,update=function(newMac){mac=newMac},compare=function(data){var compareMac=parseMacAddress(data);return _.isUndefined(compareMac)||compareMac==mac};return{init:function(data){var newMac=parseMacAddress(data);return _.isUndefined(newMac)?!1:(update(newMac),!0)},update:update,compare:compare}}]),deviceAvailableModule.run(["deviceAvailable",function(da){da.start()}])}();