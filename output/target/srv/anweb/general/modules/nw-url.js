"use strict";!function(){var nw=angular.module(regdep("nw-url"),[]);nw.directive("nwUrl",function(){return{restrict:"A",require:"ngModel",link:function($scope,$element,$attrs,$model){function validator(value){var require,protocls,lastIndex,re,sumPatt="^";return value&&$attrs.nwUrlProtocols?(require=_.has($attrs,"nwUrlRequireProtocol")?"":"?",protocls=$attrs.nwUrlProtocols.split(","),lastIndex=protocls.lastIndexOf(protocls[protocls.length-1]),sumPatt+="(?:(?:",_.each(protocls,function(elem,index){sumPatt+=lastIndex!=index?elem+"|":elem+"):\\/\\/)"}),sumPatt+=require+"(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4])))|(\\[.*\\])|(?:(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))))(?::\\d{2,5})?(?:\\/[^\\s]*)?$",re=new RegExp(sumPatt),_.has($attrs,"nwUrlRequireProtocol")?$model.$setValidity("msg_error_url_not_contains_protocol",re.test(value)):$model.$setValidity("msg_invalid_url",re.test(value))):($model.$setValidity("msg_error_url_not_contains_protocol",!0),$model.$setValidity("msg_invalid_url",!0)),value}$model.$parsers.unshift(validator),$model.$formatters.unshift(validator)}}})}();