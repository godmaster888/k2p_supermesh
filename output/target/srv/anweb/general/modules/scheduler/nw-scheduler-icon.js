"use strict";!function(){var nwSchedulerIcon=angular.module(regdep("nw-scheduler-icon"),[]);nwSchedulerIcon.directive("nwSchedulerIcon",["translate",function(){return{restrict:"A",replace:!0,template:'<div class="nw-scheduler-icon" ng-click="setSchedule()" ng-class="{\'nw-scheduler-icon--added\': isExistsSchedule, \'nw-scheduler-icon--disabled\': isDisabled}"title="{{!isExistsSchedule ? (\'sched_set\' | translate) : (\'sched_edit\' | translate)}}"><div svg-icon="time"></div></div>',scope:{idRule:"@",indexesLink:"=",isExistsSchedule:"=",titleExistsSchedule:"@",valueModel:"=",isDisabled:"="},controller:"nwSchedulerIconCtrl"}}]),nwSchedulerIcon.controller("nwSchedulerIconCtrl",["$scope","$attrs","scheduler","ngDialog",function($scope,$attrs,scheduler,ngDialog){function initData(){scheduler.getSchedulerData().then(function(){$scope.isExistsSchedule=_.some(indexesLink,function(indexes){return scheduler.isExists($scope.idRule,indexes)})})}initData();var backupValueModel=$scope.valueModel;$scope.$watch("isExistsSchedule",function(){$scope.valueModel=backupValueModel});var indexesLink=scheduler.parseIndexesLink($scope.indexesLink);$scope.setSchedule=function(){if(!$scope.isDisabled){var options={branches:function(rule){return _.map(indexesLink,function(indexes){return scheduler.getFullLink(rule,indexes)})}($scope.idRule),name:$attrs.idRule,isNeedReload:!1};return ngDialog.open({template:"dialogs/schedule_form/dialog.tpl.html",controller:"ScheduleFormDialogCtrl",scope:$scope,data:options,className:"schedule-dialog-width"}).closePromise.then(function(data){data&&data.value&&initData()})}}}])}();