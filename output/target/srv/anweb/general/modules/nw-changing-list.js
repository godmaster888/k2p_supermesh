"use strict";!function(){var nw=angular.module(regdep("nw-changing-list"),[]);nw.directive("nwChangingList",["translate",function(){return{restrict:"A",template:function(elem,attr){var fields='<div class="input_with_action" ng-repeat="value in list | limitTo:limit track by $index"><div nw-field nw-required="required" nw-disabled="disabled"> <input type="text" '+function(property){return property?'ng-model="list[$index][property]" ':'ng-model="list[$index]" '}(attr.nwChangingListProperty)+'nw-type="{{type}}" placeholder="{{placeholder | translate}}" nw-set-focus="{{focus === true}}" nw-custom-valid="validation(value, $index)" class="under_cross_change" > </div> <div class="input_action" ng-if="showRemoveButton()" ng-click="removeRow($index)">×</div> </div> ';return'<div class="changing_list"><div class="{{getLabelClass()}} label">{{label | translate}}<font color="red" ng-show="required && !disabled && list.length">*</font></div><div class="empty" ng-if="!list.length"> <div class="note"><span ng-bind="\'changing_list_empty\' | translate"></span><span ng-if="default"> ({{"by_default" | translate}} {{default}})</span> </div></div>'+fields+'<div class="button_block right"> <input type="button" ng-disabled="disabledAddRow()" ng-click="addRow()" value="{{\'act_add\' | translate}}" class="colored flat" ></div></div>'},scope:{label:"@nwChangingListLabel",labelClass:"@nwChangingListLabelClass",placeholder:"@nwChangingListPlaceholder",type:"@nwChangingListType",list:"=nwChangingList",defNewRow:"=nwChangingListDefaultNewRow",limit:"@nwChangingListLimit",disabled:"=nwChangingListDisabled",property:"@nwChangingListProperty","default":"@nwChangingListDefault"},link:function($scope,$element,$attrs){var needUniq=_.has($attrs,"nwChangingListUniq"),notEmpty=_.has($attrs,"nwChangingListNotEmpty"),notCyrillic=_.has($attrs,"nwChangingListNotCyrillic");$scope.addRow=function(){$scope.focus=!0;var obj,defNewRow=$scope.defNewRow?_.clone($scope.defNewRow):"";$scope.property&&(obj={},obj[$scope.property]=defNewRow,defNewRow=_.clone(obj)),$scope.list.push(defNewRow)},$scope.removeRow=function(index){$scope.list.splice(index,1)},$scope.disabledAddRow=function(){return $scope.list&&($scope.list.length>=$scope.limit||$scope.disabled)},$scope.validation=function(value,index){return needUniq&&!function(value,without){var checkList=_.clone($scope.list);return!_.isUndefined(without)&&without<checkList.length&&checkList.splice(without,1),checkList[0]&&_.has(checkList[0],"Address")&&(checkList=_.pluck(checkList,"Address")),!_.contains(_.compact(checkList),value)}(value,index)?"msg_error_value_is_not_uniq":notCyrillic&&function(value){var reg=/[а-яА-Я]/;return reg.test(value)}(value)?"msg_invalid_not_cyrillic_char":null},$scope.getLabelClass=function(){return $scope.labelClass?$scope.labelClass:"card-title"},$scope.showRemoveButton=function(){var result;return result=$scope.disabled?!1:notEmpty?$scope.list.length>1:!0},$attrs.$observe("nwChangingList",function(){_.isArray($scope.list)||($scope.list=[]),!_.size($scope.list)&&notEmpty&&$scope.list.push("")}),$attrs.$observe("@nwChangingListLimit",function(){$scope.limit=$scope.limit||100}),$attrs.$observe("nwChangingListRequired",function(value){$scope.required=_.isUndefined(value)?!1:""===value?!0:!!value})}}}])}();