"use strict";!function(){angular.module(regdep("nwPorts"),[]).directive("nwPorts",["translate",function(translate){return{restrict:"AEC",scope:{nwBoxInfo:"=",nwAvailPorts:"=",nwGwIface:"=",nwOtherIfaces:"=",nwPortClick:"&",nwWanStatus:"=",nwLanStatus:"=",nwManagement:"=",nwAutoShift:"=",nwServices:"=",nwServicesMenu:"=",nwServicesChange:"&",nwEtherwanPort:"=",nwRewriteTooltip:"&",nwRewriteIcon:"&",nwHighlight:"=",nwWanPort:"="},template:'<div class="prots2-wifi" ng-if="showAdditioanlPort(\'wifi\')"> 	                <div class="anten" ng-class="{\'selected\': highlightGroup(\'wifi\')}"> 	                </div> 	            </div> 	            <div class="ports2 {{(isDeviceWith2Wans()) ? \'with_2_wan_ports\' : \'\'}}" ng-class="{ \'with_status\': !!nwLanStatus || !!nwWanStatus }"> 					<div class="group usb" ng-class="{\'selected\': highlightGroup(\'usb\')}" ng-if="showAdditioanlPort(\'usb\')"> 	                    <div class="port usb"> 	                        <div class="bg"></div> 	                    </div> 				    	<div class="name">{{ \'USB\' }}</div> 	                </div> 	                <div class="group {{group.type.toLowerCase()}}" ng-class="{\'selected\': highlightGroup(group.type.toLowerCase())}" ng-repeat="group in groups"> 						<div class="port {{ getPhyIcon(port) }}" ng-repeat="port in group.ports" ng-click="nwPortClick({ \'port\': port })" title="{{ seviceToHuman(services[port.name].service, port) }}"> 							<div class="bg {{ getPhyIcon(port) }}"></div> 							<div class="icon {{ port.icon }} {{ seviceToIcon(services[port.name].service, port) }} {{ (port.management && nwManagement)?\'human\':\'\' }} {{(group.type == \'LAN\')?\'pointer\':\'\'}}"></div> 							<div class="connect {{ getPhyIcon(port) }}" ng-class="{\'on\': port.status}" ng-if="isShowPortStatus(group.type, port)"> 								<div></div> 							</div> 							<div class="name" ng-if="group.ports.length >= 1">{{ port.alias }}</div> 							<select ng-if="isShowServiceList(group, port)" ng-options="option.value as option.name for option in nwServicesMenu" ng-model="services[port.name].service" ng-change="onServiceChange(port)"> 							</select> 						</div> 						<div class="name" ng-if="group.alias!=\'LAN\'">{{ group.alias?group.alias:group.type }}</div> 					</div> 				</div>',link:function($scope,$element,$attr){function getTypeByName(name){return/WAN|internet|port5/.test(name)||name==$scope.nwWanPort?"Internet":/LAN\d|port\d/.test(name)?"LAN":/dsl/.test(name)?"DSL":"undefined"}function getNumberByName(name){var result=/[a-zA-Z]+(\d+)/.exec(name);return 2==_.size(result)?_.last(result):""}function isLanGroup(group){return"LAN"==group.type}function isEtherWANPort(port){return _.isString($scope.nwEtherwanPort)?port.name==$scope.nwEtherwanPort:void 0}function createGroups(boxPorts){function getDefIcon(type){return"Internet"==type?"internet":""}var result=[],lastType=null,group=null;return _.each(boxPorts,function(portName){var number=null,type=getTypeByName(portName);"Internet"!=type&&(number=getNumberByName(portName)),type!=lastType&&(result.push({type:type,icon:getDefIcon(type),ports:[]}),group=_.last(result)),group.ports.push(_.extend({name:portName},{number:number})),lastType=type}),result}function updateGroups(availPorts){function convertIface(iface){switch(iface){case"atm":case"ptm":return"dsl"}return iface}function convertType(type){switch(type){case"fiber":return"ethernet"}return type}var lan,mgmPort,freePort,servPort,obj=_.indexBy(availPorts,"name");_.each($scope.groups,function(group){_.each(group.ports,function(port){obj[port.name]&&("dsl"==obj[port.name].type&&(group.alias="DSL"),obj[port.name].alias&&(group.alias=obj[port.name].alias.replace(/[0-9]/g,"")),port.group=group,port.alias=obj[port.name].alias,port.status=obj[port.name].status,port.isWan=$scope.nwGwIface?obj[port.name].isWan&&convertType(obj[port.name].type)==convertIface($scope.nwGwIface):obj[port.name].isWan,port.isEtherwan=obj[port.name].isEtherwan,port.management=!!obj[port.name].management,port.type=obj[port.name].type,obj[port.name].isEtherwan)})}),$scope.nwAutoShift&&(lan=_.find($scope.groups,function(group){return"LAN"==group.type}),lan&&(mgmPort=_.find(lan.ports,function(port){return port.management}),mgmPort&&(freePort=null,freePort=$scope.nwServices?_.find($scope.nwServices,function(port){return!port.service&&!isEtherWANPort(port)}):_.find(lan.ports,function(port){return!isEtherWANPort(port)}),$scope.nwServices&&(servPort=_.find($scope.nwServices,function(port){return!!port.service&&port.name==mgmPort.name}),servPort&&(freePort&&(freePort.service=servPort.service,console.log("Service",servPort.service,"moved to",freePort.name)),servPort.service="")),$scope.nwEtherwanPort==mgmPort.name&&freePort&&($scope.nwEtherwanPort=freePort.name,console.log("Etherwan moved to",freePort.name)))))}$scope.groups=[],$scope.services={},$scope.isDeviceWith2Wans=function(){return autoconf.BR2_PACKAGE_ANWEB_SEPARATED_WAN_PORT},$scope.getPhyIcon=function(port){return(port.group&&"Internet"==port.group.type||"internet"==port.name)&&"dsl"!=port.name,""},$scope.isShowServiceList=function(group,port){return $scope.nwServicesMenu&&isLanGroup(group)&&!isEtherWANPort(port)&&!port.management},$scope.isShowPortStatus=function(type,port){return $scope.nwWanStatus&&(port.isWan||"Internet"==port.group.type)?!0:$scope.nwLanStatus&&"LAN"==type},$scope.onServiceChange=function(port){$scope.nwServicesChange&&$scope.nwServicesChange({port:port})},$scope.seviceToIcon=function(service,port){var icon;if($attr.nwRewriteIcon&&(icon=$scope.nwRewriteIcon({port:port}),null!==icon))return icon;if(_.isString($scope.nwEtherwanPort)&&($scope.nwEtherwanPort==port.name||""==$scope.nwEtherwanPort&&port.isWan))return"internet";if(!service)return"";switch(service.toLowerCase()){case"":return"";case"iptv":return"iptv";case"voip":return"voip";default:return"tvtel"}},$scope.seviceToHuman=function(service,port){var tooltip;if($attr.nwRewriteTooltip&&(tooltip=$scope.nwRewriteTooltip({port:port}),null!==tooltip))return translate(tooltip);if(_.isString($scope.nwEtherwanPort)&&(_.isEmpty($scope.nwEtherwanPort)&&port.isWan||$scope.nwEtherwanPort==port.name))return translate("dcc_inet_port");if(!service)return"";switch(service.toLowerCase()){case"":return"";case"iptv":return"IPTV";case"voip":return"VoIP";default:return"IPTV+VoIP"}},$scope.highlightGroup=function(group){return $scope.nwHighlight==group},$scope.$watch("nwBoxInfo",function(boxInfo){!_.size($scope.groups)&&boxInfo&&($scope.groups=createGroups(boxInfo.ports))}),$scope.$watch(function(){return JSON.stringify($scope.nwServices)},function(){$scope.nwServices&&($scope.services=_.indexBy($scope.nwServices,"name"))}),$scope.$watchCollection("nwAvailPorts",function(availPorts){availPorts&&updateGroups(availPorts,$scope.nwOtherIfaces)}),$scope.showAdditioanlPort=function(type){return!!$scope.nwOtherIfaces&&_.contains($scope.nwOtherIfaces,type)}}}}])}();