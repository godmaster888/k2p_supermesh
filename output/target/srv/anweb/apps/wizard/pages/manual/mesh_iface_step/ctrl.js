"use strict";function InterfaceStepController($scope,$rootScope,manualModes,manualProfile,defaults,manualStepApiDispatcher){function getAvailModes(){var mode;return profile.$InterfaceStep.MeshEnable?(mode="master"==profile.$InterfaceStep.MeshRole?"router":"ap",_.pick(manualModes,function(o){return o.DeviceMode==mode&&o.SupportMesh})):manualModes}function setDefaults(){var modeData=manualModes[profile.$InterfaceStep.WiFiMode];profile.$InternetStep.WANType=defaults.$InternetStep?defaults.$InternetStep.WANType||"":"",profile.$DeviceMode.Mode=modeData.DeviceMode||null,$scope.getMode().applyDefaults(),profile.$WiFiStep&&$scope.resetSSID()}var profile=manualProfile.profile(),modesImages={Router:"mode_router",Etherwan:"mode_router_etherwan",DSLRouter:"mode_dsl_router",WISPRepeater:"mode_wisp_repeater",AP:"mode_ap",Repeater:"mode_repeater",Client:"mode_client",USB:"mode_usb",WDS:"mode_wds",MeshTraining:"mode_mesh_training",MeshRouter:"mode_mesh_router",MeshAP:"mode_mesh_ap",MeshWISP:"mode_mesh_wisp",MeshModem:"mode_mesh_modem"},options={connTypes:{supermesh:"dcc_supermesh",standalone:"dcc_standalone"},roles:{master:"Master",slave:"Slave"},bands:{"2.4GHz":"24ghz","5GHz":"5ghz"}};$scope.$watch(function(){return profile.$InterfaceStep.WiFiMode},function(value){value&&(profile.$InterfaceStep.IfaceType=_.first(manualModes[value].IfaceType))}),$scope.interfaceStep={stepActive:!1,connType:function(){return _.isUndefined(profile.$InterfaceStep.MeshEnable)?void 0:profile.$InterfaceStep.MeshEnable?"supermesh":"standalone"}(),profile:profile,options:options,getAvailModes:getAvailModes,getModeImage:function(){if(profile.$InterfaceStep.MeshEnable)switch(profile.$InterfaceStep.WiFiMode){case"AP":return[modesImages.MeshTraining,modesImages.MeshAP];case"Router":return[modesImages.MeshRouter];case"WISPRepeater":return[modesImages.MeshWISP];case"USB":return[modesImages.MeshModem]}var ifaceType=profile.$InterfaceStep.IfaceType;switch(ifaceType){case"adsl":case"vdsl":return[modesImages.DSLRouter];case"etherwan":return[modesImages.Etherwan]}return[modesImages[profile.$InterfaceStep.WiFiMode]]},onConnTypeChange:function(){profile.$InterfaceStep.MeshEnable="supermesh"==$scope.interfaceStep.connType,profile.$InterfaceStep.MeshEnable?(manualProfile.setLANMode(!0),profile.$InterfaceStep.MeshBand=_.first(_.keys(options.bands)),profile.$InterfaceStep.MeshRole=_.first(profile.$SuperMesh.AvailRoles)):manualProfile.setLANMode(!1);var availModes=_.keys(getAvailModes());profile.$InterfaceStep.WiFiMode=_.contains(availModes,profile.$InterfaceStep.DefaultMode)?profile.$InterfaceStep.DefaultMode:_.first(availModes),setDefaults()},onRoleChange:function(){profile.$InterfaceStep.WiFiMode=_.first(_.keys(getAvailModes())),setDefaults()},onDeviceModeChange:function(){setDefaults()},isShowModes:function(){return _.keys(getAvailModes()).length>1}},manualStepApiDispatcher.get().registerStepApi({name:"InterfaceStep",onActivate:function(){$scope.interfaceStep.stepActive=!0},onLeave:function(){$scope.interfaceStep.stepActive=!1}})}angular.module("wizard").controller("InterfaceStepController",InterfaceStepController),InterfaceStepController.$inject=["$scope","$rootScope","manualModes","manualProfile","manualDefaults","manualStepApiDispatcher","translate","funcs"];