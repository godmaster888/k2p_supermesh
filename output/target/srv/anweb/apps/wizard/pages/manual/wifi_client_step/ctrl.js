"use strict";function WiFiClientStepController($scope,$rootScope,manualProfile,manualStepApiDispatcher,devinfo,$q,funcs,device,wifiScan,ngDialog){function activateClient(){$scope.wifiClient.sortDirection="desc",$scope.wifiClient.sortActive="SignalStrength",$scope.wifiClient.sortBy($scope.wifiClient.sortActive),$scope.wifiClient.endpoint=wifiScan.getTemplate(),profile.$WifiClientStep=_.extend({},$scope.wifiClient.endpoint,profile.$WifiClientStep),profile.$WifiClientStep.Enable=!0,profile.$InterfaceStep.MeshEnable&&(profile.$WifiClientStep.Band&&profile.$WifiClientStep.Band==profile.$InterfaceStep.MeshBand&&resetClient(),profile.$WifiClientStep.Band=invertBand(profile.$InterfaceStep.MeshBand))}function isWiFiRepeater(){return _.contains(["Repeater","WISPRepeater"],profile.$InterfaceStep.WiFiMode)}function isWiFiClient(){return"Client"==profile.$InterfaceStep.WiFiMode}function selectEndpoint(data){var ep={SSID:data.SSID,BSSID:data.BSSID,Band:data.Band,Channel:data.Channel,AdvancedChannel:data.AdvancedChannel,Security:{ModeEnabled:data.ModeEnabled,EncryptionType:data.EncryptionType,PreSharedKey:"",WEPKey1:"",WEPKey2:"",WEPKey3:"",WEPKey4:"",OpenWEP:data.OpenWEP||!1,DefaultKeyID:helper.getDefaultKeysID()[0],WEPasHEX:!1}};_.extend(profile.$WifiClientStep,ep),$scope.wifiClient.selectedEndpoint=data}function resetClient(){profile.$WifiClientStep={ConnectMode:"select"}}function getRepeaterPrefix(is5G){return is5G?"_5G_EXT":"_EXT"}function ifActive(func){return function(){return $scope.wifiClient.stepActive?func.apply(null,arguments):void 0}}function ifActive(func){return function(){return $scope.wifiClient.stepActive?func.apply(null,arguments):void 0}}function checkSelected(item){return _.isUndefined(profile.$WifiClientStep.BSSID)?!1:profile.$WifiClientStep.BSSID.toUpperCase()==item.BSSID.toUpperCase()&&profile.$WifiClientStep.Band==item.Band?!0:!1}function invertBand(band){return"2.4GHz"==band?"5GHz":"2.4GHz"}var helper=funcs.wifiHelper,profile=manualProfile.profile();$scope.wifiClient={profile:profile,stepActive:!1,scanLoading:!1,scanList:[],showList:function(){ngDialog.open({template:"dialogs/wifi_ep_list/dialog.tpl.html",className:"dialog_wifi_ep_list dialog_fixed_footer",controller:"WiFiEndPointListDialogCtrl",data:{checkSelected:checkSelected,band:profile.$InterfaceStep.MeshEnable?invertBand(profile.$InterfaceStep.MeshBand):void 0}}).closePromise.then(function(data){data&&_.isObject(data.value)&&selectEndpoint(data.value.ep)})},getAvailBands:function(){return[{name:"24ghz",value:"2.4GHz"},{name:"5ghz",value:"5GHz"}]},isWiFiRepeater:isWiFiRepeater,isWiFiClient:isWiFiClient,sortBy:ifActive(function(field){$scope.wifiClient.scanList.sort("asc"==$scope.wifiClient.sortDirection?sortByFieldAsc(field):function(field){return function(x,y){return"Channel"==field||"SignalStrength"==field?parseInt(x[field])<parseInt(y[field])?1:-1:x[field].toLowerCase()<y[field].toLowerCase()?1:-1}}(field))}),supportedModes:ifActive(function(){if(!$scope.wifiClient.endpoint)return[];var modesTemplate=function(){return[{name:"Open",value:"None"},{name:"WEP",value:"WEP"},{name:"WPA-PSK",value:"WPA-Personal"},{name:"WPA2-PSK",value:"WPA2-Personal"},{name:"WPA-PSK/WPA2-PSK mixed",value:"WPA-WPA2-Personal"},{name:"WPA3-SAE",value:"WPA3"},{name:"WPA2-PSK/WPA3-SAE mixed",value:"WPA2-WPA3"}]}(),modesSupported=$scope.wifiClient.endpoint.Security.ModesSupported.split(","),res=_.filter(modesTemplate,function(obj){return _.indexOf(modesSupported,obj.value)>=0});return res}),getDefaultKeysID:ifActive(function(){return helper.getDefaultKeysID()}),getEncrypTypes:ifActive(function(){if(!profile.$WifiClientStep.Security)return[];var mode=profile.$WifiClientStep.Security.ModeEnabled,openWEP=profile.$WifiClientStep.Security.OpenWEP;if("None"==mode&&openWEP)return["WEP"];switch(mode){case"None":return["NONE"];case"WEP":return["WEP"];case"WPA-Enterprise":return["TKIP"];case"WPA2-Enterprise":return["AES"];case"WPA-Personal":case"WPA2-Personal":case"WPA-WPA2-Personal":case"WPA-WPA2-Enterprise":return["TKIP","AES","TKIP+AES"];case"WPA3":case"WPA2-WPA3":return["AES"]}return[]}),changeEncrypType:ifActive(function(types){if(types&&$profile.$WifiClientStep){var encr=$profile.$WifiClientStep.Security.EncryptionType;_.contains(types,encr)||(profile.$WifiClientStep.Security.EncryptionType=types[0])}}),showSecurity:ifActive(function(type){return helper.checkSecurityType(type,profile.$WifiClientStep)}),validPSKKey:ifActive(function(pskKey){return helper.validPSKKey(pskKey)}),getWEPKeyLenMessage:ifActive(function(){return $scope.wifiClient.endpoint?$scope.wifiClient.profile.$WifiClientStep.Security.WEPasHEX?"wifi_invalid_wep_hex":"wifi_invalid_wep":null}),validWEPKey:ifActive(function(wepKey){return $scope.wifiClient.endpoint?helper.validWEPKey(wepKey,profile.$WifiClientStep):null}),supportedMacAddressClone:function(){return isWiFiClient()&&_.has(profile.$WifiClientStep,"MacAddressClone")},needCheckStandart:autoconf.BR2_PACKAGE_ANWEB_DSYSINIT,isLockBand:function(){return profile.$InterfaceStep.MeshEnable}},manualStepApiDispatcher.get().registerStepApi({name:"WiFiClientStep",onActivate:function(){$scope.wifiClient.stepActive=!0,wifiScan.pullInfo().then(activateClient)},onLeave:function(){var band="5GHz"==profile.$WifiClientStep.Band?"5":"2.4",Security=profile.$WifiClientStep.Security;$scope.wifiClient.stepActive=!1,isWiFiRepeater()&&(profile.$WiFiStep[2.4].SSID=profile.$WifiClientStep.SSID+getRepeaterPrefix(),profile.$WiFiStep[2.4].GuestSSID=profile.$WiFiStep[2.4].SSID+"_Guest",$rootScope.rootIsSupport5G&&(profile.$WiFiStep[5].SSID=profile.$WifiClientStep.SSID+getRepeaterPrefix(!0),profile.$WiFiStep[5].GuestSSID=profile.$WiFiStep[5].SSID+"_Guest")),Security&&Security.EncryptionType&&Security.PreSharedKey&&(profile.$WiFiStep[2.4].PSK=Security.PreSharedKey,profile.$WiFiStep[5]&&(profile.$WiFiStep[5].PSK=Security.PreSharedKey)),profile.$WiFiStep[band]&&_.isBoolean(profile.$WiFiStep[band].SuperMeshEnable)&&(profile.$WiFiStep[band].SuperMeshEnable=!1)}})}angular.module("wizard").controller("WiFiClientStepController",WiFiClientStepController),WiFiClientStepController.$inject=["$scope","$rootScope","manualProfile","manualStepApiDispatcher","devinfo","$q","funcs","device","wifiScan","ngDialog"];