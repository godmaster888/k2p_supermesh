"use strict";angular.module("wizard").controller("wizardManualCtrl",["$scope","$rootScope","funcs","$state","$controller","translate","manualModes","manualProfile","manualBuilder","devinfo","$timeout","dataShare","dongle","device","$stateParams","stepManager","manualStepApiDispatcher","manualStepList",function($scope,$rootScope,funcs,$state,$controller,translate,manualModes,manualProfile,manualBuilder,devinfo,$timeout,dataShare,dongle,device,$stateParams,stepManager,manualStepApiDispatcher,steps){function getItem(freq){return $rootScope.dlinkMobileApp.isUserInMobileApp()&&$rootScope.dlinkMobileApp.getValue&&$rootScope.dlinkMobileApp.hasGetValueFunc?$rootScope.dlinkMobileApp.getValue(freq):Promise.resolve(sessionStorage.getItem(freq))}function onData(data){function getLast4DigitsOfMac(){return data.deviceMac.replace(/:/g,"").slice(-4).toUpperCase()}if(data){if(devinfo.unsubscribe(initZones,onData),firstStart){if(data.needChangeSSID24&&!$rootScope.rootAutoGeneratedSSID)var devMac="-"+getLast4DigitsOfMac();else devMac="";profile.$InterfaceStep.DefaultMode="ap"==data.deviceMode?"AP":"Router",data.lan&&(profile.$LANStep.IPv4.StaticIP[1].Address=data.lan[0].ip,profile.$LANStep.IPv4.StaticIP[1]._DefaultAddress=_.clone(profile.$LANStep.IPv4.StaticIP[1].Address),profile.$LANStep.IPv4.StaticIP[1].SubnetMask=data.lan[0].mask,profile.$LANStep.IPv4.StaticIP[1]._DefaultSubnetMask=_.clone(profile.$LANStep.IPv4.StaticIP[1].SubnetMask),profile.$LANStep.IPv4.StaticIP[1]._DefaultStartIP=data.lan[0].start_ip,profile.$LANStep.IPv4.StaticIP[1]._DefaultEndIP=data.lan[0].end_ip,profile.$LANStep.LocalDomain.Enabled&&(profile.$LANStep.IPv4.StaticIP[1].AddnHostname="dlinkap"+getLast4DigitsOfMac().toLowerCase()+".local")),console.log("DATA",data),data.wifi_general?(profile.$WifiClientStep.SeparateClient=!(!data.wifi||!data.wifi.supportSeparateClient)||!0,profile.$WiFiStep[2.4].WithoutPass="OPEN"==data.wifi_general.f24.authMode,profile.$WiFiStep[2.4].SSID=(data.wifi_general.f24.ssid||"")+devMac,profile.$WiFiStep[2.4].OriginSSID=profile.$WiFiStep[2.4].SSID,profile.$WiFiStep[2.4].PSK=data.wifi_general.f24.WPAPSK||"",profile.$WiFiStep[2.4].OriginPSK=profile.$WiFiStep[2.4].PSK,profile.$WiFiStep[2.4].GuestSSID=(data.wifi_general.f24.ssid||"")+devMac+"_Guest",profile.$WiFiStep[2.4].OriginGuestSSID=profile.$WiFiStep[2.4].GuestSSID,profile.$WiFiStep[2.4].supportGuestAccess=!!data.wifi_general.f24.guestNetSupport||!0,profile.$WiFiStep[2.4].supportGuestNet=data.wifi_general.f24.guestNetMax>1||!0,data.needChangeSSID24&&!$rootScope.rootAutoGeneratedSSID&&(profile.$WiFiStep[2.4].defaultSSID=data.wifi_general.f24.ssid),profile.$WiFiStep[2.4].GuestMaxAssociatedDevices=data.wifi_general.f24.MaxStaNum,profile.$WiFiStep[2.4].supportMaxAssociatedDevices=!_.isUndefined(data.wifi_general.f24.MaxStaNum),profile.$WiFiStep[2.4].WPSPIN=data.wifi_general.f24.WPSPIN,profile.$WiFiStep[2.4].modeAvailable=data.wifi_general.f24.modeAvailable,profile.$WiFiStep[2.4].wirelessMode=data.wifi_general.f24.wirelessMode,profile.$WiFiStep[2.4].DefaultSecurityMode=getAuthMode(data.wifi_general.f24.authMode),data.wifi_general.f24.guestExists?(profile.$WiFiStep[2.4].GuestAP=!0,profile.$WiFiStep[2.4].GuestSSID=data.wifi_general.f24.guestSsid,profile.$WiFiStep[2.4].GuestWithoutPass="OPEN"==data.wifi_general.f24.guestAuthMode,profile.$WiFiStep[2.4].GuestPSK=data.wifi_general.f24.guestWPAPSK,profile.$WiFiStep[2.4].GuestMaxAssociatedDevices=data.wifi_general.f24.guestMaxStaNum):profile.$WiFiStep[2.4].GuestAP=!1,_.isUndefined(data.wifi_general.f24.guestBwRestrict)?_.isUndefined(data.wifi_general.f24.BwRestrict)||(profile.$WiFiStep[2.4].GuestBandwidthRestricted={value:data.wifi_general.f24.BwRestrict/1024,enable:0!=data.wifi_general.f24.BwRestrict,min:1,max:150}):profile.$WiFiStep[2.4].GuestBandwidthRestricted={value:data.wifi_general.f24.guestBwRestrict/1024,enable:0!=data.wifi_general.f24.guestBwRestrict,min:1,max:150},$rootScope.rootIsSupport5G?(profile.$WiFiStep[5].WithoutPass="OPEN"==data.wifi_general.f5.authMode,profile.$WiFiStep[5].SSID=(data.wifi_general.f5.ssid||"")+devMac,profile.$WiFiStep[5].OriginSSID=profile.$WiFiStep[5].SSID,profile.$WiFiStep[5].PSK=data.wifi_general.f5.WPAPSK||"",profile.$WiFiStep[5].GuestSSID=(data.wifi_general.f5.ssid||"")+devMac+"_Guest",profile.$WiFiStep[5].OriginGuestSSID=profile.$WiFiStep[5].GuestSSID,profile.$WiFiStep[5].UseOldSettings=!1,profile.$WiFiStep[5].supportGuestAccess=!!data.wifi_general.f5.guestNetSupport||!0,profile.$WiFiStep[5].supportGuestNet=data.wifi_general.f5.guestNetMax>1||!0,data.needChangeSSID5&&!$rootScope.rootAutoGeneratedSSID&&(profile.$WiFiStep[5].defaultSSID=data.wifi_general.f5.ssid),profile.$WiFiStep[5].GuestMaxAssociatedDevices=data.wifi_general.f5.MaxStaNum,profile.$WiFiStep[5].supportMaxAssociatedDevices=!_.isUndefined(data.wifi_general.f5.MaxStaNum),profile.$WiFiStep[5].WPSPIN=data.wifi_general.f5.WPSPIN,profile.$WiFiStep[5].modeAvailable=data.wifi_general.f5.modeAvailable,profile.$WiFiStep[5].wirelessMode=data.wifi_general.f5.wirelessMode,profile.$WiFiStep[5].DefaultSecurityMode=getAuthMode(data.wifi_general.f5.authMode),data.wifi_general.f5.guestExists?(profile.$WiFiStep[5].GuestAP=!0,profile.$WiFiStep[5].GuestSSID=data.wifi_general.f5.guestSsid,profile.$WiFiStep[5].GuestWithoutPass="OPEN"==data.wifi_general.f5.guestAuthMode,profile.$WiFiStep[5].GuestPSK=data.wifi_general.f5.guestWPAPSK,profile.$WiFiStep[5].GuestMaxAssociatedDevices=data.wifi_general.f5.guestMaxStaNum):profile.$WiFiStep[5].GuestAP=!1,_.isUndefined(data.wifi_general.f5.guestBwRestrict)?_.isUndefined(data.wifi_general.f5.BwRestrict)||(profile.$WiFiStep[5].GuestBandwidthRestricted={value:data.wifi_general.f5.BwRestrict/1024,enable:0!=data.wifi_general.f5.BwRestrict,min:1,max:450}):profile.$WiFiStep[5].GuestBandwidthRestricted={value:data.wifi_general.f5.guestBwRestrict/1024,enable:0!=data.wifi_general.f5.guestBwRestrict,min:1,max:450}):delete profile.$WiFiStep[5]):delete profile.$WiFiStep,profile.$InternetStep.Mac=data.client?data.client.mac:"12:34:56:67:90:AB",data.wifi_general.f24.exists&&($rootScope.gWifiChangeTest=manualBuilder.build(profile).Config.WiFi),manualProfile.backup(profile),console.log("profile",profile)}var devMac,client=data.client,ports=data.availPorts,hasManagamentPort=_.findWhere(ports,{management:!0});!_.isEmpty(client)&&"LAN"==client.name&&_.isUndefined(hasManagamentPort)?$scope.needShowNotification=!0:_.isEmpty(client)&&_.isUndefined(hasManagamentPort)&&($scope.needShowNotification=!0),$scope.data=data,$scope.ipv4IfaceName=data&&data.ipv4gw?data.ipv4gw.__ifname:null,$scope.infoLoading=!1}}function isSkiped(name){var step=_.find($scope.steps,function(s){return s.name==name});return!step||step.skip&&step.skip()}function getAuthMode(mode){return{OPEN:"None",SHARED:"WEP",WPAPSK:"WPA-Personal",WPA2PSK:"WPA2-Personal",WPAPSKWPA2PSK:"WPA-WPA2-Personal",WPA:"WPA-Enterprise",WPA2:"WPA2-Enterprise",WPA1WPA2:"WPA-WPA2-Enterprise"}[mode]}function getDefaultService(port){return profile.$IPTVStep.__template&&profile.$IPTVStep.__template[port]?profile.$IPTVStep.__template[port]:profile.$VoIPStep.__template&&profile.$VoIPStep.__template[port]?profile.$VoIPStep.__template[port]:""}function getIfaceTypes(){var ifaceTypes=[];return ifaceTypes.push("ethernet"),ifaceTypes.push("wifi_client"),ifaceTypes.push("usb_modem"),ifaceTypes}$scope.support={};var i,initZones="wifi|wifi_general|client|ports|version|notice|net",stepData=stepManager.getData(),firstStart=!manualProfile.profile(),profile=manualProfile.init(),isDSL=$scope.isDSL=$rootScope.gIsDSL;$scope.isATM=function(){return isDSL&&"adsl"==profile.$InterfaceStep.IfaceType},$scope.isPTM=function(){return isDSL&&"vdsl"==profile.$InterfaceStep.IfaceType},$scope.isEtherwan=function(){return"etherwan"==profile.$InterfaceStep.IfaceType},$scope.isEthernet=function(){return"ethernet"==profile.$InterfaceStep.IfaceType},$scope.isUSBModem=function(){return"usb_modem"==profile.$InterfaceStep.IfaceType},$scope.isDevModeAP=function(){var mode=manualModes[profile.$InterfaceStep.WiFiMode];return mode&&"ap"==mode.DeviceMode},$scope.vlanIDMin=parseInt(window.H_ANWEB_VLAN_ID_MIN)||10,$scope.ifaceTypes=getIfaceTypes(),$scope.supportWiFiClient=_.contains(getIfaceTypes(),"wifi_client"),$scope.needShowNotification=!1,console.log("profile",profile);var list=steps.getList($scope);$scope.steps=function(stepsList){return _.map(stepsList,function(step){var createGetter=function(prop){return function(){return _.result(step,prop)}};return _.extend({},step,{skip:createGetter("skip"),nextDisabled:createGetter("nextDisabled"),error:createGetter("error"),controller:_.isFunction(window[step.controller])?window[step.controller]:function(){},dummyCtrl:!_.isFunction(window[step.controller])})})}(list);var mbssid24,mbssid5G;getItem("mbssid").then(function(data){mbssid24=data}),getItem("5G_mbssid").then(function(data){mbssid5G=data}),$scope.stepsApiContainer=manualStepApiDispatcher.get($scope),dataShare.remove("FoundRegion"),$scope.infoLoading=!0,devinfo.init({need_auth:!0}),devinfo.onceAndSubscribe(initZones,onData);var etherName,modemName;if(etherName="summary_wired_conn",modemName="mobileinet",$scope.interfaceInfo={ethernet:{wanTypes:["pppoe","pppoe_unnum","statip","dynip","statipv6","dynipv6","pppoev6","dynpppoe","pppoedual","dynpppoedual","statpppoe","dynpptp","statpptp","dynl2tp","statl2tp","ipoeDual"],name:etherName},wifi_client:{wanTypes:["pppoe","pppoe_unnum","statip","dynip","statipv6","dynipv6","pppoev6","dynpppoe","pppoedual","dynpppoedual","statpppoe","dynpptp","statpptp","dynl2tp","statl2tp","ipoeDual"],name:autoconf.BR2_PACKAGE_ANWEB_CUSTOM_KYIVSTAR_35561?"dcc_wan_connection_other_metod_kyivstar":"wifi"},usb_modem:{wanTypes:function(){var dongleInfo=dongle.info(),modemType=dongleInfo?dongleInfo.actualMode:null;return _.isString(modemType)&&"3g"==modemType.toLowerCase()?["3g"]:["3g","lte"]},name:modemName,type:"wireless_connection"},optical_fiber:{wanTypes:["pppoe","pppoe_unnum","statip","dynip","statipv6","dynipv6","pppoev6","3g","dynpppoe","pppoedual","statpppoe","dynpptp","statpptp","dynl2tp","statl2tp"],name:"optical_fiber",type:"wired_connection"},adsl:{wanTypes:["pppoe","pppoe_unnum","statip","dynip","statipv6","dynipv6","pppoev6","dynpppoe","pppoedual","statpppoe","dynpptp","statpptp","dynl2tp","statl2tp","pppoa","ipoa"],name:"ADSL"},vdsl:{wanTypes:["pppoe","pppoe_unnum","statip","dynip","statipv6","dynipv6","pppoev6","dynpppoe","pppoedual","statpppoe","dynpptp","statpptp","dynl2tp","statl2tp"],name:"VDSL"},etherwan:{wanTypes:["pppoe","pppoe_unnum","statip","dynip","statipv6","dynipv6","pppoev6","dynpppoe","pppoedual","statpppoe","dynpptp","statpptp","dynl2tp","statl2tp"],name:"summary_eth_lan_conn"}},firstStart)1==$scope.ifaceTypes.length?(profile.$InterfaceStep.IfaceType=$scope.ifaceTypes[0],$scope.step=_.find($scope.steps,function(obj){return"InternetStep"==obj.name})):(dongle.cleanInfo(),$scope.step=_.first($scope.steps));else for(i=$scope.steps.length;i-->0;)if(!$scope.steps[i].dummyCtrl&&!$scope.steps[i].skip()){$scope.step=$scope.steps[i];break}$scope.stepsApiContainer.setCurrentStepApi($scope.step.name),$scope.$on("$destroy",function(){$scope.showAvailOverlay(!0)}),$scope.nextDisabled=function(){return $scope.infoLoading&&firstStart||$scope.step.nextDisabled()},$scope.isShowModes=function(){var modes=$scope.getAvailModes();return!modes.USB&&!modes["3G"]&&!modes.LTE&&_.size(modes)},$scope.isDisableModes=function(){return _.size($scope.getAvailModes())<2},$scope.getAvailModes=function(){return funo.filter($scope.getAllAvailModes(),function(mode){return mode.IfaceType.indexOf(profile.$InterfaceStep.IfaceType)>=0})},$scope.getAllAvailModes=function(){return funo.filter(manualModes,function(mode){return!$rootScope.devMode.devmode_hw_switch_support||$rootScope.devMode.device_mode===mode.DeviceMode})},$scope.getMode=function(){var mod=manualModes[profile.$InterfaceStep.WiFiMode];return{isAvailIface:function(ifaceType){return mod.IfaceType==ifaceType},isDisabled:function(flag){return mod&&mod.Disabled[flag]},applyDefaults:function(){mod&&profile.$WiFiStep&&(_.extend(profile.$WiFiStep[2.4],mod.Defaults),$rootScope.rootIsSupport5G&&_.extend(profile.$WiFiStep[5],mod.Defaults))}}},$scope.resetSSID=function(){profile.$WiFiStep[2.4].SSID=_.clone(profile.$WiFiStep[2.4].OriginSSID),profile.$WiFiStep[2.4].GuestSSID=_.clone(profile.$WiFiStep[2.4].OriginGuestSSID),$rootScope.rootIsSupport5G&&(profile.$WiFiStep[5].SSID=_.clone(profile.$WiFiStep[5].OriginSSID),profile.$WiFiStep[5].GuestSSID=_.clone(profile.$WiFiStep[5].OriginGuestSSID))},$scope.restoreWifi=function(freq){function restore(){var isOpen="NONE"==mbssid.EncrypType;profile.$WiFiStep[freq].SSID=mbssid.SSID,profile.$WiFiStep[freq].PSK=mbssid.WPAPSK,profile.$WiFiStep[freq].WithoutPass=isOpen}function needShow(){return profile.$WiFiStep[freq]&&mbssid.SSID.length&&mbssid.WPAPSK.length}function isDisabled(){var isSsidEqual=profile.$WiFiStep[freq].SSID==mbssid.SSID,isPskEqual=profile.$WiFiStep[freq].PSK==mbssid.WPAPSK;return isSsidEqual&&isPskEqual}var mbssid,mbssidStr=mbssid24;"5"==freq&&(mbssidStr=mbssid5G);try{return mbssid=JSON.parse(mbssidStr)[0],{restore:restore,needShow:needShow,isDisabled:isDisabled}}catch(e){return{restore:function(){},needShow:function(){return!1},isDisabled:function(){return!0}}}},$scope.changeStepTo=function(name){$scope.step=_.find($scope.steps,function(obj){return obj.name==name}),$scope.stepsApiContainer.setCurrentStepApi($scope.step.name)},$scope.nextStep=function(){var currentStep=$scope.stepsApiContainer.getCurrentStepApi();currentStep&&currentStep.next()||($scope.applyed=!0,$timeout(function(){$scope.$emit("goToErrorForm",!0);var i,profileClone,isUSBModem,isCableConnect,stepIndex=$scope.steps.indexOf($scope.step),error=$scope.step.error();if(error&&alert(error),!error&&$scope.manualStepForm.$valid){var nextStep=null;for(i=stepIndex;i<$scope.steps.length-1;i++)if($scope.steps[i+1]&&!$scope.steps[i+1].dummyCtrl&&!$scope.steps[i+1].skip()){nextStep=$scope.steps[i+1];break}if(nextStep)$scope.scrollToTop(),$scope.step=nextStep,$scope.stepsApiContainer.setCurrentStepApi($scope.step.name);else try{console.log("manual profile origin",profile),profileClone=JSON.parse(JSON.stringify(profile)),console.log("manual profile prepared",profileClone),isUSBModem="usb_modem"==profileClone.$InterfaceStep.IfaceType,isCableConnect=!_.contains(["usb_modem","wifi_client"],profileClone.$InterfaceStep.IfaceType),isSkiped("EtherwanStep")&&delete profileClone.$EtherWAN,isSkiped("WiFiWDSStep")&&delete profileClone.$WiFiWdsStep,isSkiped("SIPStep")&&delete profileClone.$SIPStep,isSkiped("LANStep")&&delete profileClone.$LANStep,isSkiped("PasswordStep")&&delete profileClone.$PasswordStep,profileClone.$HotSpotStep&&profileClone.$HotSpotStep.Enable&&(profileClone.$WiFiStep[2.4].GuestAP=!1,profileClone.$WiFiStep[2.4].WithoutPass=!0,profileClone.$WiFiStep[2.4].SSID=profileClone.$HotSpotStep.SSID24,$rootScope.rootIsSupport5G&&(profileClone.$WiFiStep[5].GuestAP=!1,profileClone.$WiFiStep[5].WithoutPass=!0,profileClone.$WiFiStep[5].SSID=profileClone.$HotSpotStep.SSID5)),$rootScope.nativeData=manualBuilder.build(profileClone),isUSBModem&&"wan_created"==dongle.state()&&(delete $rootScope.nativeData.Config.WAN,$rootScope.nativeData.AutoCreatedWAN=!0),console.log("manual native profile:",$rootScope.nativeData),manualStepApiDispatcher.clean(),stepManager.action("next",{cable:isCableConnect,isAP:$scope.isDevModeAP()})}catch(e){console.log("manual error",e)}}}))},$scope.prevStep=function(){var currentStep=$scope.stepsApiContainer.getCurrentStepApi();currentStep&&currentStep.prev()||$timeout(function(){var i,stepIndex=$scope.steps.indexOf($scope.step),prevStep=null;for(i=stepIndex;i>=0;i--)if($scope.steps[i-1]&&!$scope.steps[i-1].dummyCtrl&&!$scope.steps[i-1].skip()){prevStep=$scope.steps[i-1];break}0>stepIndex||(prevStep?($scope.scrollToTop(),$scope.step=prevStep,$scope.stepsApiContainer.setCurrentStepApi($scope.step.name)):(manualProfile.clean(),manualStepApiDispatcher.clean(),stepManager.action("prev")))})},$scope.isPrevHide=function(){var index,i;if(stepData.hide_prev){if(index=$scope.steps.indexOf($scope.step),index>0)for(i=0;index>i;i++)if(!$scope.steps[i].dummyCtrl&&!$scope.steps[i].skip())return!1;return!0}},$scope.$watch("step",function(){$scope.applyed=!1}),$rootScope.rootAvailPorts&&!_.size(profile.$Groups.lan)&&(profile.$Groups={all:[],lan:_.map($rootScope.rootLANPorts,function(port){return{name:port.name,service:getDefaultService(port.name)}}),wifi:_.map($rootScope.rootWIFIPorts,function(port){return{name:port.name,service:""}}),wan:_.map($rootScope.rootWANPorts,function(port){return{name:port.name,service:""}})},$rootScope.rootWANPort&&(profile.$__internetPort=$rootScope.rootWANPort.name),_.each(profile.$Groups.lan,function(port){profile.$Groups.all.push(port)}),_.each(profile.$Groups.wan,function(port){profile.$Groups.all.push(port)}))}]);