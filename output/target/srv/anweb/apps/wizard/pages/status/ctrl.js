"use strict";angular.module("wizard").controller("wizardStatusCtrl",["$q","$scope","$rootScope","$state","$interval","$timeout","devinfo","$http","profiles","$stateParams","autoupdate","translate","profileInspector","queryString","checkPing",function($q,$scope,$rootScope,$state,$interval,$timeout,devinfo,$http,profiles,$stateParams,autoupdate,translate,profile,queryString,ping){function isConnectionCreated(){var wans=profile.byPath("Config.WAN");return!!_.size(wans)||profile.isAutoCreatedWAN()}function shouldUseLocalDomain(){return"ap"===profile.byPath("Config.DeviceMode.Mode")&&"Static"!==profile.byPath("Config.LAN.1.IPv4.AddressingMode")&&profile.byPath("Config.LAN.1.IPv4.StaticIP.1.AddnHostname")}function getDeviceAddress(){var hostname;hostname=profile.byPath(shouldUseLocalDomain()?"Config.LAN.1.IPv4.StaticIP.1.AddnHostname":"Config.LAN.1.IPv4.StaticIP.1.Address"),hostname||(hostname=location.hostname);var port=location.port?":"+location.port:"";return location.protocol+"//"+hostname+port}function isDeviceAddressChanged(){if(shouldUseLocalDomain())return!0;var ip=profile.byPath("Config.LAN.1.IPv4.StaticIP.1.Address");return ip&&$rootScope.rootDeviceIP!=ip}function reloadAndFinish(){goAway(getDeviceAddress()+"/wizard/index-wizard.html?finish=y&updateCheck=y")}function reloadAndCheck(){goAway(getDeviceAddress()+"/wizard/index-wizard.html?reload=y")}function rebootDevice(){var next="status";next=encodeURIComponent(isConnectionCreated()?getNetAndUpdateURL():getDeviceAddress()+"/wizard/index-wizard.html?finish=y&updateCheck=y"),$state.go("reboot_status",{next:next,action:"reboot",nocheck:isDeviceAddressChanged()?"y":""})["finally"](function(){var mode;profiles.getMode?(mode=profiles.getMode($scope.nativeData),device.system.reboot(!0,mode)):device.system.reboot(!0)})}function getNetAndUpdateURL(){var authUpdate=$scope.isAutoupdateEnabled($scope.nativeData),redirect=encodeURIComponent(queryString.redirect_id?queryString.redirect_id:""),authUpdateURL=encodeURIComponent("/wizard/index-wizard.html?checkUpdate=1&redirect_id="+redirect);return getDeviceAddress()+"/trouble/index.html?redirect_id="+redirect+"&finishURL="+String(authUpdate?authUpdateURL:"connected")}function checkNetAndUpdate(){goAway(getNetAndUpdateURL())}function checkDeviceAdressChange(){return isDeviceAddressChanged()?(isConnectionCreated()?$scope.isAutoupdateEnabled($scope.nativeData)?checkNetAndUpdate():goAway(getDeviceAddress()+"/trouble/index.html"):reloadAndFinish(),!0):!1}function checkUpdate(){function onData(data){data&&(devinfo.unsubscribe("notice",onData),__unwatch(),data.updateVersion?($rootScope.rootUpdateVersion=data.updateVersion,$scope.changeStatusStep("updateAvail")):$state.go("finish",args))}var args={};$rootScope.rootUpdateChecked=!0,$stateParams.finish&&(args={net:"skiped"}),autoupdate.check().then(function(data){data&&data.version?($rootScope.rootUpdateVersion=data.version,$scope.changeStatusStep("updateAvail")):devinfo.subscribe("notice",onData)})["catch"](function(){$state.go("finish",args)});var __unwatch=$scope.$watch("circleCount",function(count){count>=15&&!$rootScope.rootUpdateVersion&&(devinfo.unsubscribe("notice",onData),$state.go("finish",args))})}function checkDevice(){function devinfoHandler(data){data&&$rootScope.gDeviceAvail&&(devinfo.unsubscribe("notice",devinfoHandler),$interval.cancel(intervalID),window.dbgNeedReboot||isReboot(data.systemNotice)?rebootDevice():checkDeviceAdressChange()||(isConnectionCreated()?$scope.changeStatusStep("netCheck"):$state.go("finish",{net:"skiped"})))}$scope.devCheckCount=0;var intervalID=$interval(function(){$scope.devCheckCount++,4==$scope.devCheckCount&&(devinfo.unsubscribe("notice",devinfoHandler),$interval.cancel(intervalID),$scope.changeStatusStep("devError"))},2e3);$rootScope.dlinkMobileApp.isUserInMobileApp()&&$rootScope.dlinkMobileApp.isPhoneConnectedToRouter().then(function(connected){connected&&checkDeviceAdressChange()}),devinfo.__activeTimer=!1,devinfo.subscribe("notice",devinfoHandler)}function checkNetwork(){function devinfoHandler(data){var connected,authUpdate,needPingCheck;data&&(devinfo.unsubscribe("net",devinfoHandler),connected=data.ipv4gw&&"Connected"==data.ipv4gw.connection_status||data.ipv6gw&&"Connected"==data.ipv6gw.connection_status,authUpdate=$scope.isAutoupdateEnabled($scope.nativeData),connected&&needPingCheck?ping.check().then(function(){return finishCheck(authUpdate)},function(){return checkNetAndUpdate()}):checkNetAndUpdate())}$rootScope.showOverlay(!0),$rootScope.showView(!1),devinfo.once("net").then(devinfoHandler),devinfo.subscribe("net",devinfoHandler),$scope.devCheckCount=0,$scope.netStatus="dcc_status_checkconn"}function finishCheck(authUpdate){$rootScope.showOverlay(!1),$rootScope.showView(!0),authUpdate?$scope.changeStatusStep("updateCheck"):$state.go("finish")}function applyConfig(applyDuration){function applyed(isError,isTimeout,info){if("apply"==$scope.step){if($scope.applyMax=0,devinfo.unsubscribe(zone,checkApply),"ap"===$rootScope.devMode.device_mode&&"ap"===profile.byPath("Config.DeviceMode.Mode")&&$rootScope.rootNoRebootLAN&&isDeviceAddressChanged())return reloadAndCheck();isError?$scope.changeStatusStep("applyErr"):isTimeout?$scope.changeStatusStep("info"):info&&(isReboot(info.systemNotice)||function(){return"router"==$rootScope.devMode.device_mode&&"router"==profile.byPath("Config.DeviceMode.Mode")&&profile.byPath("Config.VLAN")}())?rebootDevice():isConnectionCreated()?$scope.changeStatusStep("netCheck"):$state.go("finish",{net:"skiped"}),isError||isTimeout||!(""==info.systemNotice&&info.factorySettings||window.dbgNeedSave)||device.system.save&&device.system.save()}}function checkApply(info){$scope.applyStatus=null,info&&($scope.applyStatus=info.dccStatus,"dcc_failed"==info.dccStatus?applyed(!0,!1,info):"dcc_finished"==info.dccStatus?applyed(!1,!1,info):$scope.isSkiped&&checkIfTimeout())}function checkIfTimeout(){"dcc_applying"==$scope.applyStatus?applyed(!0):applyed(!1,!0)}var zone,zone="notice";$scope.applyMax=applyDuration,$scope.isSkiped=!1,$rootScope.setAutoAuthFromProfile(),$rootScope.$on("cricle_bar_finished",function(isSkiped){$scope.isSkiped=isSkiped,isSkiped||checkIfTimeout()}),devinfo.subscribe(zone,checkApply)}function getDuration(res){return 200==res.status&&res.data.result?res.data.result.duration:null}function isReboot(msg){return _.contains(["NeedImmediateReboot","NeedSaveAndReboot"],msg)}var initTimeout,native,_promise,initInterval;initTimeout=5e3,initInterval=2,devinfo.init({timeout:initTimeout,interval:initInterval});var device=$scope.device;if($scope.setNeedAuth(!1),$scope.awayURL=URL_HASH,$scope.step=queryString.reload?"devСheck":"apply",$scope.recheckCount=0,$scope.devCheckCount=0,$scope.devErrorIsWIFI=!0,$scope.devErrorWiFi={},$scope.applyMax=0,$scope.applyStatus=null,$scope.showAvailOverlay(!1),queryString.checkUpdate&&($scope.step="updateCheck"),$scope.changeStatusStep=function(step){$scope.step=step},$scope.toSite=function(){goAway($rootScope.getRedirectUrl())},$scope.isWiFiEnabled=function(){return profile.isWiFiBroadcasting("2.4GHz")},$scope.isWiFi5GEnabled=function(){return profile.isWiFiBroadcasting("5GHz")},$scope.isWiFiEncrypted=function(){return profile.isWiFiEncrypted("2.4GHz")},$scope.isWiFi5GEncrypted=function(){return profile.isWiFiEncrypted("5GHz")},$scope.isStaticLanIp=function(){return profile.hasStaticIp()},$scope.isSecondIpRangeAvailable=function(){return $scope.getIpRanges().length>1},$scope.getIpRanges=function(){if($scope.ipRanges)return $scope.ipRanges;var ip=$scope.nativeData.Config.LAN[1].IPv4.StaticIP[1].Address,mask=$scope.nativeData.Config.LAN[1].IPv4.StaticIP[1].SubnetMask,range=device.funcs.ipv4.subnet.getNetworkRange(ip,mask);return $scope.ipRanges=$scope.device.funcs.ipv4.subnet.splitNetworkRange(range,ip),$scope.ipRanges},$scope.$watch("step",function(step){switch(console.log("step is",step),$scope.circleCount=0,step){case"apply":devinfo.unsubscribe("notice|dongle"),applyConfig($rootScope.gApplyDuration?$rootScope.gApplyDuration:65e3);break;case"devСheck":checkDevice();break;case"netCheck":checkNetwork();break;case"updateCheck":checkUpdate()}}),$scope.getFirmwareMessage=function(){return translate("dcc_firmware_avail").replace(/<VERSION>/,$rootScope.rootUpdateVersion)},$scope.cancelUpdate=function(){$state.go("finish")},$scope.updateFinish=function(){queryString.finish?$state.go("finish",{net:"skiped"}):changeStatusStep("netCheck")},$scope.runUpdate=function(){$rootScope.showOverlay(!0),autoupdate.start().then(function(data){data&&data.duration?$state.go("reboot_status",{action:"update",next:"status",duration:data.duration,nocheck:data.force_reset?"y":""})["finally"](function(){$rootScope.setAutoAuthFromProfile(),$rootScope.showOverlay(!1)}):($rootScope.showOverlay(!1),$scope.changeStatusStep("updateFailed"))})["catch"](function(){$state.go("finish"),$rootScope.showOverlay(!1)})},$stateParams.step)$scope.changeStatusStep($stateParams.step);else switch($stateParams.prev){case"trouble":$scope.isAutoupdateEnabled($rootScope.nativeData)?$scope.changeStatusStep("updateCheck"):$state.go("finish");break;case"reboot_status":switch($stateParams.prev_action){case"update":devinfo.once("version").then(function(data){console.log("device version:",data.version),console.log("firmware version:",$rootScope.rootUpdateVersion),$scope.changeStatusStep(data.version==$rootScope.rootUpdateVersion||"develop"==data.version?"updateCompleted":"updateFailed")});break;case"apply_mode":console.log("start apply mode"),native=$scope.nativeData,$scope.step=null,$rootScope.setAutoAuth("admin","admin"),profiles.apply(native).then(function(res){console.log("profiles.apply res"),getDuration(res)?($rootScope.gApplyDuration=getDuration(res),$scope.changeStatusStep("apply")):$scope.changeStatusStep("applyErr")})["catch"](function(res){console.log("profiles.apply failed",res)});break;default:isConnectionCreated()?$scope.changeStatusStep("netCheck"):checkDeviceAdressChange()||$state.go("finish",{net:"skiped"})}}$stateParams.error?$scope.changeStatusStep("applyErr"):(_promise=$interval(function(){$scope.circleCount++},2e3),$scope.$on("$destroy",function(){$interval.cancel(_promise)}))}]);