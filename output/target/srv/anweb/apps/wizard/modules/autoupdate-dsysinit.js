"use strict";!function(){var app=angular.module(regdep("autoupdate"),[]);app.service("autoupdate",["$q","devinfo","cpe","funcs",function($q,devinfo,cpe,funcs){function check(){function check(data){var status,version;if(data[paths.config]&&funcs.fetchBranch(data[paths.config],"Device.Services.Autoupdate.")){if(status=data[paths.config].Device.Services.Autoupdate.FirmwareStatus,version=data[paths.config].Device.Services.Autoupdate.FirmwareVersion,"Processing"==status)return;"Available"==status?deferred.resolve({version:version}):deferred.reject(),devinfo.auth.unsubscribe(paths.config,check)}}var deferred=$q.defer();return cpe.SetParameterValues([{Name:paths.check,Value:!0}]).then(function(){devinfo.auth.subscribe(paths.config,check)})["catch"](deferred.reject),deferred.promise}var paths={config:"Device.Services.Autoupdate.",enable:"Device.Services.Autoupdate.Enable.",status:"Device.Services.Autoupdate.FirmwareStatus.",check:"Device.Services.Autoupdate.Check."};return{support:function(){return devinfo.auth.once(paths.enable).then(function(data){return data[paths.enable]&&funcs.fetchBranch(data[paths.enable],"Device.Services.Autoupdate.Enable")?Promise.resolve():Promise.reject()})},check:check,start:function(){var deferred=$q.defer();return devinfo.auth.once(paths.config).then(function(data){var config=data&&data[paths.config]?data[paths.config].Device.Services.Autoupdate:null;data?cpe.Download("Firmware",config.FirmwareURL,config.FirmwareMD5).then(function(){deferred.resolve({duration:2e5})})["catch"](deferred.reject):deferred.reject()})["catch"](deferred.reject),deferred.promise}}}])}();