"use strict";!function(){function FilebrowserController($scope,$q,devinfo,filebrowserUtil,funcs,snackbars,translate){function updateUsb(data){var isGetCurrentUsb;$scope.filesRoots=mapRootItems(data),null!=$scope.currentUsb&&(isGetCurrentUsb=_.findWhere($scope.filesRoots,{Alias:$scope.currentUsb}),isGetCurrentUsb||(snackbars.add(translate("filebrowser_usb_lost_connection")+": "+$scope.currentUsb),$scope.currentNode=null,$scope.currentUsb=null)),$scope.onDirectoryEnter({node:$scope.currentNode})}function mapRootItems(data){return _.map(data,function(item){return mapTreeItem(item,"")})}function mapTreeItem(container){var mapped=container;return mapped.actions=getNodeActions(mapped),mapped.rootActions=getCurrentNodeActions(mapped),mapped}function setCurrentNode(node){var current=$scope.currentNode;$scope.currentNode=node,$scope.currentNode.parent=current,$scope.currentUsb=null==$scope.currentUsb?node.Alias:$scope.currentUsb,$scope.onDirectoryEnter({node:$scope.currentNode})}function refreshNode(node){var deferred=$q.defer();return util.refreshNode(node).then(function(){var data=util.getNode();deferred.resolve(data),node.Children=_.map(data,function(child){return mapTreeItem(child,node.Path)})}),deferred.promise}function openParent(){$scope.currentNode=$scope.currentNode?$scope.currentNode.parent:null,$scope.currentUsb=$scope.currentNode?$scope.currentUsb:null,$scope.onDirectoryEnter({node:$scope.currentNode})}function removeNode(node){util.removeNode(node).then(function(){snackbars.add("filebrowser_remove_success"),refreshNode($scope.currentNode)})["catch"](function(err_message){snackbars.add(err_message&&""!=err_message?err_message:"filebrowser_remove_failed")})}function getNodeActions(node){return[{label:"act_delete",handler:function(){return removeNode(node)}}]}function getCurrentNodeActions(node){var actions=[{label:"act_refresh",handler:function(){return refreshNode(node)}}];return"root"!=node.Type&&actions.push({label:"act_delete",handler:function(){removeNode(node),openParent(node)}}),actions}var util=filebrowserUtil;_.extend($scope,{loadRoot:function(){var deferred=$q.defer();return $scope.loading=!0,util.fetchRootData(function(data){$scope.loading=!1,$scope.filesRoots=mapRootItems(data),deferred.resolve(),$scope.currentNode=null,$scope.currentUsb=null}),util.subscribeInfo(updateUsb,$scope),deferred.promise},rootIsLoaded:function(){return _.size($scope.filesRoots)},refreshNode:refreshNode,openNode:function(node){"file"!=node.Type&&(node.Children?setCurrentNode(node):refreshNode(node).then(function(){setCurrentNode(node)}))},openParent:openParent,getNodeActions:getNodeActions,typeFilter:function(node){return!$scope.onlyFolder||!node||"file"!=node.Type},currentNode:null,previousNode:null})}angular.module(regdep("filebrowser"),[]).directive("filebrowser",function(){return{templateUrl:"modules/filebrowser/filebrowser.tpl.html",link:function($scope){$scope.loadRoot().then(function(){$scope.$emit("filebrowser:load"),$scope.onFilesLoad()})},controller:FilebrowserController,restrict:"E",scope:{onDirectoryEnter:"&",onFilesLoad:"&",onlyFolder:"="}}})}();