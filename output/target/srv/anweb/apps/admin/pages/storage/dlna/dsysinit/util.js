"use strict";!function(){angular.module("app").service("dlnaUtil",["dlnaConstants","funcs","device","devinfo","cpe",function(constants,funcs,device,devinfo,cpe){function apply(settings){var data=converter.nativeToDsysinit(settings),__initConfig=converter.nativeToDsysinit(__initDlna),diff=funcs.newConfig.makeDiff(__initConfig,data,attrs);return _.isEmpty(diff)?Promise.resolve():cpe.ApplyDifference(diff).then(function(){return cpe.GetParameterValues([constants.dlna]).then(function(response){var data=funcs.buildTree(response.result.ParameterList),dirs=data.Device.Services.DLNA.MediaDirs,error=helper.isErrorInvalidPath(dirs);return error?Promise.reject(error):Promise.resolve()})})}function isChange(settings){if(!settings)return!1;var changes=funcs.getChangesWithRemoved(__initDlna,angular.copy(settings));return!_.isEmpty(changes)}function getSettings(){return config?config:{}}var config,attrs,__initDlna,converter=device.dlna.converter,helper=new device.samba.Helper;return{pull:function(){function success(response){var data=funcs.buildTree(response[0].result.ParameterList);attrs=funcs.buildTreeAttributes(response[1].result.ParameterList),config=converter.dsysinitToNative(data),config.MediaTypes=funcs.fetchBranch(attrs,constants.dlna+"MediaDirs.#template.Type.enum.");var dirs=data.Device.Services.DLNA.MediaDirs;return config.InvalidPath=_.some(dirs,function(dir){return 0==dir.ValidPath}),__initDlna=funcs.deepClone(config),Promise.resolve()}return Promise.all([cpe.GetParameterValues([constants.dlna]),cpe.GetParameterAttributes([constants.dlna])]).then(success)},apply:apply,getSettings:getSettings,isChange:isChange}}])}();