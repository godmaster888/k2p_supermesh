"use strict";!function(){angular.module("app").service("storageFtpUtil",["funcs","device","devinfo","cpe",function(funcs,device,devinfo,cpe){function apply(settings){var data=converter.nativeToDsysinit(settings),__initConfig=converter.nativeToDsysinit(__initFtp),diff=funcs.newConfig.makeDiff(__initConfig,data,attrs);return _.isEmpty(diff)?Promise.resolve():cpe.ApplyDifference(diff).then(function(){return cpe.GetParameterValues([ftp]).then(function(response){var data=funcs.buildTree(response.result.ParameterList),invalidPath=!data.Device.Services.FTP.ValidPath,nameDir=data.Device.Services.FTP.Directory;return invalidPath&&""!=nameDir?Promise.reject({name:"invalid_usb_path"}):Promise.resolve()})})}function getSettings(){return config?config:{}}var config,attrs,__initFtp,ftp="Device.Services.FTP.",converter=device.ftp.converter;return{pull:function(){function success(response){var data=funcs.buildTree(response[0].result.ParameterList);return attrs=funcs.buildTreeAttributes(response[1].result.ParameterList),config=converter.dsysinitToNative(data),config.InvalidPath=""==config.DirPath?!1:!config.ValidPath,__initFtp=funcs.deepClone(config),Promise.resolve()}return Promise.all([cpe.GetParameterValues([ftp]),cpe.GetParameterAttributes([ftp])]).then(success)},apply:apply,getSettings:getSettings}}])}();