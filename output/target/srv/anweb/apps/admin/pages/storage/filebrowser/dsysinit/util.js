"use strict";!function(){angular.module("app").service("filebrowserUtil",["filebrowserConstants","funcs","device","devinfo","cpe",function(constants,funcs,device,devinfo,cpe){function fetchRootData(cb){return devinfo.once(constants.FILES_ROOT).then(function(data){var result;data&&data[constants.FILES_ROOT]?(result=converter.dsysinitToNative({Files:data[constants.FILES_ROOT].Device.USB,Parent:"",Root:!0}),cb&&cb(result)):fetchRootData(cb)})}function getNode(){return nodeList}var nodeList=null,converter=device.filebrowser.converter;return{fetchRootData:fetchRootData,refreshNode:function(node){return cpe.FileBrowser("/mnt"+node.Path,"List").then(function(response){return nodeList=converter.dsysinitToNative({Files:response.result.Data,Parent:node.Path}),Promise.resolve()})},removeNode:function(node){return cpe.FileBrowser("/mnt"+node.Path,"Delete").then(function(){return Promise.resolve()})["catch"](function(response){var error=response&&response.error?response.error:{};return 9003==error.ext_code?Promise.reject("filebrowser_invalid_usb_path"):9001==error.ext_code?Promise.reject("filebrowser_filesystem_readonly"):Promise.reject()})},getNode:getNode,subscribeInfo:function(cb,$scope){devinfo.subscribe(constants.FILES_ROOT,function(response){var data;response&&response[constants.FILES_ROOT]&&(data=converter.dsysinitToNative({Files:response[constants.FILES_ROOT].Device.USB,Parent:"",Root:!0}),cb&&cb(data))},$scope)}}}])}();