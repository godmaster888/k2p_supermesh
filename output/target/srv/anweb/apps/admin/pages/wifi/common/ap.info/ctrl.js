"use strict";!function(){angular.module("app").controller("WifiCommonAPInfo",["$scope","$state","translate","navigationFilter",function($scope,$state,translate,navFilter){function list(){return $scope.wifi.APInfo.ap.list()}function add(){$state.go(currentState+".ap.add",{freq:device.wifi.getBandFreq()})}function edit(item,key){$state.go(currentState+".ap.edit",{freq:device.wifi.getBandFreq(),inx:key})}var device=$scope.device,helper=device.wifi.helper,navRules=navFilter.rules();$scope.wifi.APInfo={radio:null,ap:null,list:list,add:add,edit:edit,remove:function(items,keys){if(function(keys){return~keys.indexOf("1")}(keys))return void alert(translate("wifi_cant_remove_base_ap"));var ap=$scope.wifi.APInfo.ap;keys.forEach(function(key){ap.cut(key)})},getBSSID:function(ap){return ap.BSSID||"-"},getModeName:function(mode){return helper.getModeName(mode,$scope.wifi.APInfo.radio.OperatingStandards,$scope.wifi.APInfo.radio.ModeAvailable)},isShowAP:function(inx,ap){return navRules.HideWiFiAccessPointBySSID?!_.contains(navRules.HideWiFiAccessPointBySSID,ap.SSID):!/\-$/.test(inx)},isAddDisabled:function(){if(!$scope.wifi.APInfo.radio)return!1;var maxAPCount=$scope.wifi.APInfo.radio.AccessPointMax,currectAPCount=$scope.wifi.APInfo.radio.AccessPointNumberOfEntries;return currectAPCount>=maxAPCount},existDeletedAP:function(){return Object.keys(list()).some(function(key){return/\-$/.test(key)})}},$scope.$watch(function(){return device.wifi.getBandFreq()},function(newBand,oldBand){var band;!newBand||$scope.wifi.APInfo.radio&&_.isEqual(newBand,oldBand)||(band=device.wifi.getBand(0),$scope.wifi.APInfo.radio=band.radio,$scope.wifi.APInfo.ap=band.ap)}),$scope.isOpen=function(ap){var apInfo=$scope.wifi.APInfo,security=apInfo.getModeName(ap.Security.ModeEnabled);return"Open"==security&&"NONE"==ap.Security.EncryptionType};var currentState=$state.current.name.split(".");currentState.pop(),currentState=currentState.join("."),$scope.getShort=function(ap){return $scope.wifi.APInfo.getBSSID(ap)}}])}();