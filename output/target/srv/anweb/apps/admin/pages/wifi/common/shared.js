"use strict";!function(){angular.module("app").service("wifiCommonShared",["$rootScope","$q","$state","$timeout","translate","ngDialog","devinfo","device",function($rootScope,$q,$state,$timeout,translate,ngDialog,devinfo,device){function getDialogOpenListener(dialogId,dialogOpenedCb){return $rootScope.$on("ngDialog.opened",function(e,$dialog){dialogId===$dialog.attr("id")&&dialogOpenedCb()})}function __pullWifi(){var deferred=$q.defer();return device.wifi.pullCommon(function(){deferred.resolve()}),deferred.promise}function __pullClient(){return devinfo.once("client").then(function(result){return device.wifi.setClientInfo(result.client),result})}function __showDeviceLossMsg(deviceLoss){return function(options){return ngDialog.open({template:"dialogs/wifi_device_loss/dialog.tpl.html",controller:"WifiDeviceLossDialogCtrl",className:"wifi_device_loss_dialog",data:options})}(deviceLoss)}return{activate:function(){return __pullWifi().then(__pullClient)},apply:function(options){function __successCb(){var pageWifiCommonPath=_.initial($state.current.name.split("."),2).join(".")+".common";action&&"ap"==action?$state.go(pageWifiCommonPath,{freq:freq}):$state.go($state.current,{},{reload:!0})}function __errorCb(){$state.go("error",{code:"msg_push_error",message:"msg_error_desc"})}function applyHandler(){function pushCb(error){overlay.stop(overlayId),overlayId=null,deviceLoss.loss||(device.wifi.isWirelessClient()?__successCb():error?__errorCb():__successCb())}function stopOverlay(){overlayId&&overlay.stop(overlayId)}var overlay=$rootScope.overlay.circular,overlayId=overlay.start();onlyRegulatoryDomain?device.wifi.push(pushCb,!1,!0)["finally"](stopOverlay):device.wifi.push(pushCb)["finally"](stopOverlay)}var action,freq,onlyRegulatoryDomain,properties,eventOpen;options&&(action=options.action,freq=options.freq,onlyRegulatoryDomain=options.onlyRegulatoryDomain);var deviceLoss=device.wifi.checkDeviceLoss();deviceLoss.loss?(properties=__showDeviceLossMsg(deviceLoss),eventOpen=getDialogOpenListener(properties.id,applyHandler),properties.closePromise.then(__successCb)["finally"](function(){eventOpen()})):applyHandler()}}}])}();