"use strict";!function(){angular.module("app").controllerProvider.register("EtherwanCtrl",["$scope","$rootScope","$state","devinfo","device","translate","snackbars","$q","overlay-simple","$timeout","ngDialog",function($scope,$rootScope,$state,devinfo,device,translate,snackbars,$q,overlay,$timeout,ngDialog){function activate(){util.pull().then(function(){devinfo.onceAndSubscribe("client|ports",function(data){updatePortInfo(data)},$scope),etherwan.data=util.data,etherwan.portsMap=util.getPortsMap(),$scope.supportMultiwan=util.isSupportMultiwan(),etherwan.isActivate=!0,$scope.$emit("pageload")},function(){$state.go("error",{code:"msg_pull_error",message:"msg_error_desc"})})}function updatePortInfo(data){var managementPort=data?_.findWhere(data.availPorts,{management:!0}):null;$scope.managementPort=managementPort?managementPort.alias?managementPort.alias:managementPort.name:null}var util=device.etherwan;$scope.etherwan={isActivate:!1,data:null,portsMap:null,apply:function(){function closeDialog(){var deferred=$q.defer();return deferred.reject()}var data=$scope.etherwan.data,hasPrevConn=_.find(data,function(p){return!p.is_wan&&p.hasConnection.length>0});if(hasPrevConn)return ngDialog.open({template:"dialogs/etherwan_confirm/dialog.tpl.html",controller:"EtherwanConfirmDialogCtrl",className:"dialog_confirm",data:{content:translate("vlan_need_remove_conns")+": "+hasPrevConn.hasConnection.join(", ")}}).closePromise.then(closeDialog);var deferred=$q.defer();return overlay.start({event:"vlan.timeout"}),util.push().then(function(){snackbars.add("msg_rpc_write_success"),deferred.resolve()},function(){snackbars.add("msg_rpc_write_error"),deferred.reject()})["finally"](function(){overlay.stop({event:"vlan.timeout"}),activate()}),deferred.promise},getDesc:function(){return translate("etherwan_mediatek_desc_main")},getMultiwanDesc:function(){var href=$scope.pageDetails.vlanList[0].url;return translate("etherwan_multi_desc_main",{link:"<a href='"+href+"'>VLAN</a>",trustAsHtml:!0})},getDescOn:function(){return""},getDescOff:function(){return""},changeState:function(port){var obj=util.data[port];obj.is_available&&!$scope.portIsManagement(port)&&($scope.supportMultiwan?util.data[port].is_wan=util.data[port].is_wan?!1:!0:_.each(util.data,function(elem,key){elem.is_wan=key==port&&0==elem.is_wan?!0:!1}))},getIconClass:function(port){var obj=util.data[port];return obj.type?obj.type:"ethernet"},getBlockState:function(port){if(!util.data[port])return"";var obj=util.data[port];return!obj.is_available||$scope.portIsManagement(port)?"port-block--blocked":obj.is_wan?"port-block--selected":""},wasModified:util.wasModified.bind(util),clean:util.clean.bind(util)};var etherwan=$scope.etherwan;$scope.$on("$destroy",function(){util.clean()}),activate(),$scope.portIsManagement=function(port){return util.data[port].alias==$scope.managementPort}}])}();