"use strict";function igmpCtrl($scope,wanHelper,util,snackbars){function init(){function success(res){function getConnByFlag(conns,flag){var conn=conns.find(function(conn){return conn.Flags&&conn.Flags[flag]});return conn?conn.__Path:null}function getOptions(raws,type,curValue){var rawsOptions=getRawsOptions(raws,type);return _.some(rawsOptions,function(item){return item.value==curValue})||(rawsOptions=_.union([{label:"st_not_selected",value:""}],rawsOptions)),rawsOptions}function getRawsOptions(raws,type){return _.chain(raws).filter(function(raw){return raw.__Type==type}).map(function(raw){return{label:raw.Name,value:raw.__Path}}).value()}$scope.settings=util.getConfig(),$scope.settings.igmp=_.defaults($scope.settings.igmp,settings_default.igmp),$scope.settings.mld=_.defaults($scope.settings.mld,settings_default.mld),dataWan=res[0];var raws=dataWan.__flatConnList.filter(function(c){return"L2TPv3"!=c.MediaType});$scope.conns.igmp=getConnByFlag(raws,"IGMP")||"",options.igmp.connections=getOptions(raws,"IPv4oE",$scope.conns.igmp),$scope.conns.mld=getConnByFlag(raws,"MLDProxy")||"",options.mld.connections=getOptions(raws,"IPv6oE",$scope.conns.mld),__backupIgmp=angular.copy($scope.settings.igmp),__backupMld=angular.copy($scope.settings.mld),__backupWan=angular.copy($scope.conns),$scope.$emit("pageload")}Promise.all([wanHelper.pull(),util.pull()]).then(success)["catch"](function(){snackbars.add("msg_rpc_read_error")})["finally"](function(){overlayId&&($scope.overlay.circular.stop(overlayId),overlayId=null)})}function wasModified(target){function wasModifiedIGMP(){return __backupIgmp&&!_.isEqual(__backupIgmp,angular.copy($scope.settings.igmp))}function wasModifiedMLD(){return __backupMld&&!_.isEqual(__backupMld,angular.copy($scope.settings.mld))}function wasModifiedIgmpWAN(){return __backupWan&&!_.isEqual(__backupWan.igmp,angular.copy($scope.conns.igmp))}function wasModifiedMldWAN(){return __backupWan&&!_.isEqual(__backupWan.mld,angular.copy($scope.conns.mld))}switch(target){case"igmp":return wasModifiedIGMP();case"mld":return wasModifiedMLD();case"wan_igmp":return wasModifiedIgmpWAN();case"wan_mld":return wasModifiedMldWAN();default:return wasModifiedIGMP()||wasModifiedMLD()||wasModifiedIgmpWAN()||wasModifiedMldWAN()}}function save(){function setFlags(data,type,curPath,flag){var conn;data[type]=dataWan[type];for(var i in data[type].Connection){if(conn=data[type].Connection[i],!conn.Flags)return;conn.Flags[flag]=type+".Connection."+i+"."==curPath?!0:!1}}function success(){snackbars.add("msg_rpc_write_success"),init()}function error(){$scope.overlay.circular.stop(overlayId),overlayId=null,snackbars.add("msg_rpc_write_error")}overlayId=$scope.overlay.circular.start();var dataToPush,promiseUtil=[];if((wasModified("igmp")||wasModified("mld"))&&promiseUtil.push(util.apply($scope.settings)),wasModified("wan_igmp")){var dataToPush={};$scope.settings.igmp&&setFlags(dataToPush,"IPv4oE",$scope.conns.igmp,"IGMP"),promiseUtil.push(wanHelper.push(dataToPush,[],dataWan))}wasModified("wan_mld")&&(dataToPush={},$scope.settings.mld&&setFlags(dataToPush,"IPv6oE",$scope.conns.mld,"MLDProxy"),promiseUtil.push(wanHelper.push(dataToPush,[],dataWan))),promiseUtil.length?Promise.all(promiseUtil).then(success)["catch"](error):error()}var options={igmp:{connections:null,versions:[{label:"IGMPv2",value:2},{label:"IGMPv3",value:3}]},mld:{connections:null,versions:[{label:"MLDv1v2",value:0},{label:"MLDv1",value:1},{label:"MLDv2",value:2}]}},settings_default={igmp:{enable:!1,version:2},mld:{enabled:!1,version:0}};$scope.conns={igmp:"",mld:""},$scope.options=options,$scope.settings={};var dataWan=null,__backupIgmp=null,__backupMld=null,__backupWan=null,overlayId=null;$scope.fn={wasModified:wasModified,supportAndReadyIgmp:function(){return $scope.settings.igmp?!0:!1},supportIgmpVersion:function(){return void 0!=$scope.settings.igmp.version},supportIgmpSnooping:function(){return void 0!=$scope.settings.igmp.igmpsnooping},supportZeroSrcAddr:function(){return _.isBoolean($scope.settings.igmp.zeroSrcAddr)},supportAndReadyMld:function(){return $scope.settings.mld?!0:!1},save:save},init()}angular.module("app").controllerProvider.register("igmpCtrl",["$scope","wanPage","igmpUtil","snackbars",igmpCtrl]);