"use strict";!function(){angular.module("app").controller("lanStaticAddressesCtrl",["$scope","$state","ngDialog","lanHelper",function($scope,$state,ngDialog,helper){function update(){var iface=lan["interface"].getCurrent();iface&&("ipv4"==ipVersion&&$scope.staticAddresses.update(iface.ipv4.dhcp.staticAddress),"ipv6"==ipVersion&&$scope.staticAddresses.update(iface.ipv6.dhcp.staticAddress))}var lan=$scope.device.lan,ipVersion=$scope.ipv4&&$scope.ipv4.isActive?"ipv4":"ipv6",supported=$scope.ipv4&&$scope.ipv4.isActive?helper.supported.ipv4():helper.supported.ipv6();$scope.staticAddresses={supported:supported.DHCP.Server.StaticAddress,list:{},isEmpty:function(){return this.list&&0==_.size(this.list)},reset:function(){this.list={};var rules=this.util.list();_.each(rules,function(rule,instance){"cut"!=this.util.getInstanceState(instance)&&(this.list[instance]=rule)},this)},update:function(util){this.util=util,this.mode=util.mode(),this.reset()},onAdd:function(){this.dialog({action:"add",version:ipVersion})},onEdit:function(item,instance){this.dialog({action:"edit",data:item,version:ipVersion,instance:instance})},onDelete:function(items,instances){_.each(instances,function(instance){"add"==this.util.getInstanceState(instance)?this.util.remove(instance):this.util.cut(instance)},this),this.reset()},onSelectClients:function(){this.dialogSelectClients({ipversion:ipVersion,comment:"lan_dhcp_stat_addr_select_clients_comment"})},getMiniInfo:function(item){var info="";return item.MACAddress&&(info+=item.MACAddress),item.MACAddress&&item.Hostname&&(info+="/"),item.Hostname&&(info+=item.Hostname),info},dialog:function(options){var self=this;(function(options){return ngDialog.open({template:"dialogs/dhcp_static_address/dialog.tpl.html",controller:"DHCPStaticAddressDialogCtrl",scope:$scope,data:options})})(options).closePromise.then(function(dialogData){var util=self.util,result=dialogData.value;if(!_.isNull(result)){switch(result.action){case"add":util.add(result.data);break;case"edit":util.cut(result.instance),util.set(result.data,result.instance);break;case"remove":"add"==util.getInstanceState(result.instance)?util.remove(result.instance):util.cut(result.instance)}self.reset()}})},dialogSelectClients:function(options){function normalization(item){var result={},host=item.host?item.host:item.hostname?item.hostname:"";return result.IPAddress=item.ip?item.ip:"",result.MACAddress=item.mac?item.mac.toUpperCase():"",result.Hostname=host,result.Mode=item.mode?item.mode:"",result}function filterUniq(arr){var result=[];return _.each(arr,function(elem){var checkUniq=0;_.each(result,function(item){(elem.IPAddress==item.IPAddress||elem.Hostname&&elem.Hostname==item.Hostname||elem.MACAddress==item.MACAddress)&&checkUniq++}),0==checkUniq&&result.push(elem)}),result}var self=this;(function(options){return ngDialog.open({template:"dialogs/device_clients_list/dialog.tpl.html",controller:"DeviceClientsListDialogCtrl",data:options})})(options).closePromise.then(function(dialogData){var util=self.util,list=dialogData.value;!_.isNull(list)&&_.isArray(list)&&(list=_.map(list,normalization),list=filterUniq(list),list=_.filter(list,function(item){return!util.isUseRule(item)}),list.length&&(_.each(list,function(item){util.add(item)}),self.reset()))})}},update(),$scope.$on("lan.update",update),$scope.$on("lan.interface.update",update)}])}();