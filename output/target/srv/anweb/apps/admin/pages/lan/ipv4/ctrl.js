"use strict";!function(){angular.module("app").controller("lanIPv4Ctrl",["$scope","$state","ngDialog","lanHelper","devinfo","cookie","funcs",function($scope,$state,ngDialog,helper,devinfo,cookie){function update(){iface=lan["interface"].getCurrent(),iface&&$scope.ipv4.update(iface.ipv4)}var iface,lan=$scope.device.lan,supported=helper.supported.ipv4(),constraints=helper.constraints.ipv4(),isAPMode="ap"===cookie.get("device_mode");$scope.ipv4={isActive:!1,supported:supported,constraints:constraints,util:null,data:null,needShowDropMultiCastWarn:!1,addressingModes:function(){return _.filter(constraints.addressingModes,function(obj){return _.contains(supported.AddressingModeAvailable,obj.value)})}(),showDNS:function(){return autoconf.BR2_PACKAGE_ANWEB_DSYSINIT&&isAPMode&&"Dynamic"==$scope.ipv4.data.AddressingMode},update:function(util){this.util=util,this.data=this.util.data(),this.staticIP.update(util.staticIP),this.dhcp.update(util.dhcp)},getMinHosts:function(){return"Disable"==$scope.ipv4.dhcp.data.Mode?constraints.MinHostsDhcpOff:constraints.MinHosts}},$scope.ipv4.staticIP={util:null,list:[],basic:{instance:null,data:null},alias:{instance:null,data:null},hasAlias:function(){return _.size(this.list)>1},update:function(util){this.util=util,this.util.setOptions({MinHosts:constraints.MinHosts,MinHostsDhcpOff:constraints.MinHostsDhcpOff,MaxHosts:constraints.MaxHosts}),this.list=this.util.list(),this.basic.instance="1",this.basic.data=this.util.get("1"),this.hasAlias()&&(this.alias.instance="2",this.alias.data=this.util.get("2"))},validation:function(value,param,obj){var conflicts,data=obj.data,instance=obj.instance;if(!data)return null;var dhcpOffFlag="Disable"==$scope.ipv4.dhcp.data.Mode?!0:!1,errors=this.util.validation(data,dhcpOffFlag,constraints.MinHosts,isAPMode);return errors[param].length?errors[param][0]:"Address"==param&&(conflicts=this.util.conflicts(instance),conflicts.length)?"lan_error_subnet_conflicts":null},isDisabled:function(){return $scope.ipv4.data&&$scope.ipv4.data.AddressingMode?"Static"!=$scope.ipv4.data.AddressingMode:!1}},$scope.ipv4.dhcp={util:null,data:null,modes:function(){return $scope.ipv4.supported.AddressingMode?_.without(constraints.dhcp.modes,_.findWhere(constraints.dhcp.modes,{value:"Relay"})):constraints.dhcp.modes}(),update:function(util){this.util=util,this.data=this.util.data()},validation:function(value,param){if(!this.data)return null;var errors=this.util.validation(this.data,constraints.MinHosts,isAPMode);return errors[param].length?errors[param][0]:null},validationOnSubmit:function(value,param){return $scope.form.submitted?this.validation(value,param):!1},disabled:function(addrMode){return addrMode?"Dynamic"==addrMode&&autoconf.BR2_PACKAGE_ANWEB_DSYSINIT:!1},isMultiRelay:function(){return!autoconf.BR2_PACKAGE_ANWEB_DSYSINIT}},function(){var radio1="Device.WiFi.Radio.1.Advanced.DropMulticast",radio2="Device.WiFi.Radio.2.Advanced.DropMulticast";devinfo.once(radio1+"|"+radio2).then(function(data){(data[radio1]&&data[radio1].Device&&data[radio1].Device.WiFi.Radio[1].Advanced.DropMulticast||data[radio2]&&data[radio2].Device&&data[radio2].Device.WiFi.Radio[2].Advanced.DropMulticast)&&($scope.ipv4.needShowDropMultiCastWarn=!0)})}(),isAPMode&&function(){$scope.$watch("ipv4.data.AddressingMode",function(mode){var path="Device.Network.Server.DHCP.1";"Dynamic"==mode?devinfo.onceAndSubscribe(path,function(data){if(data){var dhcpStatus=data[path].Device.Network.Server.DHCP[1].Status,IPv4Mode=data[path].Device.Network.Server.DHCP[1].IPv4Mode,RelayIP=data[path].Device.Network.Server.DHCP[1].RelayIP;"None"==IPv4Mode||"Disabled"==dhcpStatus?($scope.ipv4.dhcp.data.Mode="Disable",$scope.ipv4.dhcp.data.DisabledChange=!0):$scope.ipv4.dhcp.data.Mode=""!=RelayIP?"Relay":"Server"}},$scope):devinfo.unsubscribe(path)})}(),update(),function(){$scope.hostNameExample=isAPMode?"dlinkap.local./":"dlinkrouter.local./"}(),$scope.$on("lan.update",update),$scope.$on("lan.interface.update",update),$scope.$on("lan.ipversion",function($event,version){$scope.ipv4.isActive="IPv4"==version})}])}();