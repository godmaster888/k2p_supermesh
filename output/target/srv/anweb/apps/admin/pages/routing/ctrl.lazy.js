"use strict";angular.module("app").controllerProvider.register("RoutingCtrl",["$scope","routingUtil","ngDialog","funcs","$state","snackbars","translate",function($scope,util,ngDialog,funcs,$state,snackbars,translate){function init(overlayId){util.pull().then(function(){routing.config=util.getConfig(),__backupHwIpv6Route=angular.copy(routing.config.hwIPv6Route)})["catch"](function(){$state.go("error",{code:"msg_pull_error",message:"msg_error_desc"})})["finally"](function(){overlayId&&overlay.stop(overlayId),$scope.$emit("pageload"),routing.isActivate=!0})}function applyRule(rule,id){var overlayId=overlay.start();util.applyRule(rule,id).then(function(){snackbars.add("msg_apply_success"),init(overlayId)})["catch"](function(){overlay.stop(overlayId),$state.go("error",{code:"msg_push_error",message:"msg_error_desc"})})}function hwIPv6WasModifed(){return __backupHwIpv6Route&&!funcs.deepEqual(__backupHwIpv6Route,routing.config.hwIPv6Route)}function isEnabled(item){return item.Enable&&item.Available?!0:!1}function openDialog(id,isNew){ngDialog.open({template:"/admin/dialogs/routing_form/dialog.tpl.html",className:"ddns_dialog",controller:"RoutingDialogCtrl",resolve:funcs.getLazyResolve("/admin/dialogs/routing_form/ctrl.lazy.js","RoutingDialogCtrl"),data:{config:routing.config,id:id,isNew:isNew},scope:$scope}).closePromise.then(function(data){data.value&&applyRule(data.value,id)})}$scope.routing={config:null,isActivate:!1,add:function(){openDialog(null,!0)},edit:function(item){openDialog(item.__id,!1)},remove:function(items){var overlayId=overlay.start();util.removeRules(items).then(function(){snackbars.add("msg_rpc_remove_success"),init(overlayId)})["catch"](function(){overlay.stop(overlayId),$state.go("error",{code:"removeError",message:"removeErrorDesc"})})},applyHwRoute:function(){var overlayId=overlay.start();util.applyHwRoute(routing.config.hwIPv6Route).then(function(){snackbars.add("msg_apply_success"),init(overlayId)})["catch"](function(){overlay.stop(overlayId),$state.go("error",{code:"msg_push_error",message:"msg_error_desc"})})},hwIPv6WasModifed:hwIPv6WasModifed,isEmptyRules:function(){return routing.config&&0==routing.config.Routes.length},getIpAddrWithMask:function(item){return"IPv6"==item.IPVersion?item.IPAddress:item.IPAddress+"/"+funcs.ipv4.mask["short"](item.SubnetMask)},getMiniInfo:function(item){var info=[];return info.push(item.GatewayAddress?item.GatewayAddress+", ":item.IfaceName+", "),item.Metric&&info.push(translate("metric")+" "+item.Metric+", "),info.push(isEnabled(item)?translate("st_enabled"):translate("st_disabled")),info.join("")},getGateway:function(item){return item.GatewayAddress?item.GatewayAddress:"-"},getStatus:function(item){return item.Enable?item.Available?"on":"off":"disconnected"},getTableName:function(item){var tables=routing.config.TableList[item.IPVersion],table=_.find(tables,function(t){return t.Link==item.Table});return table?table.Name:"-"}};var routing=$scope.routing,overlay=$scope.overlay.circular,__backupHwIpv6Route=null;init(),$scope.getIfaceKey=function(name){return"routing_auto_iface"==name?"auto":name}}]);