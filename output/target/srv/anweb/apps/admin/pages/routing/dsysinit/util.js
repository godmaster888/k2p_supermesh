"use strict";!function(){angular.module("app").service("routingUtil",["cpe","device","funcs","translate","navigationFilter",function(cpe,device,funcs,translate,navigationFilter){function getConfig(){return angular.copy(nativeConfig)}function removeRules(items){var newConfig=funcs.deepClone(__initDsysinitConfig);_.each(items,function(item){var version=item.IPVersion,id=item.__id;funcs.cutBranch(newConfig,routingPath+version+".Routes."+id)});var diff=funcs.newConfig.makeDiff(__initDsysinitConfig,newConfig,dsysinitAttrs);return cpe.ApplyDifference(diff)}function applyRule(rule,id){var newConfig=funcs.deepClone(__initNativeConfig);!function(config,rule,id){var index=_.findIndex(config.Routes,function(e){return e.__id==id&&e.IPVersion==rule.InitVersion});return rule.InitVersion&&rule.IPVersion!=rule.InitVersion?(config.Routes.push(rule),void config.Routes.splice(index,1)):void(-1==index?config.Routes.push(rule):config.Routes[index]=rule)}(newConfig,rule,id);var newDsysinitConfig=converter.nativeToDsysinit(newConfig),initDsysinitConfig=converter.nativeToDsysinit(__initNativeConfig);newDsysinitConfig.Device.Routing.IPv4||funcs.setValue("Device.Routing.IPv4.Routes",{},newDsysinitConfig),newDsysinitConfig.Device.Routing.IPv6||funcs.setValue("Device.Routing.IPv6.Routes",{},newDsysinitConfig);var diff=funcs.newConfig.makeDiff(initDsysinitConfig,newDsysinitConfig,dsysinitAttrs);return cpe.ApplyDifference(diff)}var nativeConfig=null,dsysinitConfig=null,__initNativeConfig=null,__initDsysinitConfig=null,dsysinitAttrs=null,customRules=navigationFilter.rules()||{},converter=device.routing.converter,routingPath="Device.Routing.",configPaths=["Device.Network.",routingPath,"Device.Switch.Switches.","Device.Network.Connection.","Device.Network.Settings.PPPClient.","Device.Network.Group."];return configPaths.push("Device.USB.Connection."),{getConfig:getConfig,getAttrs:function(){return null},pull:function(){function success(response){return dsysinitConfig=funcs.buildTree(response[0].result.ParameterList),dsysinitAttrs=funcs.buildTreeAttributes(response[1].result.ParameterList),dsysinitConfig.hideTRVoip=customRules.HideTRVoipStats,nativeConfig=converter.dsysinitToNative({config:dsysinitConfig}),__initDsysinitConfig=funcs.deepClone(dsysinitConfig),__initNativeConfig=funcs.deepClone(nativeConfig),Promise.resolve()}return Promise.all([cpe.GetParameterValues(configPaths),cpe.GetParameterAttributes([routingPath])]).then(success)},removeRules:removeRules,applyRule:applyRule,applyHwRoute:function(){return Promise.resolve()}}}])}();