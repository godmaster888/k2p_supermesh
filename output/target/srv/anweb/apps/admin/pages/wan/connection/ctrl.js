"use strict";angular.module("app").controller("WanConnCtrl",["$scope","$state","wanPage","wanPageCommon","translate",function($scope,$state,wanPage,wanPageCommon,translate){function getMediaData(path,data){var mediaData=wanPageCommon.getByPath(path.replace("Device.WAN.",""),data);return mediaData.CurrentMACAddress&&conn.__New&&(mediaData.MACAddress=mediaData.CurrentMACAddress),mediaData}function updateMedia(mediaData,mediaType){var conn=$scope.conn;"Ethernet"==mediaType?conn.Media.Ethernet=mediaData:"WiFi"==mediaType&&(conn.Media.WiFi=mediaData)}function onIfaceChange(pathNewMedia,pathOldMedia){var connByNewIface,conn=$scope.conn,mediaType=wanPageCommon.getMediaType(pathNewMedia);conn.MediaType=mediaType;var mediaData=getMediaData(pathNewMedia,$state.params.data);mediaData&&(updateMedia(mediaData,mediaType),"IPv4oE"==conn.__Type&&(connByNewIface=getExistingConn(pathNewMedia),haveChangesIPv4(connByNewIface,pathOldMedia)||fillIpv4FromExistingConn(connByNewIface)),$scope.vlan&&("DSL.ATM"==mediaType||"DSL.PTM"==mediaType?conn.__UseMultiPVC=mediaData.UseMultiPVC:delete conn.__UseMultiPVC),("DSL.ATM"==mediaType||"DSL.PTM"==mediaType)&&(conn.__newMedia=!!mediaData.__New,wanPage.updateVlan(conn.VLAN,mediaData)))}function getExistingConn(ifacePath){return Object.keys(data.IPv4oE.Connection).map(function(key){return data.IPv4oE.Connection[key]}).find(function(e){return e.MediaPath==ifacePath})}function fillIpv4FromExistingConn(existingConn){var conn=$scope.conn;conn.DNSServer1=existingConn?existingConn.DNSServer1:"",conn.DNSServer2=existingConn?existingConn.DNSServer2:"","statip"==$scope.contype&&(conn.StaticIPAddress0=existingConn?existingConn.StaticIPAddress0:"",conn.StaticIPSubnetMask0=existingConn?existingConn.StaticIPSubnetMask0:"",conn.GatewayIPAddress=existingConn?existingConn.GatewayIPAddress:"")}function haveChangesIPv4(newConn,pathOldMedia){function isChanged(existConn){var field,curValue;for(var j in fields)if(field=fields[j],curValue=$scope.conn[field],curValue&&curValue!=existConn[field])return!0;return!1}var fields=["DNSServer1","DNSServer2","StaticIPAddress0","StaticIPSubnetMask0","GatewayIPAddress"],oldConn=getExistingConn(pathOldMedia);return!oldConn&&isChanged(newConn)||oldConn&&isChanged(oldConn)}var defTmpl,mediaData,data=$state.params.data;$scope.availableTypes=$state.params.availableTypes||wanPageCommon.getAvailableTypes();var conn=$scope.conn=$state.params.conn,contype=$scope.contype=$state.params._contype;$scope.idleDisconnTimeMinVal=30,$scope.idleDisconnTimeMaxVal=4294967296,$scope.common={role:$state.params.role,contype:contype,isNoWanPorts:data.NoWanPorts,isXxtp:wanPageCommon.isXxtpByContype(contype),isIpv4:wanPageCommon.isIpv4ByContype(contype),isIpv6:wanPageCommon.isIpv6ByContype(contype),isPpp:wanPageCommon.isPppByContype(contype),existsConns:data.__flatConnList,existsIfaces:data.__flatIfaceList},["pppoe","pppoa","pptp","l2tp","l2tpoveripsec","3g","mobileinet"].indexOf(contype)>=0&&!conn.__New&&("AlwaysOn"==conn.ConnectionTrigger&&conn.IdleDisconnectTime<$scope.idleDisconnTimeMinVal||conn.IdleDisconnectTime>$scope.idleDisconnTimeMaxVal)&&(defTmpl=wanPageCommon.getNewConnTempl(data,contype),conn.IdleDisconnectTime=defTmpl.IdleDisconnectTime),!conn.__New&&conn.MediaPath&&(mediaData=wanPageCommon.getByPath(conn.MediaType,conn.Media),conn.__AvailableIfaces=[{name:wanPageCommon.getIfaceName(mediaData,conn.MediaType),path:conn.MediaPath}]),conn.MediaPath&&onIfaceChange(conn.MediaPath),$scope.common.checksum=wanPageCommon.checksum(JSON.stringify(conn)),wanPageCommon.supportDualLAN&&($scope.common.duallan=data.DualLAN),$scope.submit=function(form){var iface;if(form.$valid)return($scope.common.isNoWanPorts||conn.__AvailableIfaces&&!conn.__AvailableIfaces.length)&&"mobileinet"!=$scope.common.contype&&"ipipv6"!=$scope.common.contype&&"PPTP"!=$scope.conn.__Type?(alert(translate("wan_no_interfaces_available")),void($scope.common.isNoWanPorts&&$state.go($scope.pageDetails.etherwan[0].state))):"DSL.PTM"==$scope.conn.MediaType&&"Bridge"!=$scope.conn.__Type&&(iface=wanPage.getIfacePtmByVlan(data,conn))?void alert(translate("msg_is_media_type_busy")+" ("+iface+")"):void $scope.$emit("pagesubmit",conn,$state.params.simple)},$scope.haveChanges=function(form){if(form.$invalid||$scope.conn.__New)return!0;var checksum=wanPageCommon.checksum(JSON.stringify(conn));return checksum!=$scope.common.checksum},$scope.$on("generalIfaceChange",function($event,newMedia,oldMedia){onIfaceChange(newMedia,oldMedia)}),$scope.$on("generalContypeChange",function($event,contype,role){$scope.$emit("contypeChange",contype,role)})}]);