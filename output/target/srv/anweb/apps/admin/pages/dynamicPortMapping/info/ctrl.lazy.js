"use strict";!function(){angular.module("app").controller("dynPortMappingInfoCtrl",["$scope","$state","funcs","translate","snackbars","dynPortMappingUtil",function($scope,$state,funcs,translate,snackbars,util){function activate(){util.pull().then(function(){portMapping.rules=util.getConfig().Rules,portMapping.isActivate=!0,portMapping.attrs=util.getAttrs(),$scope.$emit("pageload")},function(){$state.go("error",{code:"msg_pull_error",message:"msg_error_desc"})})}function add(){$state.go(currentState+".upnpParam.add")}function edit(item,inx){$state.go(currentState+".upnpParam.edit",{inx:inx})}$scope.portMapping={isActivate:!1,rules:null,attrs:null,add:add,edit:edit,remove:function(items){if(confirm(translate("upnp_mapping_warn_remove_rules"))){var overlay=$scope.overlay.circular,overlayId=overlay.start(),indexes=_.pluck(items,"__index");util.removeRules(indexes).then(function(){snackbars.add("msg_rpc_remove_success"),activate()})["catch"](function(){snackbars.add("msg_rpc_remove_error")})["finally"](overlay.stop.bind(overlay,overlayId))}},getItemIface:function(item){var ifaces,extIfaceName,intIfaceName,wanGroups,groupNum;return"iface"==item.IfaceType?(ifaces=portMapping.attrs.Ifaces,extIfaceName=_.findWhere(ifaces.ExternalInterface[item.InternalInterface],{value:item.ExternalInterface}).name,intIfaceName=_.findWhere(ifaces.InternalInterface,{value:item.InternalInterface}).name,intIfaceName+" / "+extIfaceName):"wan_group"==item.IfaceType?(wanGroups=portMapping.attrs.WANGroup,groupNum=_.findWhere(wanGroups,{value:item.WANGroup}),groupNum?groupNum.name:""):void 0},getItemShort:function(item){return translate(item.DefaultPolicy)}};var portMapping=$scope.portMapping,currentState=$state.current.name.split(".");currentState.pop(),currentState=currentState.join("."),activate()}])}();