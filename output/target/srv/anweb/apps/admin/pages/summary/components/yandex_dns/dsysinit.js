"use strict";!function(){angular.module("app").service("utilSummaryYandexDns",["device","funcs","cpe",function(device,funcs,cpe){function convert(input){if(!input)return null;var dns=funcs.splitTree(input[paths.dns]),clients=funcs.splitTree(input[paths.clients]),inputData=funcs.buildTree(dns.concat(clients));return config=converter.dsysinitToNative.rules(inputData),initConfig=funcs.deepClone(config),config}function getSettings(){return config?config.settings:{}}function getClients(){return config?config.clients:{}}function getRules(){return config?config.rules:{}}function pushSettings(data){var input=converter.nativeToDsysinit.settings(data),init=converter.nativeToDsysinit.settings(initConfig.settings),diff=funcs.newConfig.makeDiff(init,input,{});if(_.isEmpty(diff))return Promise.resolve();var data={};return funcs.setValue(paths.dns.slice(0,-1),diff,data),initConfig=funcs.deepClone(config),cpe.ApplyDifference(data)}function pushRules(data){var inputData={__id:config.__id,rules:data},input=converter.nativeToDsysinit.rules(inputData),init=converter.nativeToDsysinit.rules(initConfig),diff=funcs.newConfig.makeDiff(init,input,{});return cpe.ApplyDifference(diff)}function setSettings(settings){config.settings=settings}function setRules(rules){config.rules=rules}var paths={dns:"Device.Network.Server.DNS.",clients:"Device.Statistics.Neighbours."},rpcList=[paths.dns,paths.clients],converter=device.yandexDns.converter,config=null,initConfig=null;return{getAreas:function(){return rpcList.join("|")},convert:convert,getSettings:getSettings,getClients:getClients,getRules:getRules,pushSettings:pushSettings,pushRules:pushRules,setSettings:setSettings,setRules:setRules}}])}();