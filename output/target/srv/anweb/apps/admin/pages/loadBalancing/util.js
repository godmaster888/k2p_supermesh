"use strict";!function(){angular.module("app").service("loadBalancingUtil",["device","funcs","cpe","devinfo",function(device,funcs,cpe,devinfo){function getData(){return config?config:{}}function isMultiLAN(){return config?config.LAN.length>1:!1}function applyRule(rule,index){return!_.isUndefined(index)&&config.Rules.length>0?config.Rules[index]=rule:config.Rules.push(rule),config}function removeRules(keys){return _.each(keys.sort().reverse(),function(key){config.Rules.splice(key,1)}),apply(config)}function apply(settings){isActivate=!1;var input=converter.nativeToDsysinit(settings),diff=funcs.newConfig.makeDiff(__initConfig,input,attrs);return _.isEmpty(diff)?Promise.resolve():cpe.ApplyDifference(diff)}function getRule(inx){function getDefault(){return{LAN:isMultiLAN()?"":config.LAN[0].Value,WAN:[],Enable:isMultiLAN()}}return 1==config.LAN.length?config.Rules.length>0?_.first(config.Rules):getDefault():_.isUndefined(inx)?getDefault():config.Rules[inx]}function isUniqueLAN(value,index){if(!value||""==value)return!0;var list=funcs.deepClone(config.Rules);_.isUndefined(index)||_.isNull(index)||list.splice(index,1);var lans=_.pluck(list,"LAN");return!_.contains(lans,value)}var paths={trafficBalance:"Device.Network.LoadBalancing.",conns:"Device.Network.Connection.",group:"Device.Network.Group.",iface:"Device.Network.Interface.",pppclient:"Device.Network.Settings.PPPClient.",usbConns:"Device.USB.Connection."},config=null,attrs=null,__initConfig=null,isActivate=!1,converter=device.loadBalancing.converter;return{pull:function(){var pullPaths=[paths.trafficBalance,paths.conns,paths.group,paths.iface,paths.pppclient];return pullPaths.push(paths.usbConns),Promise.all([cpe.GetParameterValues(pullPaths),cpe.GetParameterAttributes([paths.trafficBalance])]).then(function(response){var data=funcs.buildTree(response[0].result.ParameterList);return config=converter.dsysinitToNative(data),attrs=funcs.buildTreeAttributes(response[1].result.ParameterList),__initConfig=funcs.deepClone(data),isActivate=!0,Promise.resolve()},function(){return Promise.reject()})},getData:getData,apply:apply,isMultiLAN:isMultiLAN,wasActivate:function(){return isActivate},getRule:getRule,isUniqueWAN:function(value,index,busyConns){if(!value||""==value)return!0;var listLinks=_.pluck(busyConns,"Link");return _.isUndefined(index)||_.isNull(index)||listLinks.splice(index,1),!_.contains(listLinks,value)},isUniqueLAN:isUniqueLAN,applyRule:applyRule,subscribeInfo:function(index,cb,$scope){var path=paths.trafficBalance+(index?index+".":"");devinfo.subscribe(path,function(response){var data;response&&response[path]&&(data=converter.dsysinitToNative(response[path]),cb&&cb(data))},$scope)},removeRules:removeRules}}])}();