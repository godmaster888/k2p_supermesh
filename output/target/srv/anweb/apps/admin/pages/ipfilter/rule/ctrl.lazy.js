"use strict";!function(){angular.module("app").controllerProvider.register("IPFilterRuleCtrl",["$scope","$rootScope","$state","devinfo","translate","history","ipfilterUtil",function($scope,$rootScope,$state,devinfo,translate,history,util){function apply(){function success(){$state.go(currentState+".info")}if($scope.form.$valid){if(_.has(ipfilter.rule,"name")&&(name=helper.isUniqueName(ipfilter.rule,__index)))return void alert(translate("name_exists"));var name,accessLost,isLocalRule,confilct=helper.conflicts(ipfilter.rule,__index);if(confilct)return void alert(translate("ipflt_rule_conflict"));if(!(!_.isUndefined(ipfilter.client)&&(accessLost=helper.accessWillLost(ipfilter.rule,ipfilter.client),accessLost&&!confirm(translate("ipflt_access_lost_rule")))||ipfilter.rule.action&&(isLocalRule=helper.isLocalRule(ipfilter.rule),isLocalRule&&!confirm(translate("ipflt_is_local_rule"))))){var overlay=$scope.overlay.circular,overlayId=overlay.start();util.applyRule(ipfilter.rule,__index).then(success)["catch"](function(){$state.go("error",{code:"msg_push_error",message:"msg_error_desc"})})["finally"](overlay.stop.bind(overlay,overlayId))}}}function remove(){function success(){history.setCleanLastHistory(!0),$state.go(currentState+".info")}if(confirm(translate("ipflt_remove_rule_warn"))){var overlay=$scope.overlay.circular,overlayId=overlay.start();$rootScope.$emit("unsavedStop",!0);var removeList=helper.makeRemoveList([__index]);util.removeRules(removeList).then(success)["catch"](function(){$state.go("error",{code:"removeError",message:"removeErrorDesc"})})["finally"](overlay.stop.bind(overlay,overlayId))}}function isSupported(param){return helper?helper.isSupported(param):void 0}function getActionList(){return helper.getActions()}function getProtocolList(){return helper.getProtocols()}function getDirectionList(){return helper.getDirections()}function validation(value,param){return ipfilter.rule?helper.validation(ipfilter.rule,param):null}function wasModified(){return!_.isEqual(ipfilter.rule,__backupRule)}function __pullError(){$state.go("error",{code:"removeError",message:"removeErrorDesc"})}function changeIP(obj,direction){if(ipfilter.rule){var result=[];obj.begin&&result.push(obj.begin),obj.end&&result.push(obj.end);var value=result.join("-");"source"==direction?ipfilter.rule.ips=value:ipfilter.rule.ipd=value}}$scope.ipfilter={isActivate:!1,action:null,rule:null,ipversion:null,client:null,ip:{source:{},destination:{}},apply:apply,remove:remove,isSupported:isSupported,isDisabled:function(param){function portDisabled(){return 3==rule.proto||4==rule.proto}var rule=ipfilter.rule;if(!rule)return!1;switch(param){case"ports":case"portd":return portDisabled();case"source_port":return portDisabled()||!ipfilter.manualSrcPort}},getIPVersionList:function(){return[{name:"IPv4",value:"ipv4"},{name:"IPv6",value:"ipv6"}]},getActionList:getActionList,getProtocolList:getProtocolList,getDirectionList:getDirectionList,validation:validation,changeIPVersion:function(version){ipfilter.rule.is_ipv6="ipv6"==version},wasModified:wasModified,onAutoSrcPortChange:function(){ipfilter.manualSrcPort||(ipfilter.rule.ports="")},getNoteExampleIp:function(){return isSupported("is_ipv6")?"ipflt_ip_note":"ipflt_ip_note_ipv4_only"}};var ipfilter=$scope.ipfilter,__index=_.isUndefined($state.params.inx)?void 0:parseInt($state.params.inx);$scope.useSchedule=_.isUndefined($state.params.useSchedule)?!1:"true"==$state.params.useSchedule?!0:!1;var helper,__backupRule=null;!function(){function pullClient(){helper=util.makeHelper(),devinfo.once("client").then(function(result){ipfilter.client=result.client,prepare(),$scope.ipfilter.loading=!1},__pullError)}function prepare(){_.isUndefined(__index)?(ipfilter.rule=helper.getDefaultTemplate(),isSupported("id")&&(ipfilter.rule.id=helper.getBiggestID()),ipfilter.action="add"):(ipfilter.rule=helper.getRule(__index),ipfilter.action="edit"),ipfilter.manualSrcPort=!!ipfilter.rule.ports,ipfilter.ipversion=isSupported("is_ipv6")&&ipfilter.rule.is_ipv6?"ipv6":"ipv4",prepareIP("source"),prepareIP("destination"),ipfilter.isActivate=!0,__backupRule=angular.copy(ipfilter.rule),$scope.$emit("pageload")}function prepareIP(direction){var ip="source"==direction?ipfilter.rule.ips:ipfilter.rule.ipd,arrIp=ip?ip.split("-"):[];ipfilter.ip[direction].begin=arrIp[0]||"",ipfilter.ip[direction].end=arrIp[1]||""}return $scope.ipfilter.loading=!0,util.wasActivate()?void pullClient():void util.pull().then(pullClient)["catch"](__pullError)}(),$scope.$watchCollection("ipfilter.ip.source",function(value){changeIP(value,"source")}),$scope.$watchCollection("ipfilter.ip.destination",function(value){changeIP(value,"destination")});var currentState=$state.current.name.split(".");currentState.pop(),currentState=currentState.join(".")}])}();