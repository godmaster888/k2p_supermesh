"use strict";!function(){angular.module("app").service("snmpUtil",["funcs","device","cpe",function(funcs,device,cpe){function push(settings){var data=converter.nativeToDsysinit(settings),__initConfig=converter.nativeToDsysinit(__initialConfig),diff=funcs.newConfig.makeDiff(__initConfig,data,attrs);return _.isEmpty(diff)?Promise.resolve():cpe.ApplyDifference(diff)}function makeHelper(){return new device.snmp.Helper(config,attrs)}var config=null,__initialConfig=null,attrs=null,paths={snmp:"Device.Services.SNMP.",device_mode:"Device.DeviceInfo.DeviceMode."},converter=device.snmp.converter;return{pull:function(){function success(response){var data=funcs.buildTree(response[0].result.ParameterList);config=converter.dsysinitToNative(data),__initialConfig=funcs.deepClone(config),attrs=funcs.buildTreeAttributes(response[1].result.ParameterList);var subtree=funcs.fetchBranch(attrs,paths.snmp+"V3.#template.Subtree.");return subtree&&(config.snmp.subtree_length=subtree.maxLength),Promise.resolve()}function error(response){var error=response&&response.error?response.error:{};return Promise.reject(error)}return Promise.all([cpe.GetParameterValues(Object.values(paths)),cpe.GetParameterAttributes([paths.snmp])]).then(success,error)},push:push,makeHelper:makeHelper}}])}();