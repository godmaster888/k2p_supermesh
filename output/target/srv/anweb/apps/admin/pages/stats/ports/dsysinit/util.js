"use strict";!function(){angular.module("app").service("statsPortsUtil",["$rootScope","cpe","device","devinfo","funcs",function($rootScope,cpe,device,devinfo,funcs){var paths={statsPort:"Device.Statistics.Port.",infoPort:"Device.Switch.Ports."},attrs=null,converter=device.statsPorts.converter;return{subscribeInfo:function(cb,$scope){function prepareData(response){function sortData(){if(!data.order)return data.ports;var sortData=[];return _.each(data.order,function(elem){sortData.push(_.findWhere(data.ports,{__id:elem}))}),sortData}var statsPort,infoPort,ports,input,data;response&&response[paths.statsPort]&&response[paths.infoPort]&&(statsPort=funcs.splitTree(response[paths.statsPort]),infoPort=funcs.splitTree(response[paths.infoPort]),ports=funcs.buildTree(statsPort.concat(infoPort)),input={value:ports,attrs:attrs},data=converter.dsysinitToNative(input),data.ports=sortData(),cb&&cb(data))}!function(){Promise.all([cpe.GetParameterAttributes([paths.statsPort])]).then(function(response){attrs=funcs.buildTreeAttributes(response[0].result.ParameterList)})}(),devinfo.onceAndSubscribe(paths.statsPort+"|"+paths.infoPort,prepareData,$scope),$rootScope.portsDefer.promise.then(function(data){var result={preload:!0,ports:_.map(data,function(alias){return{alias:alias}})};cb(result)})}}}])}();