"use strict";!function(){angular.module("app").controllerProvider.register("GreInfoCtrl",["$scope","$state","GreUtil","translate","funcs",function($scope,$state,util,translate,funcs){function activate(){function updateData(response){$scope.gre.data=response.tunnels,$scope.gre.gateway=response.gateway}util.pull().then(function(){$scope.gre.data=util.getData(),$scope.gre.connList=util.getConnList(),util.subscribeInfo(updateData,$scope),$scope.gre.isActivate=!0})["catch"](errorPull),$scope.$emit("pageload")}function add(){$state.go(currentState+".add")}function edit(item){$state.go(currentState+".edit",{inx:item.__id})}function errorPull(){$state.go("error",{code:"msg_pull_error",message:"msg_error_desc"})}function errorRemove(){$state.go("error",{code:"msg_push_error",message:"msg_push_error"})}function getIface(link){return _.find($scope.gre.connList,{value:link}).name}$scope.gre={data:null,connList:null,gateway:null,add:add,edit:edit,remove:function(items,keys){if(confirm(translate("ipsec_remove_rules_warning"))){var overlay=$scope.overlay.circular,overlayId=overlay.start();util.removeTunnels(keys).then(activate)["catch"](errorRemove)["finally"](overlay.stop.bind(overlay,overlayId))}},getIface:getIface,getVPNIP:function(item){return item.VPNIPAddr+"/"+funcs.ipv4.mask["short"](item.VPNIPMask)},isActivate:!1,getMiniTableCaption:function(item){return item.VPNIPAddr+"/"+item.VPNIPMask},getMiniTableShort:function(item){var result=[];return item.Name&&result.push(translate("name")+": "+item.Name),item.IP&&result.push(translate("iface")+": "+translate(getIface(item.IP))),result}};var currentState=$state.current.name.split(".");currentState.pop(),currentState=currentState.join("."),activate()}])}();