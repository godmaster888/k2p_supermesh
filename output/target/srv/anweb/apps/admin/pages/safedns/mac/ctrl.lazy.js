"use strict";function SafeDnsMacCtrl($scope,$state,funcs,snackbars,translate,device,ngDialog){function activate(){var overlayId=overlay.start();util.pull().then(function(){updateModel(),$scope.initModel=initModel=funcs.deepClone($scope.workModel),$scope.model=workModel=$scope.workModel;var clients=getKnownClients();$scope.clients=getUniqueItemByMac(clients,"mac"),_.each(clients,function(client){_.each($scope.clients,function(data){data.ipList=data.ipList||[],data.mac==client.mac&&data.ipList.push(client.ip)})}),$scope.isActivate=!0,$scope.$emit("pageload")},function(){$state.go("error",{code:"msg_pull_error",message:"msg_error_desc"})})["finally"](overlay.stop.bind(overlay,overlayId))}function updateModel(){$scope.workModel.params=util.getParams(),$scope.workModel.providerList=util.getProviderList(),$scope.workModel.accountList=util.account.getList({__pid:$scope.workModel.params.default_provider}),$scope.workModel.profileList=util.getProfileList({__pid:$scope.workModel.params.default_provider,__aid:$scope.workModel.params.default_account}),$scope.workModel.macList=util.mac.getList()}function getKnownClients(){var clients=util.getClientsList();return _.map(clients,function(client){return _.extend({},client,{rule:_.find($scope.workModel.macList,function(elem){return elem.address.toUpperCase()==client.mac.toUpperCase()})})})}function getUniqueItemByMac(arr,param){var i,j,n=arr.length,k=0,b=[];for(i=0;n>i;i++){for(j=0;k>j&&b[j][param].toUpperCase()!==arr[i][param].toUpperCase();)j++;j==k&&(b[k]=arr[i],k++)}return b}function getOptions(target){var noDef,options;switch(target){case"profile":return noDef=!0,options=_.map(workModel.profileList,function(item){return noDef&=item.__id!=workModel.account.default_profile,{name:item.name,value:item.__id}}),(!_.size(options)||noDef)&&(options=_.union([{name:"none",value:""}],options),workModel.account.default_profile=""),options}}function openDialogMac(mac){console.log("openDialog",mac),ngDialog.open({template:"dialogs/safedns/mac/dialog.tpl.html",controller:"SafeDNSAccountMacDialogCtrl",resolve:funcs.getLazyResolve("dialogs/safedns/mac/ctrl.lazy.js","SafeDNSAccountMacDialogCtrl"),data:{mac:mac,macList:workModel.macList,profileList:workModel.profileList,accountList:workModel.accountList,defProfile:workModel.account&&workModel.account.default_profile,defProvider:workModel.params.default_provider},scope:$scope}).closePromise.then(function(answer){var keys,overlayId;answer&&answer.value&&"save"==answer.value.status&&answer.value.data&&(keys={__pfid:answer.value.data.__pfid,__aid:answer.value.data.__aid},overlayId=overlay.start(),util.mac.set(answer.value.data,mac&&mac.__id,keys).then(function(){activate(),snackbars.add("msg_rpc_write_success")},function(){snackbars.add("msg_rpc_write_error")})["finally"](overlay.stop.bind(overlay,overlayId)))})}function isEmptyMac(){return workModel&&workModel.macList&&0==workModel.macList.length}function getAccountName(accountID){var provider=_.findWhere(workModel.accountList,{__id:accountID});return provider&&provider.email||translate("st_not_selected")}function hasEditMac(){return!!_.size(workModel.profileList)&&$scope.isActivate}function wasModified(){return initModel&&!_.isEqual(workModel.account,initModel.account)}_.isUndefined($state.params.pid)?null:parseInt($state.params.pid),_.isUndefined($state.params.aid)?null:parseInt($state.params.aid);var util=device.safeDns,overlay=$scope.overlay.circular,initModel=$scope.initModel={},workModel=$scope.workModel={};$scope.modelFuncs={wasModified:wasModified,getOptions:getOptions,getProfileName:function(accountID,profileID){var profileList=util.getProfileList({__pid:$scope.workModel.params.default_provider,__aid:accountID}),proflle=_.findWhere(profileList,{__id:profileID});return proflle&&proflle.name||translate("st_not_selected")},getDefaultProfileName:function(){var defProfile=$scope.workModel.params.default_profile,profileList=util.getProfileList({__pid:$scope.workModel.params.default_provider,__aid:$scope.workModel.params.default_account}),proflle=_.findWhere(profileList,{__id:defProfile});return proflle&&proflle.name||translate("st_not_selected")},getAccountName:getAccountName,hasEditMac:hasEditMac,addMac:function(){openDialogMac()},editMac:function(item){openDialogMac(item)},removeMac:function(items){var overlayId,ids=_.pluck(items,"__id");ids&&ids.length&&(overlayId=overlay.start(),util.mac.remove(ids).then(function(){activate(),snackbars.add("msg_rpc_remove_success")},function(){snackbars.add("msg_rpc_remove_error")})["finally"](overlay.stop.bind(overlay,overlayId)))},addRuleFromTable:function(item){var newRule;item.rule?openDialogMac(item.rule):(newRule={address:item.mac.toUpperCase(),__pfid:$scope.workModel.params.default_profile,hostname:item.hostname},openDialogMac(newRule))},isEmptyMac:isEmptyMac,isNotEmpty:function(value){return value&&""!=value}},$scope.showIpList=function(item){return _.uniq(item.ipList)},$scope.modelFuncs.dnsWarn="safedns_yadns_warning_sky",$scope.modelFuncs.tableDesc={lang:"safedns_mac_list_desc",url:"skydns"},util.yaDNSEnabled().then(function(enabled){enabled?($scope.isYaDNSWarning=!0,$scope.$emit("pageload")):activate()})["catch"](activate)}angular.module("app").controllerProvider.register("SafeDnsMacCtrl",SafeDnsMacCtrl),SafeDnsMacCtrl.$inject=["$scope","$state","funcs","snackbars","translate","device","ngDialog"];