"use strict";!function(){angular.module("app").service("WanReservUtil",["device","cpe","funcs",function(device,cpe,funcs){function getConfig(){return config?config:{}}function isSupported(param){return attrs&&attrs.Device.Network.ConnectivityCheck[param]}function apply(settings){var delHosts,destinations,input=converter.nativeToDsysinit(settings),init=converter.nativeToDsysinit(__initConfig),diff=funcs.newConfig.makeDiff(init,input,attrs);if(0==Object.keys(diff).length)return Promise.resolve();var diffs=[];if(diff.Device.Network.ConnectivityCheck&&diff.Device.Network.ConnectivityCheck.Destination){delHosts={},destinations=funcs.deepClone(diff.Device.Network.ConnectivityCheck.Destination);for(var key in destinations)-1!=key.indexOf("-")&&(funcs.setValue(paths.connCheck+"Destination."+key,{},delHosts),funcs.cutBranch(diff,paths.connCheck+"Destination."+key+"."));diffs=0!=Object.keys(delHosts).length?[delHosts,diff]:diff}else diffs=diff;return cpe.ApplyDifference(diffs)}var config=null,attrs=null,__initConfig=null,converter=device.wanReservationDsysinit.converter,paths={conns:"Device.Network.Connection.",connCheck:"Device.Network.ConnectivityCheck.",group:"Device.Network.Group.",usb:"Device.USB.Connection."};return{pull:function(){var pathConfig=[paths.conns,paths.connCheck,paths.group];return pathConfig.push(paths.usb),Promise.all([cpe.GetParameterValues(pathConfig),cpe.GetParameterAttributes(pathConfig)]).then(function(response){var data=funcs.buildTree(response[0].result.ParameterList);return attrs=funcs.buildTreeAttributes(response[1].result.ParameterList),config=converter.dsysinitToNative(data,attrs),__initConfig=funcs.deepClone(config),Promise.resolve()})["catch"](function(){return Promise.reject()})},apply:apply,getConfig:getConfig,isSupported:isSupported}}])}();