"use strict";!function(){angular.module("app").service("udpxyUtil",["funcs","device","cpe",function(funcs,device,cpe){function apply(settings){var input=converter.nativeToDsysinit(settings),changes=funcs.getChangesExpanded(__initConfig,input);if(_.isEmpty(changes))return Promise.resolve();var output=funcs.splitTree(changes);return cpe.SetParameterValues(output)}function makeHelper(){return new device.udpxy.Helper(config,null,attrs)}var config=null,attrs=null,constants={udpxy:"Device.Services.Udpxy.",igmpx:"Device.Services.IGMPX.",ifaces:"Device.Network.Interface.",deviceMode:"Device.DeviceInfo.DeviceMode",connections:"Device.Network.Connection."},converter=device.udpxy.converter,__initConfig=null;return{pull:function(){var configPaths=[constants.udpxy,constants.ifaces,constants.connections,constants.deviceMode];return cpe.GetParameterValues([constants.igmpx]).then(function(){configPaths.push(constants.igmpx)}),Promise.all([cpe.GetParameterValues(configPaths),cpe.GetParameterAttributes(configPaths)]).then(function(response){var data=funcs.buildTree(response[0].result.ParameterList);return attrs=funcs.buildTreeAttributes(response[1].result.ParameterList),__initConfig=funcs.deepClone(data),config=converter.dsysinitToNative(data),Promise.resolve()})},apply:apply,makeHelper:makeHelper}}])}();