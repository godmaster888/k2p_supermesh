"use strict";!function(){angular.module("app").controllerProvider.register("IPsecInfoCtrl",["$scope","$state","translate","IPsecUtil","funcs","navigationFilter",function($scope,$state,translate,util,funcs,navigationFilter){function activate(overlayId){function success(){helper=util.makeHelper();var commonSettings=helper.getSettings();ipsec.enabled=commonSettings.enabled,ipsec.logLevel=commonSettings.logLevel,ipsec.tunnels=helper.getTunnels(),ipsec.status=helper.getTunnelsStatus(),ipsec.debug=commonSettings.debug,ipsec.enabled?(util.subscribeInfo(updateStatus,$scope),util.subscribeIface(updateIface,$scope)):util.unsubscribe()}util.pull().then(success)["catch"](errorPull)["finally"](function(){overlayId&&overlay.stop(overlayId),ipsec.isActivate||($scope.$emit("pageload"),ipsec.isActivate=!0)})}function updateStatus(data){ipsec.status=data,$scope.$emit("pageload")}function updateIface(data){ipsec.tunnels=data}function changeEnabled(){var overlayId=overlay.start(),setEn=helper.setEnabled(ipsec.enabled);util.apply(setEn).then(function(){activate(overlayId)})["catch"](function(){overlay.stop(overlayId),errorPush()})}function changeDebug(){var overlayId=overlay.start(),setEn=helper.setDebug(ipsec.debug);util.apply(setEn).then(function(){activate(overlayId)})["catch"](function(){overlay.stop(overlayId),errorPush()})}function changeLogLevel(){var overlayId=overlay.start(),applyObj=helper.setLogLevel(ipsec.logLevel);util.apply(applyObj).then(function(){activate(overlayId)})["catch"](function(){overlay.stop(overlayId),errorPush()})}function add(){$state.go(currentState+".add")}function edit(item){$state.go(currentState+".edit",{inx:item.__index})}function remove(items){if(confirm(translate("ipsec_remove_rules_warning"))){var indexes=_.pluck(items,"__index"),removeConnections=helper.removeRules(indexes),overlayId=overlay.start();util.apply(removeConnections).then(function(){activate(overlayId)},function(){overlay.stop(overlay,overlayId),errorRemove()})}}function getTunnelsStatusIP(item){var ipLeft,ipRight;return item.ip?(ipLeft=item.ip.left&&_.contains(item.ip.left," ")?item.ip.left.replace(" "," "):item.ip.left,ipRight=item.ip.right&&_.contains(item.ip.right," ")?item.ip.right.replace(" "," "):item.ip.right,(ipLeft?ipLeft:"-")+" / "+(ipRight?ipRight:"-")):void 0}function getTunnelsStatusPackets(item){return item.packet?item.packet["in"]+" / "+item.packet.out:void 0}function getTunnelsStatusRxTx(item){item.rate&&(rx=item.rate.rx.value+" "+item.rate.rx.metric);var rx,tx=item.rate.tx.value+" "+item.rate.tx.metric;return rx+" / "+tx}function getList(param){return helper.getList(param)}function errorPull(){$state.go("error",{code:"msg_pull_error",message:"msg_error_desc"})}function errorPush(){$state.go("error",{code:"msg_push_error",message:"msg_error_desc"})}function errorRemove(){$state.go("error",{code:"removeError",message:"removeErrorDesc"})}$scope.$emit("pageload"),$scope.ipsec={isActivate:!1,enabled:null,tunnels:null,status:null,debug:null,changeDebug:changeDebug,changeEnabled:changeEnabled,changeLogLevel:changeLogLevel,add:add,edit:edit,remove:remove,getMiniTunnelsShort:function(item){var result=[];return item.alg&&result.push(translate("ipsec_alg")+": "+item.alg+";"),item.hash&&result.push(translate("ipsec_hash")+": "+item.hash+";"),item.iface&&result.push(translate("iface")+": "+item.iface+";"),result},getTunnelsStatusIP:getTunnelsStatusIP,getTunnelsStatusPackets:getTunnelsStatusPackets,getTunnelsStatusRxTx:getTunnelsStatusRxTx,getMiniTunnelsStatusShort:function(item){var result=[];return item.ip&&result.push(translate("source")+" / "+translate("dest")+": "+getTunnelsStatusIP(item)+";"),item.CHILD&&result.push("CHILD: "+translate(item.CHILD)+";"),item.IKE&&result.push("IKE: "+translate(item.IKE)+";"),item.packet&&result.push(translate("ipsec_packets")+": "+getTunnelsStatusPackets(item)+";"),item.rate&&result.push(translate("ipsec_rx_tx")+": "+getTunnelsStatusRxTx(item)+";"),item.time&&result.push(translate("ipsec_time")+": "+item.time+";"),result},getList:getList,getStateText:function(item){return translate(item.stateText)},reconnect:function(items){var overlayId=overlay.start();util.reconnect(items)["finally"](overlay.stop.bind(overlay,overlayId))},getPhaseLabel:function(type){return customRules&&customRules.RenameIPsecInfo?translate("ipsec_ike_phase",{number:"phase1"==type?"1":"2"}):"phase1"==type?"IKE":"CHILD"}};var helper,ipsec=$scope.ipsec,currentState=$state.current.name.split(".");currentState.pop(),currentState=currentState.join(".");var overlay=$scope.overlay.circular,customRules=navigationFilter.rules()||{};activate()}])}();