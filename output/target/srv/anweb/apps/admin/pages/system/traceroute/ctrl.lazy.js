"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj};angular.module("app").controllerProvider.register("SysTracerouteCtrl",["$scope","$timeout","translate","funcs","ngDialog","tracerouteUtil","navigationFilter",function($scope,$timeout,translate,funcs,ngDialog,util,navigationFilter){function scrollToBottom(){var console=document.getElementById("console");return function(){console.scrollTop=console.scrollHeight}}var customRules=navigationFilter.rules(),maxTtl=customRules.TracerouteMaxTtl||30,nQueries=customRules.TracerouteNQueriesl||2,waitTime=customRules.TracerouteWaitTime||3,eventHandler=null;$scope.traceroute={host:"",count:1,is_ipv6:!1,max_ttl:maxTtl,nqueries:nQueries,waittime:waitTime},function(){util.init().then(function(params){params&&params.eventHandler&&(eventHandler=params.eventHandler),$scope.isRequestInProgress=!0,$scope.loading=!1,$scope.tracerouteFlowActive=!1,eventHandler&&eventHandler.setFlag("requestOverlaySuspend",!1),$scope.console="",$scope.$emit("pageload")})}(),$scope.flowDetector={add:function(msg){$scope.console+=msg,$timeout(scrollToBottom()),$scope.$apply()},error:function(){$scope.tracerouteFlowActive=!1,$scope.$apply(),alert(translate("msg_error_pull_data_desc"))},close:function(){$scope.console+="\n\n",$scope.tracerouteFlowActive=!1,$timeout(scrollToBottom()),$scope.$apply()}},$scope.getTraceroute=function(){function getTraceroute(){$scope.loading=!0,$scope.isRequestInProgress=!1,eventHandler&&eventHandler.setFlag("requestOverlaySuspend",!0),util.getTraceroute($scope.traceroute).then(function(response){var isIPv6=$scope.traceroute.is_ipv6,key=isIPv6?"traceroute6":"traceroute";response.data?($scope.console&&($scope.console+="\n\n"),$scope.console+=response.data[key]):65==response.status&&($scope.console&&($scope.console+="\n\n"),$scope.console+=translate("msg_error_request_in_progress")),$scope.loading=!1,$scope.isRequestInProgress=!0,eventHandler&&eventHandler.setFlag("requestOverlaySuspend",!1),$timeout(scrollToBottom())},function(){$scope.console&&($scope.console+="\n\n"),$scope.console+=translate("msg_error_request_timeout"),$scope.loading=!1,$scope.isRequestInProgress=!0,eventHandler.setFlag("requestOverlaySuspend",!1),$timeout(scrollToBottom())})["catch"](function(){$scope.loading=!1,$scope.isRequestInProgress=!0,eventHandler&&eventHandler.setFlag("requestOverlaySuspend",!1)})}function startTraceroute(){return $scope.tracerouteFlowActive=!0,util.startTraceroute($scope.traceroute,$scope.flowDetector,$scope)}$scope.tracerouteSettings.$invalid||(util.getTraceroute?getTraceroute():startTraceroute())},$scope.stopTraceroute=function(){util.stopTraceroute(),$scope.flowDetector.close()},$scope.clearConsole=function(){$scope.console=""},$scope.settingsDiffCount=function(){var count=0;return $scope.traceroute.max_ttl!=maxTtl&&count++,$scope.traceroute.nqueries!=nQueries&&count++,$scope.traceroute.waittime!=waitTime&&count++,count},$scope.openTracerouteSettings=function(){$scope.traceroute.tmp_max_ttl=$scope.traceroute.max_ttl,$scope.traceroute.tmp_nqueries=$scope.traceroute.nqueries,$scope.traceroute.tmp_waittime=$scope.traceroute.waittime,ngDialog.open({template:"/admin/dialogs/traceroute_settings/dialog.tpl.html",controller:"TracerouteSettings",closeByEscape:!1,resolve:funcs.getLazyResolve("/admin/dialogs/traceroute_settings/ctrl.lazy.js","TracerouteSettings"),scope:$scope})},$scope.disableButtons=function(name){switch(name){case"start":case"clear":return $scope.tracerouteFlowActive;case"stop":return!$scope.tracerouteFlowActive}}}]);