"use strict";!function(){angular.module("app").service("systemUtil",["$rootScope","$http","$q","$timeout","devinfo","device","cpe","cpex","funcs","systemActionService","changePassword","navigationFilter",function($rs,$http,$q,$timeout,devinfo,device,cpe,cpex,funcs,systemAction,changePassword,navigationFilter){function reboot(mode){var title="";switch(mode){case"restore":title="restore_in_progress";break;case"factory_force":title="reset_in_progress";break;default:title="reboot_in_progress"}return systemAction.reboot(title)}$rs.overlay.progress;var customRules=navigationFilter.rules()||{};return{factoryNeedReboot:!0,useFormData:!0,getInitParams:function(){return Promise.all([devinfo.once("version"),function(){return cpe.GetParameterValues(["Device.Users.CurrentUser."]).then(function(output){return Promise.resolve(output.result?output.result.ParameterList[0].Value:"")})}(),function(){return cpe.GetParameterValues(["Device.Services.Anweb.IdleTimeout."]).then(function(output){return Promise.resolve(output.result?output.result.ParameterList[0].Value:void 0)})}(),function(){return Promise.all([cpe.GetParameterValues(["Device.DeviceInfo.DeviceMode."]),cpe.GetParameterAttributes(["Device.DeviceInfo.DeviceMode."])]).then(function(output){var mode=output[0].result&&output[0].result.ParameterList[0].Value,attrs=output[1].result&&funcs.buildTreeAttributes(output[1].result.ParameterList);return Promise.resolve({value:mode||void 0,list:_.compact(funcs.fetchBranch(attrs,"Device.DeviceInfo.DeviceMode.enum."))})},function(){return Promise.resolve()})}(),function(){return cpe.GetParameterValues(["Device.Users.User."]).then(function(output){return output.result?funcs.buildTree(output.result.ParameterList):void 0})}()]).then(function(result){var devinfoOutput=result[0],username=result[1],logoutTime=result[2],output={lang:{},mode:{},user:{},webInterface:{}};return output.lang.value=devinfoOutput.lang,output.lang.list=devinfoOutput.lang_list||["eng","rus"],output.user.name=username,output.user.list=[],result[3]&&(output.mode=result[3]),customRules.SystemConfigMultiUsers&&_.isArray(customRules.SystemConfigMultiUsers)&&_.size(customRules.SystemConfigMultiUsers)&&(output.user.list=customRules.SystemConfigMultiUsers),logoutTime&&(output.webInterface.logoutTime=parseInt(logoutTime/60)),Promise.resolve(output)})},save:function(saveAsDefault){return cpe.SaveConfig(saveAsDefault)},reset:function(cleanAll){return cpe.FactoryReset(cleanAll)},backup:function(){return cpe.GetParameterValues(["Device.Users.CurrentUser."]).then(function(){return document.location.href="/config_load",Promise.resolve()})},reboot:reboot,restorePrepare:function(url,cb){return cpe.GetParameterValues(["Device.Users.CurrentUser."]).then(cb)},changeLang:function(lang){return device.system.changeLang(lang)},changePassword:changePassword,changeWebInterface:function(params){return cpe.SetParameterValues([{Name:"Device.Services.Anweb.IdleTimeout.",Value:parseInt(60*params.logoutTime)}]).then(function(){return $rs.$emit("slacker.reload")})},backupDefault:function(){return cpe.GetParameterValues(["Device.Users.CurrentUser."]).then(function(){return document.location.href="/build_config_load",Promise.resolve()})},changeDeviceMode:function(value){return cpe.SetParameterValues([{Name:"Device.DeviceInfo.DeviceMode.",Value:value}]).then(function(){reboot().then(function(){return document.location.reload()})})},applyUser:function(data,template){var result={};result.Password=data.Password,_.has(data,"__id")||(result.Username=data.Username,result.Enable=!0,result.Language=template.Language,result.Shell=template.Shell);var path="Device.Users.User."+(data.__id?data.__id:"+1"),output={};return funcs.setValue(path,result,output),cpe.ApplyDifference(output)},deleteUsers:function(items){return cpex.remove(_.pluck(items,"__id"),"Device.Users.User.")}}}])}();