"use strict";!function(){angular.module("app").controllerProvider.register("SysConfigCtrl",["$scope","$state","$q","$timeout","$rootScope","devinfo","systemUtil","translate","snackbars","funcs","navigationFilter","cookie","ngDialog",function($scope,$state,$q,$timeout,$rootScope,devinfo,util,translate,snackbars,funcs,navigationFilter,cookie,ngDialog){function init(){Promise.all([util.getInitParams(),translate.getLangNames()]).then(function(res){var param=res[0],langNames=res[1].data;param.mode&&(config.mode.name=param.mode.name,config.mode.hasHwModeSwitch=param.mode.hasHwModeSwitch,config.mode.value=param.mode.value,config.mode.list=_.map(param.mode.list,function(item){return{Value:item,Name:item}})),config.user.name=param.user?param.user.name:"",config.user.list=param.user?param.user.list:null,config.lang.value=langNames[param.lang.value],config.lang.list=_.values(langNames),param.autoreboot&&(config.autoreboot.isShow=!0,config.autoreboot.data=param.autoreboot,config.autoreboot.backup=funcs.deepClone(config.autoreboot.data)),param.webInterface&&(config.webInterface.data=param.webInterface,config.webInterface.backup=funcs.deepClone(config.webInterface.data)),param.autoPingReboot&&(config.autoPingReboot.data=param.autoPingReboot,config.autoPingReboot.backup=funcs.deepClone(config.autoPingReboot.data))})["catch"](function(){$state.go("error",{code:"msg_pull_error",message:"msg_error_desc"})})["finally"]($scope.$emit.bind($scope,"pageload"))}function reboot(opts){function error(msg){msg&&"not_confirm"==msg||("factory"==opts.mode||"factory_force"==opts.mode?location.href=location.protocol+"//192.168.0.1":snackbars.add(translate("configRebootError")))}function success(){("factory"==opts.mode||"factory_force"==opts.mode)&&(location.href=location.protocol+"//192.168.0.1")}var rebootMess,prepareAction="confirm";return opts=opts||{},"restore"==opts.mode?rebootMess="sysconfig_config_restore_confirm":"factory"==opts.mode?rebootMess="notice_save_and_reboot_confirm":"factory_force"==opts.mode?prepareAction="bypass":rebootMess="sysconfig_config_reboot_confirm",confirmPromise(translate(rebootMess),prepareAction).then(util.reboot.bind(util,opts.mode)).then(snackbars.add.bind(snackbars,translate("sysconfig_reboot_ok"))).then(success)["catch"](error)}function showUserDialog(options){(function(options){return ngDialog.open({template:"/admin/dialogs/config_user/dialog.tpl.html",controller:"ConfigUserDialogCtrl",scope:$scope,data:{data:options,allUsername:_.pluck(config.user.table,"Username")}})})(options).closePromise.then(function(result){if(result&&result.value){var overlayId=overlay.start();util.applyUser(result.value.user,config.user.tableTemplate).then(function(){init(),snackbars.add("msg_rpc_write_success")})["catch"](function(){snackbars.add(translate("msg_rpc_write_error"))})["finally"](overlay.stop.bind(overlay,overlayId))}})}function showWebInterface(param){return param?showWebInterface()&&!_.isUndefined(config.webInterface.backup[param]):config.webInterface.backup&&_.size(config.webInterface.backup)}function confirmPromise(msg,mode){var deferred=$q.defer();return"bypass"==mode?deferred.resolve():confirm(msg)?deferred.resolve():deferred.reject("not_confirm"),deferred.promise}$scope.customRules=navigationFilter.rules()||{},$scope.config={save:function(saveAsDefault){var overlayId=overlay.start();util.save(saveAsDefault).then(snackbars.add.bind(snackbars,translate("sysconfig_save_ok")))["catch"](snackbars.add.bind(snackbars,translate("sysconfig_save_ok")))["finally"](overlay.stop.bind(overlay,overlayId))},reset:function(cleanAll){function rebootAction(){return util.factoryNeedReboot?reboot({mode:"factory_force"}):Promise.resolve()}function notifyMobileApp(){$rootScope.dlinkMobileApp&&$rootScope.dlinkMobileApp.isUserInMobileApp()&&$rootScope.dlinkMobileApp.deviceResetStarted()}var confirmMsg=function(){var msg;if(config.mode&&config.mode.name&&config.mode.hasHwModeSwitch)var msg="sysconfig_factory_question_"+config.mode.name;else msg="sysconfig_factory_question";return translate(msg)}();return confirmPromise(confirmMsg).then(function(){var overlayId=overlay.start();return util.reset(cleanAll).then(snackbars.add.bind(snackbars,translate("sysconfig_factory_ok"))).then(notifyMobileApp).then(rebootAction)["catch"](snackbars.add.bind(snackbars,translate("sysconfig_factory_error")))["finally"](overlay.stop.bind(overlay,overlayId))})},reboot:reboot,backup:function(){return _.throttle(util.backup,3e3,{trailing:!1})}(),backupDefault:function(){return _.throttle(util.backupDefault,3e3,{trailing:!1})}(),restore:{url:"/config_restore",useFormData:util.useFormData,prepare:function(cb){util.restorePrepare(config.restore.url,cb)},begin:function(){config.overlay=overlay.start(),$scope.isupload=!1},end:function(data){return overlay.stop(config.overlay),data&&20051==data.status?void alert(translate("sysconfig_invalid_config_mode")):void(data&&data.status?reboot({mode:"restore"}):alert(translate("sysconfig_invalid_config")))},overlay:null},user:{name:"",password:"",confirm:"",list:null,changePassword:function(user,password){if($scope.form_system_password.$valid){var overlayId=overlay.start();util.changePassword(user,password).then(function(){config.user.password="",config.user.confirm="",snackbars.add(translate("sysconfig_password_changed"))}).then(function(){$rootScope.dlinkMobileApp&&$rootScope.dlinkMobileApp.isUserInMobileApp()&&$rootScope.dlinkMobileApp.updatePassword({username:user,password:password})})["catch"](function(msg){var msg=msg||"sysconfig_password_not_changed";snackbars.add(translate(msg))})["finally"](overlay.stop.bind(overlay,overlayId))}},changeLogin:function(){config.user.password="",config.user.confirm=""},addUser:function(){showUserDialog({Username:""})},editUser:function(item){showUserDialog({Username:item.Username,__id:item.__id})},deleteUser:function(items){var names=_.pluck(items,"Username");if(_.contains(names,config.user.name))return void alert(translate("msg_cant_remove_cur_user"));var overlayId=overlay.start();util.deleteUsers(items).then(function(){snackbars.add(translate("msg_rpc_remove_success")),init()})["catch"](snackbars.add.bind(snackbars,translate("msg_rpc_remove_error")))["finally"](overlay.stop.bind(overlay,overlayId))}},mode:{value:null,list:null,change:function(data){var overlayId=overlay.start();util.changeDeviceMode(data).then(snackbars.add.bind(snackbars,translate("msg_rpc_write_success")))["catch"](snackbars.add.bind(snackbars,translate("msg_rpc_write_error")))["finally"](overlay.stop.bind(overlay,overlayId))}},lang:{value:null,list:null,change:function(lang){var lang=_.findKey(translate.langNames,function(value){return value===lang}),overlayId=overlay.start();util.changeLang(lang).then(translate.changeLanguage.bind(translate,lang))["catch"](snackbars.add.bind(snackbars,translate("sysconfig_change_lang_error")))["finally"](overlay.stop.bind(overlay,overlayId))}},webInterface:{data:null,backup:null,isShow:showWebInterface,isModified:function(){return config.webInterface.backup&&!_.isEqual(config.webInterface.backup,config.webInterface.data)},change:function(){var overlayId=overlay.start(),data=_.pick(config.webInterface.data,function(item,key){return item!=config.webInterface.backup[key]});config.webInterface.backup=funcs.deepClone(config.webInterface.data),util.changeWebInterface(data).then(snackbars.add.bind(snackbars,translate("msg_rpc_write_success")))["catch"](snackbars.add.bind(snackbars,translate("msg_rpc_write_error")))["finally"](overlay.stop.bind(overlay,overlayId))}},getConfigResetMessage:function(){var msg;if(config.mode&&config.mode.name&&config.mode.hasHwModeSwitch)var msg="sysconfig_reset_"+config.mode.name;else msg="sysconfig_reset";return translate(msg)},autoreboot:{isShow:!1,data:{},backup:null,isModified:function(){return config.autoreboot.backup&&!_.isEqual(config.autoreboot.backup,config.autoreboot.data)},apply:function(){$scope.form_system_autoreboot.$invalid||util.changeAutoReboot(config.autoreboot.data).then(function(){config.autoreboot.backup=funcs.deepClone(config.autoreboot.data),snackbars.add("msg_rpc_write_success")},function(){snackbars.add("msg_rpc_write_error")})}},autoPingReboot:{data:null,backup:null,isShow:function(){return config.autoPingReboot.backup&&_.size(config.autoPingReboot.backup)},isModified:function(){return config.autoPingReboot.backup&&!_.isEqual(config.autoPingReboot.backup,config.autoPingReboot.data)},change:function(){$scope.form_system_autopingreboot.$invalid||util.changeAutoPingReboot(config.autoPingReboot.data).then(function(){config.autoPingReboot.backup=funcs.deepClone(config.autoPingReboot.data),snackbars.add("msg_rpc_write_success")},function(){snackbars.add("msg_rpc_write_error")})}}};var config=$scope.config,overlay=$scope.overlay.circular;init(),$scope.getPassDesc=function(){return"SuperAdmin"==$scope.config.user.name?"password_description_ttk_superadmin":"password_description_ttk"}}])}();