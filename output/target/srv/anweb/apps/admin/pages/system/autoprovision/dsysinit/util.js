"use strict";!function(){angular.module("app").service("autoProvUtil",["cpe","device","devinfo","funcs",function(cpe,device,devinfo,funcs){function apply(){var diff=funcs.newConfig.makeDiff(__initConfig,config,attrs);return cpe.ApplyDifference(diff)}function getConfig(){return funcs.fetchBranch(config,configPath)}function getStatus(){return funcs.fetchBranch(statusConfig,configPath)}var configPath="Device.Services.Autoprovision.",config=null,attrs=null,__initConfig=null,statusConfig=null;return{pull:function(){function success(response){return config=funcs.buildTree(response[0].result.ParameterList),attrs=funcs.buildTreeAttributes(response[1].result.ParameterList),__initConfig=angular.copy(config),Promise.resolve()}return Promise.all([cpe.GetParameterValues([configPath]),cpe.GetParameterAttributes([configPath])]).then(success,function(){return Promise.reject()})},apply:apply,getConfig:getConfig,getStatus:getStatus,checkStatus:function(){return cpe.SetParameterValues([{Name:configPath+"Check",Value:!0}])},updateStatus:function(){return Promise.all([cpe.GetParameterValues([configPath]),cpe.GetParameterAttributes([configPath])]).then(function(response){return statusConfig=funcs.buildTree(response[0].result.ParameterList),Promise.resolve()},function(){return Promise.reject()})}}}])}();