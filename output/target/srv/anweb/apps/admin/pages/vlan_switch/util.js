"use strict";!function(){angular.module("app").service("VlanUtil",["cpe","cpex","device","funcs",function(cpe,cpex,device,funcs){function makeHelper(){return new Helper(config,attrs)}var config=null,attrs=null,Helper=device.vlan.constructor,paths={network:"Device.Network.","interface":"Device.Network.Interface.",pppClient:"Device.Network.Settings.PPPClient.","switch":"Device.Switch.",deviceMode:"Device.DeviceInfo.DeviceMode",links:"Links.",fw:"Device.Firewall.IPv4.",fwv6:"Device.Firewall.IPv6.",wifiRadio:"Device.WiFi.Radio.*.AccessPoint.",wifiAPProfile:"Device.WiFi.APProfile.*.SSID",usbConns:"Device.USB.Connection."};return{pull:function(){function success(response){return config=funcs.buildTree(response[0].result.ParameterList),attrs=funcs.buildTreeAttributes(response[1].result.ParameterList),attrs.SupportDualLAN=autoconf.BR2_PACKAGE_ANWEB_CUSTOM_TIMDS_34475,funcs.deepClone(config),Promise.resolve()}var configPaths=[paths["switch"],paths.network,paths.deviceMode,paths.links,paths.fw,paths.wifiRadio,paths.wifiRadio,paths.wifiAPProfile];return configPaths=configPaths.concat(paths.fwv6),configPaths=configPaths.concat(paths.usbConns),Promise.all([cpe.GetParameterValues(configPaths),cpe.GetParameterAttributes([paths["switch"],paths.network+"Interface.",paths.network+"Group.",paths.network+"Server.DHCP.",paths.network+"IP.",paths.fw,paths.fwv6])]).then(success)},applyDiff:function(diff){return cpe.ApplyDifference(diff)},makeHelper:makeHelper}}])}();