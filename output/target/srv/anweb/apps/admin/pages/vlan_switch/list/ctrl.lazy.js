"use strict";!function(){angular.module("app").controllerProvider.register("VlanSwitchListCtrl",["$scope","$state","VlanUtil","translate","snackbars","navigationFilter",function($scope,$state,util,translate,snackbars,navFilter){function init(overlayId){function success(){helper=util.makeHelper(),vlan.list=_.sortBy(_.omit(helper.list(),function(e){return _.contains($scope.navRules.BanWanVlansList,e.VID)}),function(e){return e.VID}),vlan.isActivate=!0}util.pull().then(success)["catch"](function(){$state.go("error",{code:"msg_pull_error",message:"msg_error_desc"})})["finally"](function(){overlayId&&overlay.stop(overlayId),$scope.$emit("pageload")})}function remove(items){function error(){$state.go("error",{code:"msg_push_error",message:"msg_error_desc"}),overlay.stop(overlayId)}if("Router"==items[0].Mode&&(hasLAN=_.some(items,function(item){return 1==item.__inst})))return void alert(translate("vlan_delete_last_lanu"));var hasLAN,connections,diff=helper.getRemoveDiff(items);if(diff.errDelete.conns&&diff.errDelete.conns.length)return connections=helper.checkConnections(diff.errDelete.conns),void alert(translate("vlan_need_remove_conns")+": "+connections.join(", "));if(confirm(translate("vlan_delete_answer"))){var overlayId=overlay.start();util.applyDiff(diff.diffConfig).then(function(){snackbars.add("msg_apply_success"),init(overlayId)})["catch"](error)}}$scope.vlan={list:null,isActivate:!1,add:function(){$state.go("^.add")},edit:function(item){$state.go("^.edit",{inxSwitch:item.__switchId,inxInst:item.__inst})},remove:remove,getMiniInfo:function(item){function makeRow(title,info){return{title:title,info:info}}var result=[];return result.push(makeRow(translate("vlan_vid"),item.VID)),item.Ports.Tagged&&result.push(makeRow(translate("vlan_ports_t"),item.Ports.Tagged)),item.Ports.Untagged&&result.push(makeRow(translate("vlan_ports_u"),item.Ports.Untagged)),result}};var helper,vlan=$scope.vlan,overlay=$scope.overlay.circular;$scope.navRules=navFilter.rules()||{},init()}])}();