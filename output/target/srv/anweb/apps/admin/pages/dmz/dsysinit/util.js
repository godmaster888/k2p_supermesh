"use strict";!function(){angular.module("app").service("dmzUtil",["cpe","device","devinfo","funcs",function(cpe,device,devinfo,funcs){function apply(settings){settings.dmz.enable||(settings.dmz.enable_snat=!1);var data=converter.nativeToDsysinit(settings),initData=funcs.deepClone(__initData);initData.dmz.__indexDMZRule&&~initData.dmz.__indexDMZRule.indexOf("+")&&delete initData.dmz.__indexDMZRule,initData.dmz.__indexNATLoopback1&&~initData.dmz.__indexNATLoopback1.indexOf("+")&&delete initData.dmz.__indexNATLoopback1,initData.dmz.__indexNATLoopback2&&~initData.dmz.__indexNATLoopback2.indexOf("+")&&delete initData.dmz.__indexNATLoopback2,initData.superDmz&&~initData.superDmz.__indexSuperDmz.indexOf("+")&&delete initData.superDmz.__indexSuperDmz;var initConfig=converter.nativeToDsysinit(initData),diff=funcs.newConfig.makeDiff(initConfig,data,attrs);return _.isEmpty(diff)?Promise.resolve():cpe.ApplyDifference(diff)}function getConfig(){return config?config:{}}var config=null,attrs=null,__initData=null,constants={rules:"Device.Firewall.IPv4.Rules.",superDmz:"Device.Network.Settings.TwinIP."},converter=device.dmz.converter,configPaths=autoconf.BR2_PACKAGE_ANWEB_TWIN_IP?[constants.rules,constants.superDmz]:[constants.rules];return{pull:function(){function success(response){var data={data:funcs.buildTree(response[0].result.ParameterList),snatFlag:autoconf.BR2_PACKAGE_ANWEB_NAT_LOOPBACK,snatDefaultEnable:autoconf.BR2_PACKAGE_ANWEB_NAT_LOOPBACK_DEFAULT_ENABLED};return attrs=funcs.buildTreeAttributes(response[1].result.ParameterList),config=converter.dsysinitToNative(data),__initData=funcs.deepClone(config),Promise.resolve()}return Promise.all([cpe.GetParameterValues(configPaths),cpe.GetParameterAttributes(configPaths)]).then(success,function(){return Promise.reject()})},apply:apply,getConfig:getConfig,useEnableSNAT:function(){return autoconf.BR2_PACKAGE_ANWEB_NAT_LOOPBACK},disableUseLanIp:function(){return!1}}}])}();