"use strict";!function(){angular.module("app").controllerProvider.register("vpnServerCtrl",["$scope","$state","funcs","ngDialog","vpnServerUtil","translate","devinfo",function($scope,$state,funcs,ngDialog,util,translate,devinfo){function init(){util.pull().then(function(){$scope.vpn.config=util.getConfig(),$scope.servers.list.length=0,$scope.servers.list.push("PPTP"),$scope.servers.list.push("L2TP");var serv=$state.params.servertype?$state.params.servertype:_.first($scope.servers.list);$scope.servers.state=serv,$scope.vpn.data=_.find($scope.vpn.config,{Type:serv}),$scope.vpn.__initData=funcs.deepClone($scope.vpn.data),$scope.vpn.ConnList=util.getConnList(),$scope.vpn.UsersList=util.getUsersList(),$scope.vpn.isActivate=!0,$scope.$emit("pageload")})["catch"](function(){$state.go("error",{code:"msg_pull_error",message:"msg_error_desc"})}),devinfo.once("net").then(function(data){$scope.vpn.lans=_.pluck(data.lan,"ip"),$scope.vpn.gwConnLink=data.ipv4gw?data.ipv4gw.__connection_link:""})}function load(serv){location.href="#vpn/servers?servertype="+serv}function checkUsersRange(){return _.some($scope.vpn.data.Users,function(user){return null!=util.validationClientRange(user.Range.MinAddress,$scope.vpn.data.Clients)})}function authCheck(){var hasSingleAddr=_.some($scope.vpn.data.Users,function(user){return""!=user.Range.MinAddress});return hasSingleAddr?!$scope.vpn.data.PPP.Auth.Enabled||""==$scope.vpn.data.PPP.Auth.OneConnectionPerLogin:!1}function openDialog(pos,user){ngDialog.open({template:"/admin/dialogs/vpn_server/users/dialog.tpl.html",controller:"vpnServerUsersDialogCtrl",data:{user:user,usersList:$scope.vpn.UsersList,usedUsers:_.pluck($scope.vpn.data.Users,"User"),clientRange:$scope.vpn.data.Clients},scope:$scope}).closePromise.then(function(data){data&&data.value&&_.has(data.value,"write")&&(null!=pos?$scope.vpn.data.Users[pos]=data.value.write:$scope.vpn.data.Users.push(data.value.write))})}$scope.vpn={data:null,__initData:null,lans:null,config:null,ConnList:null,UsersList:null,isActivate:!1,wasModified:function(){return $scope.vpn.isActivate&&$scope.vpn.__initData&&(_.size($scope.vpn.__initData)!=_.size($scope.vpn.data)||_.some($scope.vpn.data,function(elem,key){return"Users"==key?elem.length!=$scope.vpn.__initData.Users.length||_.some(elem,function(user,id){var initUser=$scope.vpn.__initData.Users[id];return!initUser||user.__id!=initUser.__id||user.User!=initUser.User||user.Range.MinAddress!=initUser.Range.MinAddress||user.Range.MaxAddress!=initUser.Range.MaxAddress}):!_.isEqual(elem,$scope.vpn.__initData[key])}))},validationRange:function(value,type,param){var data="LAC"==param?$scope.vpn.data.LAC.Range:$scope.vpn.data[param];return util.validationRange(value,type,data)},apply:function(){if(!$scope.form.$invalid){if(!$scope.vpn.data.Users.length)return void alert(translate("vpn_server_users_empty_message"));if(checkUsersRange())return void alert(translate("vpn_server_users_ip_not_range"));if(authCheck())return void alert(translate("vpn_server_users_not_auth"));var overlay=$scope.overlay.circular,overlayId=overlay.start();util.apply($scope.vpn.data).then(init)["catch"](function(){$state.go("error",{code:"msg_push_error",message:"msg_error_desc"})})["finally"](overlay.stop.bind(overlay,overlayId))}},isShow:function(param){return"ListenPort"==param||"MaxConnections"==param?_.has($scope.vpn.data,param):!_.isNull(funcs.fetchBranch($scope.vpn.data,param))},getConnLoginList:function(){return[{name:"act_allow",value:""},{name:"vpn_server_auth_conn_per_login_kill_old",value:"KillOld"},{name:"vpn_server_auth_conn_per_login_kill_new",value:"KillNew"}]},addUser:function(){openDialog(null,{User:"",Range:{MinAddress:"",MaxAddress:""}})},editUser:function(item,key){openDialog(key,item)},removeUsers:function(items,keys){var keys=keys.sort().reverse();_.each(keys,function(key){$scope.vpn.data.Users.splice(key,1)})},getUserName:function(item){var user=_.find($scope.vpn.UsersList,{value:item});return user?user.name:""},getUserIPRange:function(item){return""==item.MinAddress&&""==item.MaxAddress?"auto":""!=item.MaxAddress?item.MinAddress+"/"+item.MaxAddress:item.MinAddress},isEmptyUsers:function(type){return $scope.vpn.isActivate?"all"==type?0==$scope.vpn.UsersList.length:0==$scope.vpn.data.Users.length:!1},addUserDisabled:function(){return $scope.vpn.data.Users.length==$scope.vpn.UsersList.length},PolicyList:[{name:"act_allow",value:"ACCEPT"},{name:"act_deny",value:"DROP"}],AuthList:[{name:"auto",value:""},{name:"vpn_server_auth_refuse",value:"refuse"},{name:"vpn_server_auth_require",value:"require"}],mppeDisabled:function(){return!($scope.vpn.data.PPP.Auth.Enabled&&("require"==$scope.vpn.data.PPP.Auth.MSCHAP||"require"==$scope.vpn.data.PPP.Auth.MSCHAPv2))||_.some($scope.vpn.data.PPP.Auth,function(elem,key){return"require"==elem&&"MSCHAP"!=key&&"MSCHAPv2"!=key})},validationAssignedIP:function(ip){if(""==ip)return null;var patt=/^(0|[1-9]?\d|1\d\d|2[0-4]\d|25[0-5])\.(0|[1-9]?\d|1\d\d|2[0-4]\d|25[0-5])\.(0|[1-9]?\d|1\d\d|2[0-4]\d|25[0-5])\.([1-9]|[1-9]{1}\d|1\d\d|2[0-4]\d|25[0-4])$/;return patt.test(ip)?$scope.vpn.data.Firewall&&"DROP"==$scope.vpn.data.Firewall.VPNtoFWPolicy&&_.contains($scope.vpn.lans,ip)?"apps_partner_ip_is_router_ip":null:"msg_invalid_ipv4"},getLabel:function(param,type){var arrow="all"==type?" <-> ":"left"==type?" <- ":" -> ";return translate("vpn_nav")+arrow+translate(param)},validationDns:function(dns){return dns&&dns==$scope.vpn.data.PPP.DNS.Primary?"msg_error_value_is_not_uniq":null}},$scope.servers={list:[],state:null,change:function(serv){$scope.servers.state=serv,$scope.vpn.data=_.find($scope.vpn.config,{Type:serv}),$scope.vpn.__initData=funcs.deepClone($scope.vpn.data),load(serv),$state.go(".",{servertype:serv},{notify:!1})},load:load},init(),$scope.$watch("vpn.data.PPP.DNS.UserPeerDNS",function(){var index,addrs,_backupPrimDNS,_backupSecDNS;$scope.vpn.data&&(index=$scope.vpn.gwConnLink?_.findKey($scope.vpn.data.DNS,{Origin:$scope.vpn.gwConnLink}):null,index=index||$scope.vpn.data.DNS.max_instance,addrs=$scope.vpn.data.DNS[index]?_.toArray($scope.vpn.data.DNS[index].Address):[],_backupPrimDNS=addrs[0]?addrs[0].IPAddress:"",_backupSecDNS=addrs[1]?addrs[1].IPAddress:"",$scope.vpn.data.PPP.DNS.UserPeerDNS&&($scope.vpn.data.PPP.DNS.Primary=$scope.vpn.__initData.PPP.DNS.Primary=_backupPrimDNS,$scope.vpn.data.PPP.DNS.Secondary=$scope.vpn.__initData.PPP.DNS.Secondary=_backupSecDNS))})}])}();