"use strict";!function(){angular.module("app").controller("EntryPinCtrl",function($scope,snackbars,translate,USBModemUtil){function getAttempts(){$scope.AuthLabel=data.pin.Status,$scope.dialogName=translate("PIN"==data.pin.Status?"usb_modem_pin_input":"usb_modem_pin_puk_input");var attempt="PIN"==data.pin.Status?data.pin.PIN:data.pin.PUK;return translate("usb_modem_pin_attempt")+": "+(-1!=attempt?attempt:translate("unknown"))}function saveCb(response){var isSuccess=_.find(response.result.ParameterList,{Name:"Success"});isSuccess.Value?$scope.closeThisDialog({success:!0}):errorCode()}function errorPush(){snackbars.add("msg_rpc_write_error")}function errorCode(){snackbars.add("PIN"==data.pin.Status?"usb_modem_pin_request_wrong":"usb_modem_pin_puk_request_wrong");var input={modem:data.modem,sim:data.sim,param:"PIN"};util.updateSIMInfo(input).then(function(response){"PIN"==data.pin.Status&&"PUK"==response.Status&&($scope.PIN=""),data.pin=response,0==data.pin.PUK&&$scope.closeThisDialog(),$scope.Attempts=getAttempts()},errorPush)}$scope.PIN="",$scope.NewPIN="",$scope.Reset=!0,$scope.isConfirm=!0;var data=angular.copy($scope.ngDialogData.data);$scope.AuthLabel="",$scope.Attempts=getAttempts();var util=USBModemUtil;$scope.validation=function(value){return"PUK"==data.pin.Status?$scope.validationPUK(value):void $scope.validationPIN(value)},$scope.validationPIN=function(pin){if(!pin)return null;var re=/^[0-9]{4,8}$/g;return re.test(pin)?null:"usb_modem_pin_code_wrong"},$scope.validationPUK=function(puk){if(!puk)return null;var re=/^[0-9]{8}$/g;return re.test(puk)?null:"usb_modem_puk_code_wrong"},$scope.checkPINConfirm=function(value){$scope.isConfirm=value},$scope.isButtonDisabled=function(){return $scope.entryPIN.$invalid||""==$scope.PIN||$scope.needPUK()&&(!$scope.isConfirm||""==$scope.NewPIN)},$scope.needPUK=function(){return"PUK"==data.pin.Status},$scope.save=function(){var overlay=$scope.overlay.circular,overlayId=overlay.start(),input={modem:data.modem,sim:data.sim,status:data.pin.Status,pin:$scope.PIN,newPin:$scope.NewPIN};util.entryPIN(input).then(saveCb)["catch"](errorPush)["finally"](overlay.stop.bind(overlay,overlayId))}})}();