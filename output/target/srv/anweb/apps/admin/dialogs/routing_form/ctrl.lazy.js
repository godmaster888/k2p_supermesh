"use strict";angular.module("app").controllerProvider.register("RoutingDialogCtrl",function($scope,funcs){function getInterfaceList(){if(!dialog.route)return[];var version=dialog.route.IPVersion,table=dialog.route.Table;return _.filter(config.Ifaces,function(item){var tableInfo;if(!_.isEmpty(table)&&(tableInfo=_.find(config.TableList[version],function(t){return t.Link==table}))){if(/Connection/.test(tableInfo.Origin))return"auto"==item.Value||item.Value==tableInfo.Iface?!0:!1;if(/Group/.test(tableInfo.Origin))return"auto"==item.Value||item.Value==tableInfo.Lan||_.contains(tableInfo.Wans,item.Value)||_.contains(tableInfo.VPN,item.Value)?!0:!1}return"All"==item.Version?!0:item.Version==version?!0:!1})}function isConfict(){return dialog.route?_.some(config.Routes,function(elem){return elem.__id==id?!1:elem.IPAddress==dialog.route.IPAddress&&elem.SubnetMask==dialog.route.SubnetMask&&(!autoconf.BR2_PACKAGE_ANWEB_DSYSINIT||elem.Table==dialog.route.Table)}):!1}function isSavingDisabled(){return!isNew&&__backupRoute&&_.isEqual(__backupRoute,dialog.route)}var config=$scope.ngDialogData.config,id=$scope.ngDialogData.id,isNew=$scope.ngDialogData.isNew;$scope.dialog={header:isNew?"act_adding_of?name=routing_route&abr=name":"act_editing_of?name=routing_route&abr=name",route:null,protocolList:null,tableList:null,save:function(){(function(){var requiredFields=["IPAddress"];return"IPv4"===dialog.route.IPVersion&&requiredFields.push("SubnetMask"),!$scope.routing_form.$invalid&&!isConfict()&&!function(){return requiredFields.some(function(field){return!dialog.route[field]})}()})()&&$scope.closeThisDialog(dialog.route)},getInterfaceList:getInterfaceList,gatewayRequired:function(){return"auto"==dialog.route.Iface},isConfict:isConfict,isSavingDisabled:isSavingDisabled,showEnabled:function(){return autoconf.BR2_PACKAGE_ANWEB_DSYSINIT},checkGateway:function(value){return value&&!funcs.is.ipv6(value)?"msg_invalid_ipv6":null},changeTable:function(){var ifaces=getInterfaceList(),ifaceValues=_.pluck(ifaces,"Value");_.contains(ifaceValues,dialog.route.Iface)||(dialog.route.Iface=ifaceValues[0])}};var dialog=$scope.dialog,backup={},__backupRoute=null;!function(){function getDefaultTable(){if(!config.TableList)return"";var initTable=_.find(config.TableList.IPv4,function(c){return"Device.Network.Group.1."==c.Origin});return initTable?initTable.Link:config.TableList.IPv4[0]?config.TableList.IPv4[0].Link:""}dialog.route=isNew?function(){return{Enable:!0,Iface:"auto",IPVersion:"IPv4",IPAddress:"",SubnetMask:"",GatewayAddress:"",Metric:null,Table:getDefaultTable()}}():function(id){return angular.copy(_.find(config.Routes,function(r){return r.__id==id}))}(id),dialog.protocolList=config.ProtocolList,dialog.tableList=config.TableList?config.TableList[dialog.route.IPVersion]:null,__backupRoute=angular.copy(dialog.route)}(),$scope.$watch("dialog.route.IPVersion",function(version,oldVersion){backup[oldVersion]=angular.copy({IPAddress:dialog.route.IPAddress,SubnetMask:dialog.route.SubnetMask,GatewayAddress:dialog.route.GatewayAddress}),backup[version]?(dialog.route.IPAddress=angular.copy(backup[version].IPAddress),dialog.route.SubnetMask=angular.copy(backup[version].SubnetMask),dialog.route.GatewayAddress=angular.copy(backup[version].GatewayAddress)):(dialog.route.IPAddress="",dialog.route.SubnetMask="",dialog.route.GatewayAddress=""),dialog.tableList=config.TableList?config.TableList[dialog.route.IPVersion]:null,dialog.tableList&&(tableLinks=_.pluck(dialog.tableList,"Link"),_.contains(tableLinks,dialog.route.Table)||(dialog.route.Table=dialog.tableList[0].Link));var tableLinks,ifaceList=getInterfaceList(),ifaceValues=_.pluck(ifaceList,"Value");_.contains(ifaceValues,dialog.route.Iface)||(dialog.route.Iface=ifaceValues[0])}),$scope.getIfaceKey=function(name){return"routing_auto_iface"==name?"auto":name}});