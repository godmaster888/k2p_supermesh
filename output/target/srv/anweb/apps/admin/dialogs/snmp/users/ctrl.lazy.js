"use strict";function SnmpUserDialogCtrl($scope,funcs,snackbars,snmpUtil,translate){function error(){$state.go("error",{code:"msg_pull_error",message:"msg_error_desc"})}function init(){user=helper.getUser(id)||helper.getDefUser(),workModel.user=user,workModel.authProto=_.map(_.union(helper.getAuthProto(),[""]),function(proto){return{value:proto,name:proto?"snmp_user_auth_proto_"+proto.toLowerCase():"snmp_user_proto_off"}}),workModel.cryptoProto=_.map(_.union(helper.getCryptoProto(),[""]),function(proto){return{value:proto,name:proto?"snmp_user_crypto_proto_"+proto.toLowerCase():"snmp_user_proto_off"}}),initModel={user:funcs.deepClone(workModel.user)},workModel.isActivate=!0,$scope.$emit("pageload")}function isShow(elem){if(!user)return!1;switch(elem){case"auth_pass":return!!user.auth_proto;case"priv_proto":return!!user.auth_proto;case"priv_pass":return user.auth_proto&&user.priv_proto}return!0}function wasModified(){return workModel.isActivate&&!_.isEqual(workModel.user,initModel.user)}function isFormValid(){return $scope.dialog_form.$valid}var helper=$scope.ngDialogData.helper,id=$scope.ngDialogData.id,noNeedPull=!!$scope.ngDialogData.utilNoNeedPull,user=null,initModel=null,workModel={user:user,isNew:!id&&0!=id,isActivate:!1,header:"snmpUser"+(id||0==id?"Edit":"Add")};$scope.model=workModel,$scope.model.getHeader=function(){return"snmpUserAdd"==$scope.model.header?translate("act_adding_of?name=snmp_user_oc&abr=name"):"snmpUserEdit"==$scope.model.header?translate("act_editing_of?name=snmp_user_oc&abr=name"):void 0},$scope.funcs={save:function(){isFormValid()&&(workModel.action="saved",$scope.closeThisDialog(workModel))},isSavingDisabled:function(){return!workModel.isNew&&!wasModified()},isShow:isShow},$scope.valid={password:function(pass){return pass&&pass.length<8?"msg_input_lenght_less_min":null},name:function(name){var users=helper.getUsersList();return _.some(users,function(r,c){return r.user==name&&c!=id})?"msg_error_value_is_not_uniq":name.length>16?"msg_invalid_name_length":null},subtree:function(subtree){return _.has(workModel.user,"subtree_length")&&!_.isEmpty(subtree)&&subtree.length>workModel.user.subtree_length?"msg_input_lenght_more_max":null}},noNeedPull?init():snmpUtil.pull().then(init,error)}angular.module("app").controllerProvider.register("SnmpUserDialogCtrl",SnmpUserDialogCtrl);