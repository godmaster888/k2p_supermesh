"use strict";function ScheduleFormDialogCtrl($scope,$rootScope,translate,scheduler,snackbars,$state,device,funcs,cpe){function init(){function setModeName(){var find=_.find($scope.dialog.templates.list,function(item){return item.value==rule.genInfo.cron});find?($scope.dialog.mode.name="simple",$scope.dialog.templates.current=find.value):$scope.dialog.mode.name="advanced"}function getAddingSchedules(config){var result=[],elems=funcs.fetchBranch(config,"Device.System.Scheduler.Config.");return _.each(elems,function(item){item.Cron&&result.push({Cron:item.Cron,Duration:item.Duration})}),result}function pull(){return Promise.all([cpe.GetParameterValues(["Device.System.Scheduler.Config"]),cpe.GetParameterAttributes(["Device.System.Scheduler.Config"])])}var templates,findTemplate;if(dg.templates.list=function(){return[{value:"* * * * *",cronWithDuration:"* * * * *",text:"sched_every_minute",templateEditOptions:!0},{value:"0 * * * *",cronWithDuration:"0 * * * *",text:"sched_every_hour",templateEditOptions:!0},{value:"0 0 * * *",cronWithDuration:"0 0 * * *",text:"sched_every_day",templateEditOptions:!0},{value:"0 0 * * 1",cronWithDuration:"0 0 * * 1",text:"sched_every_week",templateEditOptions:!0},{value:"0 0 1 * *",cronWithDuration:"0 0 1 * *",text:"sched_every_month",templateEditOptions:!0}]}(),function(){return cpe.GetParameterValues(["Device.System.Time"])}().then(function(data){var config=funcs.buildTree(data.result.ParameterList),systemTime=config.Device.System.Time;dg.currentTimeDate={month:"sched_st_"+helper.date.getNameMonth(systemTime.Month),day:systemTime.Day,hour:helper.date.doubleFormat(""+systemTime.Hour),minute:helper.date.doubleFormat(""+systemTime.Minute),year:systemTime.Year}}),branches){var _success=function(response){config=funcs.buildTree(response[0].result.ParameterList),attrs=funcs.buildTreeAttributes(response[1].result.ParameterList);var inxsSchedules,inxSchedule,rule,schedule,interval,branchInx,arrExistingSchedules,initRulesConfig=config.Device.System.Scheduler.Config;helper=device.schedule.helper(initRulesConfig);var rulesConfig=helper.convertRules();_.keys(rulesConfig).length?(addingSchedules=getAddingSchedules(config),usedBranchSchedules=helper.getUsedBranchSchedules(config,branches),inxsSchedules=_.keys(usedBranchSchedules),dg.branches.usingInSchedules=!!inxsSchedules.length,1===inxsSchedules.length&&(inxSchedule=inxsSchedules[0],rule=rulesConfig[inxSchedule],schedule=usedBranchSchedules[inxSchedule],interval=rule.interval,dg.branches.nowSchedule.push(scheduler.translateSchedule(interval)),dg.templates.current=rule.cronWithDuration,dg.templates.currentDuration=rule.genInfo.duration,dg.templates.name=rule.name,branchInx=_.findKey(schedule.Branches,function(branch){return-1!==branches.indexOf(branch.Link)}),dg.branches.enableAtStart=rule.genInfo.tasks[branchInx].EnableAtStart),arrExistingSchedules=[],_.each(rulesConfig,function(item){var ind,addToTemplate,existingSchedule;item&&(ind=dg.scheduleRules.length,dg.scheduleRules[ind]=item,dg.scheduleRules[ind].interval=scheduler.translateSchedule(item.interval),dg.scheduleRules[ind].duration=scheduler.translateSchedule(item.duration.toString()),null===dg.branches.scheduleId&&(dg.branches.scheduleId=item.id),addToTemplate=!0,_.each(dg.templates.list,function(listItem){listItem.value===item.genInfo.cron&&listItem.duration&&listItem.duration==item.genInfo.duration&&(listItem.duration=item.genInfo.duration,listItem.idSchedule=item.id,listItem.cronWithDuration=item.cronWithDuration,listItem.name=item.name,addToTemplate=!1)}),addToTemplate&&(existingSchedule={value:item.genInfo.cron,text:scheduler.translateSchedule(helper.convertCronToUserString(item.cronWithDuration,addingSchedules)),duration:item.genInfo.duration,cronWithDuration:item.cronWithDuration,name:item.name,idSchedule:item.id},arrExistingSchedules.push(existingSchedule)))}),_.each(arrExistingSchedules,function(arrElem){dg.templates.list.push(arrElem)}),setTimeDate(dg.templates.current)):(dg.branches.addSchedule=!0,dg.scheduleRules=0),dg.branches.isLoaded=!0};dg.branches.addBranche=!0,dg.manual.enable=!0,pull().then(_success).then(changeStringSchedule)}if(commandName)if(dg.commands.selected=!0,dg.header="sched_selection",dg.manual.enable=!0,"reboot"==commandName&&dg.templates.list.splice(0,2),"exec"!=commandName||_.isEmpty(modem)||dg.templates.list.splice(0,1),command.length){dg.commands.rule=command;var templates=dg.templates;findTemplate=_.find(templates.list,function(temp){return temp.value===command[0].Cron}),findTemplate||templates.list.push({value:command[0].Cron,text:scheduler.translateSchedule(helper.convertCronToUserString(command[0].Cron))}),templates.current=command[0].Cron}else templates=dg.templates,templates.current=templates.list[0].value;else rule&&rule.genInfo?(dg.manual.duration=rule.genInfo.duration,dg.manual.name=rule.name,convertToDurationUser(),dg.manual.enable="on"===rule.state,setTimeDate(rule.genInfo.cron),setModeName(),_.keys(rule.genInfo.tasks).length>1&&(dg.tasks.noEmpty=!0,_.each(rule.genInfo.tasks,function(item){var task,exist;item.Link&&(task=scheduler.getTask(item.Link,item.rule),exist=!1,_.each(dg.tasks.list,function(item){item.Name===task.Name&&(item.count++,exist=!0)}),exist||(task.count=1,dg.tasks.list.push(task)))})),config&&(addingSchedules=getAddingSchedules(config)),"on"===rule.status&&(dg.manual.enable=!0),__backupRule=angular.copy(dg.manual)):(dg.mode.name="simple",dg.templates.current=dg.templates.list[2].value,dg.manual.duration="30",config&&(addingSchedules=getAddingSchedules(config)),isNew=!0)}function setTimeDate(cron){cron=cron.split(" ");var templateOptions,allowEdit,man=$scope.dialog.manual;man.min=cron[0],man.hour=cron[1],man.day=cron[2],man.month=cron[3],man.weekDay=cron[4],"simple"==$scope.dialog.mode.name&&(templateOptions=$scope.dialog.templates.options={},allowEdit=_.find($scope.dialog.templates.list,function(item){return item.value==cron.join(" ")&&item.templateEditOptions}),allowEdit&&("*"!=man.min&&(templateOptions.setMin=!0),"*"!=man.hour&&(templateOptions.setHour=!0),"*"!=man.day&&(templateOptions.setDay=!0),"*"!=man.weekDay&&(templateOptions.setWeekDay=!0,convertCronToWeekDays()))),checkDurationCorrect(),$scope.dialog.branches.addBranche&&$scope.setAlreadyExistingSchedule(cron.join(" "),dg.templates.currentDuration)}function convertToDurationCron(){var days=$scope.dialog.durationSett.days,hours=$scope.dialog.durationSett.hours,min=$scope.dialog.durationSett.min,sec=$scope.dialog.durationSett.sec;$scope.dialog.manual.duration=86400*days+3600*hours+60*min+sec,$scope.dialog.durationSett.notSetDurationErr=$scope.dialog.manual.duration<=0?!0:!1}function convertToDurationUser(){var duration=$scope.dialog.manual.duration;if(duration){var days=0,hours=0,sec=0,min=0;$scope.dialog.durationSett.enable=0==duration?!1:!0,duration>=86400&&(days=parseInt(duration/86400),duration%=86400),duration>=3600&&(hours=parseInt(duration/3600),duration%=3600),duration>=60&&(min=parseInt(duration/60),duration%=60),duration>0&&(sec=duration),$scope.dialog.durationSett.days=days,$scope.dialog.durationSett.hours=hours,$scope.dialog.durationSett.min=min,$scope.dialog.durationSett.sec=sec}}function checkDurationCorrect(){var weekDaysArr,nwMax,durationSett=$scope.dialog.durationSett,constraints=durationSett.constraints;durationSett.sec,durationSett.min,durationSett.hours,durationSett.days;var cMin=$scope.dialog.manual.min,cHour=$scope.dialog.manual.hour,cDay=$scope.dialog.manual.day,cMonth=$scope.dialog.manual.month,cWeek=$scope.dialog.manual.weekDay,man=$scope.dialog.manual;_.each(constraints,function(item){item.status=!0,item.nwMax=null}),constraints.showDay.nwMax=364,"*"!=cWeek&&(constraints.showDay.nwMax=7,weekDaysArr=cWeek.split(","),weekDaysArr.length>1&&(nwMax=7,_.each(weekDaysArr,function(numWeek,i,arr){if(0!=i){var newNwMax=arr[i]-arr[i-1];nwMax=nwMax>newNwMax?newNwMax:nwMax}}),nwMax-1==0?(constraints.showDay.status=!1,man.duration=man.duration>86399?30:man.duration):constraints.showDay.nwMax=nwMax-1)),"*"==cMin&&"*"==cHour?(constraints.showDay.status=!1,constraints.showHour.status=!1,constraints.showMin.status=!1,man.duration=man.duration>59?30:man.duration):"*"!=cMin&&"*"==cHour&&"*"==cDay&&"*"==cMonth&&"*"==cWeek?(constraints.showDay.status=!1,constraints.showHour.status=!1,man.duration=man.duration>3599?30:man.duration):"*"!=cMin&&"*"!=cHour&&"*"==cDay&&"*"==cMonth&&"*"==cWeek?constraints.showDay.status=!1:"*"!=cMin&&"*"!=cHour&&"*"!=cDay&&"*"==cMonth&&"*"==cWeek&&(constraints.showDay.nwMax=30)}function save(){function finish(){$scope.closeThisDialog($scope.dialog),overlay.stop(overlayId),isNeedReload&&$state.reload()}if(!$scope.form.$invalid){var cmdHelper,newConfigCommands,diff,newRule,enableAtStart,branchesLink,initRule,schedule,newConfig,overlayId=overlay.start(),id=rule?rule.id:dg.branches.selectExistingSchedule?dg.branches.selectExistingSchedule:null;return commandName?(cmdHelper=helper.commands(),newConfigCommands=cmdHelper.getConfigCmd($scope.dialog.manual,config,$scope.dialog.commands.rule,commandName),diff=helper.getDiffRule(config,newConfigCommands,attrs)):(dg.branches.addBranche?branches.length&&(enableAtStart=dg.branches.enableAtStart,branchesLink=_.map(branches,function(link){return{Link:link,EnableAtStart:enableAtStart}}),initRule=dg.branches.isEditable?dg.manual:null,schedule=usedBranchSchedules&&dg.branches.selectExistingSchedule?usedBranchSchedules[id]:null,newRule=helper.getRule(initRule,branchesLink,schedule)):newRule=helper.getRule(dg.manual),newConfig=helper.getRemoveBranchConfig(config,usedBranchSchedules,branches),newConfig=helper.getConfig(newRule,newConfig,id),diff=helper.getDiffRule(config,newConfig,attrs)),_.keys(diff).length?void applyDiff(diff).then(success,error).then(finish):(success(),void finish())}}function applyDiff(diff){return cpe.ApplyDifference(diff)}function deleteBranches(){function finish(){$scope.closeThisDialog("del"),overlay.stop(overlayId),isNeedReload&&$state.reload()}var overlayId=$rootScope.overlay.circular.start(),newConfig=helper.getRemoveBranchConfig(config,usedBranchSchedules,branches),diff=helper.getDiffRule(config,newConfig,attrs);applyDiff(diff).then(success)["catch"](error)["finally"](finish)}function deleteCmd(){function finish(){$scope.closeThisDialog(null),overlay.stop(overlayId),isNeedReload&&$state.reload()}var overlayId=$rootScope.overlay.circular.start(),cmdHelper=helper.commands(),deleteCmdConfig=cmdHelper.getDeleteCmdConfig(config,command),diff=helper.getDiffRule(config,deleteCmdConfig,attrs);applyDiff(diff).then(success)["catch"](error)["finally"](finish)}function success(){snackbars.add("msg_rpc_write_success")}function error(){snackbars.add("msg_rpc_write_error")}function changeStringSchedule(){var cronStr,stringInterval,man=dg.manual;(function(){return null===dg.valid.rangeNumbers(man.min,0,59)&&null===dg.valid.rangeNumbers(man.hour,0,23)&&null===dg.valid.rangeNumbers(man.day,1,31)&&null===dg.valid.rangeNumbers(man.month,1,12,"m")&&null===dg.valid.rangeNumbers(man.weekDay,0,6,"w")})()?(cronStr=helper.valid.sort(man.min)+" "+helper.valid.sort(man.hour)+" "+helper.valid.sort(man.day)+" "+helper.valid.sort(man.month,"month")+" "+helper.valid.sort(man.weekDay,"weekDay"),stringInterval=helper.convertCronToUserString(cronStr),dg.branches.addBranche&&($scope.checkAlreadyAdding(),dg.branches.isEditable=isEditableSchedule()),dg.stringInterval=scheduler.translateSchedule(stringInterval),checkDurationCorrect()):dg.stringInterval=""}function convertCronToWeekDays(){if("*"!=$scope.dialog.manual.weekDay){var selectedCron=$scope.dialog.manual.weekDay.split(","),templates=$scope.dialog.templates;templates.selectedWeekDays=[],_.each(selectedCron,function(num){var item=_.find($scope.dialog.templates.weekdays,function(elem){return elem.value==num});templates.selectedWeekDays.push({item:item,key:num-1})})}}function isDisabledSave(){return _.isEqual(__backupRule,dg.manual)||!$scope.form.$valid||$scope.checkAlreadyAdding()&&isNew}function selectSchedule(id){id&&(_.each($scope.dialog.scheduleRules,function(item){item.id==id&&($scope.dialog.branches.scheduleInfo.enable=item.state,$scope.dialog.branches.scheduleInfo.duration=item.duration)}),$scope.dialog.branches.scheduleId=id)}function isEditableSchedule(){var schedule,links,result=!0,idSchedule=dg.branches.selectExistingSchedule;return idSchedule&&(schedule=_.findWhere(dg.scheduleRules,{id:idSchedule}),schedule&&schedule.tasks>0&&(links=_.chain(schedule.genInfo.tasks).mapObject(function(task){return task.Link}).values().without(void 0,"").value(),result=!_.difference(links,branches).length)),result}var data=$scope.ngDialogData,rule=data.rule,attrs=data.attrs,config=data.config,branches=data.branches,command=data.command,commandName=data.nameCmd,ruleName=data.name,isNeedReload=data.isNeedReload,modem=data.modem,helper=device.schedule.helper(),__backupRule=null,overlay=$rootScope.overlay.circular,isNew=!1,addingSchedules={},usedBranchSchedules={};_.isUndefined(isNeedReload)&&(isNeedReload=!0),$scope.dialog={manual:{min:null,hour:null,day:null,month:null,weekDay:null,duration:null,name:"",enable:!1,args:{}},durationSett:{sec:30,min:0,hours:0,days:0,enable:!0,notSetDurationErr:!1,constraints:{showDay:{status:!0,nwMax:null},showHour:{status:!0,nwMax:null},showMin:{status:!0,nwMax:null}}},currentTimeDate:{month:null,day:null,hour:null,minute:null,year:null},templates:{current:"",currentDuration:"",list:null,options:{},weekdays:[{label:"sched_short_mon",value:"1"},{label:"sched_short_tue",value:"2"},{label:"sched_short_wed",value:"3"},{label:"sched_short_thu",value:"4"},{label:"sched_short_fri",value:"5"},{label:"sched_short_sat",value:"6"},{label:"sched_short_sun",value:"0"}],selectedWeekDays:[]},tasks:{noEmpty:!1,list:[]},mode:{name:"simple",list:[{label:translate("wan_simple_mode"),value:"simple"},{label:translate("wan_advanced_mode"),value:"advanced"}],update:function(){var temp=$scope.dialog.templates;temp.current||"simple"!=$scope.dialog.mode.name||(temp.current=temp.list[0].value),"simple"==$scope.dialog.mode.name&&convertCronToWeekDays()}},valid:{rangeNumbers:helper.valid.checkRange,checkDate:helper.valid.checkCorrectDate},close:function(){$scope.closeThisDialog(null)},stringInterval:"",isDisabledSave:isDisabledSave,save:save,branches:{addBranche:!1,isLoaded:!1,selectSchedule:selectSchedule,scheduleId:null,scheduleInfo:{enable:!1,duration:null},selectExistingSchedule:null,isEditable:!0,warning:{elems:[]},enableAtStart:!0,enableAtStartModes:function(){switch(ruleName){case"radioEnable":return[{name:"sched_act_radio_enable",value:!0},{name:"sched_act_radio_disable",value:!1}];case"ssidEnable":return[{name:"sched_act_broadcast_enable",value:!0},{name:"sched_act_broadcast_disable",value:!1}];default:return[{name:"sched_act_rule_enable",value:!0},{name:"sched_act_rule_disable",value:!1}]}}(),addSchedule:!1,usingInSchedules:null,nowSchedule:[],changeMode:function(){var branches=$scope.dialog.branches;branches.addSchedule=!branches.addSchedule},deleteBranches:deleteBranches},scheduleRules:[],header:"sched_nav",isOnlyBranch:!1,commands:{selected:!1,rule:[],deleteCmd:deleteCmd}};var dg=$scope.dialog;$scope.$watch("dialog.manual.min",changeStringSchedule),$scope.$watch("dialog.manual.hour",changeStringSchedule),$scope.$watch("dialog.manual.day",changeStringSchedule),$scope.$watch("dialog.manual.month",changeStringSchedule),$scope.$watch("dialog.manual.weekDay",changeStringSchedule),$scope.$watch("dialog.branches.scheduleId",selectSchedule),$scope.$watch("dialog.templates.selectedWeekDays",function(newValue){newValue.length&&($scope.dialog.manual.weekDay="",_.each(newValue,function(item){$scope.dialog.manual.weekDay.length&&($scope.dialog.manual.weekDay+=","),$scope.dialog.manual.weekDay+=item.item.value}),$scope.dialog.manual.weekDay=$scope.dialog.manual.weekDay.split(",").sort().join(","),checkDurationCorrect())},!0),$scope.$watch("dialog.durationSett.sec",convertToDurationCron),$scope.$watch("dialog.durationSett.min",convertToDurationCron),$scope.$watch("dialog.durationSett.hours",convertToDurationCron),$scope.$watch("dialog.durationSett.days",convertToDurationCron),$scope.$watch("dialog.manual.duration",convertToDurationUser),$scope.$watch("dialog.templates.current",function(newValue){newValue&&setTimeDate(newValue)}),init(),$scope.setAlreadyExistingSchedule=function(cronStr){var man=$scope.dialog.manual,tempList=$scope.dialog.templates.list,rule=null,currenTemp=$scope.currenTemplate=_.find(tempList,function(item){return item.cronWithDuration==cronStr});$scope.dialog.scheduleRules&&(rule=$scope.dialog.scheduleRules.filter(function(item){return item.genInfo.cron==cronStr})[0]),rule&&($scope.dialog.isOnlyBranch=rule.tasks?!1:!0),currenTemp&&"undefined"!=typeof currenTemp.duration?(man.duration=currenTemp.duration,man.name=currenTemp.name,$scope.dialog.branches.selectExistingSchedule=currenTemp.idSchedule):(man.duration=man.duration?man.duration:30,$scope.dialog.branches.selectExistingSchedule=null)},$scope.checkAlreadyAdding=function(){if(addingSchedules.length<1)return!1;var t=$scope.dialog.manual,nowCron={cron:t.min+" "+t.hour+" "+t.day+" "+t.month+" "+t.weekDay,duration:t.duration},result=!1;return _.each(addingSchedules,function(item){item.Cron==nowCron.cron&&(result=rule&&rule.genInfo.cron==nowCron.cron&&rule.genInfo.duration==nowCron.duration?!1:item.Duration!=nowCron.duration||$scope.currenTemplate&&$scope.currenTemplate.value==item.Cron&&$scope.currenTemplate.duration==item.Duration?!1:!0)}),result},$scope.getText=function(template){return _.has(template,"name")&&""!==template.name?template.name:_.has(template,"name")&&""===template.name||!_.has(template,"name")?template.text:void 0},$scope.goToTaskPage=function(href){href&&($scope.closeThisDialog(null),$state.go(href))}}ScheduleFormDialogCtrl.$inject=["$scope","$rootScope","translate","scheduler","snackbars","$state","device","funcs","cpe"];