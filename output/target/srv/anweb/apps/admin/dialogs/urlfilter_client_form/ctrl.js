"use strict";function UrlFilterClientFormDialogCtrl($scope,translate){function isNotUniqRule(){var useRules=getUseRules();return _.some(useRules,function(rule){return rule.mac.toUpperCase()==$scope.dialog.rule.mac.toUpperCase()})}function getUseMac(withoutIndex){var result=_.map(clientsList,function(elem,index){return index!=withoutIndex?elem.mac:void 0});return _.compact(result)}function getUseRules(){var useMac=getUseMac(index);return _.map(useMac,function(elem){return{mac:elem}})}function wasModified(){return __backupRule&&!_.isEqual(__backupRule,$scope.dialog.rule)}var rule=$scope.ngDialogData.rule,index=$scope.ngDialogData.inx;$scope.ngDialogData.client;var clientsList=$scope.ngDialogData.clientsList;$scope.dialog={header:"",action:null,rule:null,save:function(){if($scope.form.$valid){var changes={rule:$scope.dialog.rule,id:index,action:"save"};$scope.closeThisDialog(changes)}},remove:function(){var changes={rule:$scope.dialog.rule,id:index,action:"remove"};$scope.closeThisDialog(changes)},close:function(){$scope.closeThisDialog(null)},getUseRules:getUseRules,isDisabledSave:function(){return"edit"==$scope.dialog.action&&!wasModified()||isNotUniqRule()},isNotUniqRule:isNotUniqRule,wasModified:wasModified};var __backupRule=null;!function(){$scope.dialog.header=translate("client"),_.isUndefined(index)?($scope.dialog.action="add",$scope.dialog.rule=$scope.dialog.rule={note:"",mac:""}):($scope.dialog.action="edit",$scope.dialog.rule=rule,__backupRule=angular.copy($scope.dialog.rule))}()}UrlFilterClientFormDialogCtrl.$inject=["$scope","translate","device"];